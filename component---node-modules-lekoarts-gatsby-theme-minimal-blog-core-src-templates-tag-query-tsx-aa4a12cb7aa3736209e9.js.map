{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"names":["BlogListItem","post","showTags","mb","a","as","Link","to","slug","sx","fontWeight","fontSize","color","title","mt","date","tags","Fragment","Listing","posts","className","map","key","Tag","pageContext","useSiteMetadata","tagsPath","basePath","name","alignItems","justifyContent","flexFlow","variant","replaceSlashes","TagComponent","data","allPost","nodes","query","ItemTags","tag","i"],"mappings":"iNAgDeA,EA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAOC,EAAR,CACEC,GAAIC,OACJC,GAAIN,EAAKO,KACTC,GAAI,CAAEC,WAAY,WAAYC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAEzDX,EAAKY,OAER,iBACEJ,GAAI,CACFG,MAAO,YACPE,GAAI,EACJV,EAAG,CAAEQ,MAAO,aACZD,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOV,EAAKc,MACXd,EAAKe,MAAQd,GACZ,YAAC,IAAMe,SAAP,WAEE,YAAC,IAAD,CAAUD,KAAMf,EAAKe,WCfhBE,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,IAAqBlB,gBAArB,gBACd,uBAASO,GAAI,CAAEN,GAAI,CAAC,EAAG,EAAG,IAAMiB,UAAWA,GACxCD,EAAME,KAAI,SAAApB,GAAI,OACb,YAAC,EAAD,CAAcqB,IAAKrB,EAAKO,KAAMP,KAAMA,EAAMC,SAAUA,S,wBC0B3CqB,EAnBH,SAAC,GAAqC,IAAnCJ,EAAmC,EAAnCA,MAAOK,EAA4B,EAA5BA,YAA4B,EACjBC,cAAvBC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKd,MAAK,SAAWW,EAAYI,OACjC,YAAC,IAAD,CAAMnB,GAAI,CAAEoB,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,KAAK3B,GAAG,MACtBmB,EAAYI,MAEf,YAAC,IAAOxB,EAAR,CAAUC,GAAIC,OAAMG,GAAI,CAAEuB,QAAS,mBAAqBzB,GAAI0B,YAAe,IAAIN,EAAL,IAAiBD,IAA3F,cAIF,YAAC,EAAD,CAASP,MAAOA,EAAOV,GAAI,CAAEK,GAAI,CAAC,EAAG,QCzC3C,sCAEeoB,UCQA,YAAkC,IAA/BC,EAA+B,EAA/BA,KAAMX,EAAyB,EAAzBA,YACdY,EAAYD,EAAZC,QAER,OAAO,kBAAC,EAAD,CAAKjB,MAAOiB,EAAQC,MAAOb,YAAaA,KDXlCU,IAEFI,EAAQ,c,qHEyBNC,IAjBE,SAAC,GAAwB,IAAtBvB,EAAsB,EAAtBA,KAAsB,EACTS,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMV,SAAP,KACGD,EAAKK,KAAI,SAACmB,EAAKC,GAAN,OACR,kBAAC,IAAMxB,SAAP,CAAgBK,IAAKkB,EAAIhC,QACpBiC,GAAF,KACD,kBAAC,IAAOrC,EAAR,CAAUC,GAAIC,OAAMC,GAAI0B,YAAe,IAAIN,EAAL,IAAiBD,EAAjB,IAA6Bc,EAAIhC,OACpEgC,EAAIZ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-aa4a12cb7aa3736209e9.js","sourcesContent":["/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, Styled } from \"theme-ui\";\r\nimport { Box } from \"@theme-ui/components\";\r\nimport { Link } from \"gatsby\";\r\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string;\r\n    title: string;\r\n    date: string;\r\n    tags?: {\r\n      name: string;\r\n      slug: string;\r\n    }[];\r\n  };\r\n  showTags?: boolean;\r\n};\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a\r\n      as={Link}\r\n      to={post.slug}\r\n      sx={{ fontWeight: `semibold`, fontSize: [1, 2, 3], color: `text` }}\r\n    >\r\n      {post.title}\r\n    </Styled.a>\r\n    <p\r\n      sx={{\r\n        color: `secondary`,\r\n        mt: 1,\r\n        a: { color: `secondary` },\r\n        fontSize: [1, 1, 2]\r\n      }}\r\n    >\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n);\r\n\r\nexport default BlogListItem;\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [2, 3, 4] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Flex, Heading } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\r\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\r\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\r\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\r\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\r\n\r\ntype TagProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  pageContext: {\r\n    isCreatedByStatefulCreatePages: boolean\r\n    slug: string\r\n    name: string\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nconst Tag = ({ posts, pageContext }: TagProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`תגית: ${pageContext.name}`} />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Heading variant=\"h2\" as=\"h2\">\r\n          {pageContext.name}\r\n        </Heading>\r\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\r\n          כל התגיות\r\n        </Styled.a>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import { graphql } from \"gatsby\"\r\nimport TagComponent from \"../components/tag\"\r\n\r\nexport default TagComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Tag from \"../../../components/tag\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: any\r\n  }\r\n  pageContext: any\r\n}\r\n\r\nexport default ({ data, pageContext }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Tag posts={allPost.nodes} pageContext={pageContext} />\r\n}\r\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n"],"sourceRoot":""}