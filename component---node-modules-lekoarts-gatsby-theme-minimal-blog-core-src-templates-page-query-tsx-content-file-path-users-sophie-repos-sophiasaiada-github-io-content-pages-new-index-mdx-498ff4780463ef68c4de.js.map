{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-users-sophie-repos-sophiasaiada-github-io-content-pages-new-index-mdx-498ff4780463ef68c4de.js","mappings":"+NAuBA,MATwEA,IAAAA,IAAGC,MAAM,KAAEC,GAAM,SAAEC,GAAU,SACnGC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,aACtBN,EAAKO,QAERL,EAAAA,EAAAA,IAAAA,UAAAA,CAASM,GAAI,CAAEC,GAAI,EAAGH,QAAQ,mBAAsBL,GAC7C,EAKJ,MAAMS,EAA4BC,IAAAA,IAAGZ,MAAM,KAAEC,IAAQ,SAAKE,EAAAA,EAAAA,IAACU,EAAAA,EAAG,CAACL,MAAOP,EAAKO,MAAOM,YAAab,EAAKc,SAAW,ECrBvG,SAASC,EAAoB,GAAuC,OAAlCC,GAA+B,EAC9E,OAAOC,EAAAA,cAACC,EAASF,EACnB,C,yHCNO,MAAMG,EAAqB,YAAyEC,EAAkB,eAA8CC,EAAiB,cAA+CC,EAAgB,WAAgJC,EAAc,sBAAuB,EAAqB,IAAKC,EAAO,GAAKC,EAAwB,IAAMC,EAC7e,EAD6eA,EAE7e,EAF6eA,EAG7e,EACJC,EACI,EADJA,EAEI,EAFJA,EAGI,EAHJA,EAII,EACJC,EAAmB,SAAUC,EAAgB,MAAmBC,EAAH,EAAcC,KAAKC,GAAgDC,EAAgB,OAAQC,EAAiB,QAASC,EAAY,SAA2LC,EAAS,IAAKC,EAAO,IAAyEC,EAAU,IAAsxBC,EAAY,ICT/vC,IAAIC,ECAJ,SAASC,EAAUC,GACtB,MAAsB,kBAARA,CAClB,CACO,SAASC,EAASD,GACrB,MAAsB,iBAARA,CAClB,CACO,SAASE,EAASF,GACrB,MAAsB,iBAARA,CAClB,CAIO,SAASG,EAASH,GACrB,MAAsB,iBAARA,GAA4B,OAARA,CACtC,CACO,SAASI,EAAQJ,GACpB,OAAOK,MAAMD,QAAQJ,EACzB,CACO,SAASM,EAAON,GACnB,OAAOA,OACX,EDnBA,SAAWF,GACPA,EAAsB,OAAI,SAC1BA,EAA0B,WAAI,cAC9BA,EAA2B,YAAI,eAC/BA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACxBA,EAAqB,MAAI,QACzBA,EAAmB,IAAI,MACvBA,EAAuB,QAAI,WAC3BA,EAAwB,SAAI,YAC5BA,EAAuB,QAAI,UAC3BA,EAAsB,OAAI,QAC7B,CAZD,CAYGA,IAAkBA,EAAgB,CAAC,IEX/B,MAAMS,EACTC,YAAYC,EAAWC,EAAGC,GAKtB,GAJAC,KAAKC,iBAAmB,CAACC,EAAOC,KAC5BH,KAAKI,EAAI3B,KAAK4B,IAAIH,GAASC,EAC3BH,KAAKF,EAAIrB,KAAK6B,IAAIJ,GAASC,CAAM,GAEhCb,EAASO,IAAcA,EAAW,CACnCG,KAAKI,EAAIP,EAAUO,EACnBJ,KAAKF,EAAID,EAAUC,EACnB,MAAMS,EAAWV,EACjBG,KAAKD,EAAIQ,EAASR,EAAIQ,EAASR,EAAI3B,CACvC,KACK,SAAkBoC,IAAdX,QAAiCW,IAANV,EAMhC,MAAM,IAAIW,MAAM,GAAGxC,wCALnB+B,KAAKI,EAAIP,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,GAAK3B,CAIlB,CACJ,CACWsC,oBACP,OAAOf,EAASgB,OAAOvC,EAAeA,EAAeA,EACzD,CACI8B,YACA,OAAOzB,KAAKmC,MAAMZ,KAAKF,EAAGE,KAAKI,EACnC,CACIF,UAAMA,GACNF,KAAKC,iBAAiBC,EAAOF,KAAKG,OACtC,CACIA,aACA,OAAO1B,KAAKoC,KAAKb,KAAKc,cAC1B,CACIX,WAAOA,GACPH,KAAKC,iBAAiBD,KAAKE,MAAOC,EACtC,CACAY,aAAaC,GACT,OAAOrB,EAASgB,OAAOK,EAAOZ,EAAGY,EAAOlB,EAAGkB,EAAOjB,EACtD,CACAgB,cAAcX,EAAGN,EAAGC,GAChB,OAAO,IAAIJ,EAASS,EAAGN,EAAGC,EAC9B,CACAkB,IAAIC,GACA,OAAOvB,EAASgB,OAAOX,KAAKI,EAAIc,EAAEd,EAAGJ,KAAKF,EAAIoB,EAAEpB,EAAGE,KAAKD,EAAImB,EAAEnB,EAClE,CACAoB,MAAMD,GACFlB,KAAKI,GAAKc,EAAEd,EACZJ,KAAKF,GAAKoB,EAAEpB,EACZE,KAAKD,GAAKmB,EAAEnB,CAChB,CACAqB,OACI,OAAOzB,EAAS0B,MAAMrB,KAC1B,CACAsB,WAAWJ,GACP,OAAOlB,KAAKuB,IAAIL,GAAGf,MACvB,CACAqB,aAAaN,GACT,OAAOlB,KAAKuB,IAAIL,GAAGJ,aACvB,CACAW,IAAIC,GACA,OAAO/B,EAASgB,OAAOX,KAAKI,EAAIsB,EAAG1B,KAAKF,EAAI4B,EAAG1B,KAAKD,EAAI2B,EAC5D,CACAC,MAAMD,GACF1B,KAAKI,GAAKsB,EACV1B,KAAKF,GAAK4B,EACV1B,KAAKD,GAAK2B,CACd,CACAZ,cACI,OAAOd,KAAKI,GH7D0N,EG6DzMJ,KAAKF,GH7DoM,CG8D1O,CACA8B,KAAKF,GACD,OAAO/B,EAASgB,OAAOX,KAAKI,EAAIsB,EAAG1B,KAAKF,EAAI4B,EAAG1B,KAAKD,EAAI2B,EAC5D,CACAG,OAAOH,GACH1B,KAAKI,GAAKsB,EACV1B,KAAKF,GAAK4B,EACV1B,KAAKD,GAAK2B,CACd,CACAI,YACI,MAAM3B,EAASH,KAAKG,OHxE40B,GGyE51BA,GACAH,KAAK6B,OH1EsW,EG0EtU1B,EAE7C,CACA4B,OAAO7B,GACH,OAAOP,EAASgB,OAAOX,KAAKI,EAAI3B,KAAK4B,IAAIH,GAASF,KAAKF,EAAIrB,KAAK6B,IAAIJ,GAAQF,KAAKI,EAAI3B,KAAK6B,IAAIJ,GAASF,KAAKF,EAAIrB,KAAK4B,IAAIH,GAAQ9B,EACrI,CACA4D,MAAMC,GACFjC,KAAKI,EAAI6B,EAAE7B,EACXJ,KAAKF,EAAImC,EAAEnC,EACX,MAAMoC,EAAMD,EACZjC,KAAKD,EAAImC,EAAInC,EAAImC,EAAInC,EAAI3B,CAC7B,CACAmD,IAAIL,GACA,OAAOvB,EAASgB,OAAOX,KAAKI,EAAIc,EAAEd,EAAGJ,KAAKF,EAAIoB,EAAEpB,EAAGE,KAAKD,EAAImB,EAAEnB,EAClE,CACAoC,QAAQjB,GACJlB,KAAKI,GAAKc,EAAEd,EACZJ,KAAKF,GAAKoB,EAAEpB,EACZE,KAAKD,GAAKmB,EAAEnB,CAChB,EAEG,MAAMqC,UAAezC,EACxBC,YAAYC,EAAWC,GACnBuC,MAAMxC,EAAWC,EAAG1B,EACxB,CACWsC,oBACP,OAAO0B,EAAOzB,OAAOvC,EAAeA,EACxC,CACA2C,aAAaC,GACT,OAAOoB,EAAOzB,OAAOK,EAAOZ,EAAGY,EAAOlB,EAC1C,CACAiB,cAAcX,EAAGN,GACb,OAAO,IAAIsC,EAAOhC,EAAGN,EACzB,EChHJ,IAAIwC,EAAU7D,KAAK8D,OACnB,MAAMC,EAAiB,CACnBC,UAAYC,GAAOC,sBAAsBD,GACzCE,OAASC,GAAQC,qBAAqBD,IAKnC,SAASE,IAEZ,OAAOC,EAAMV,IADD,EAAS,EACcW,OAAOC,QAC9C,CAWO,SAASF,EAAMG,EAAKC,EAAKC,GAC5B,OAAO5E,KAAK2E,IAAI3E,KAAK4E,IAAIF,EAAKC,GAAMC,EACxC,CACO,SAASC,EAAIC,EAAOC,EAAOC,EAASC,GACvC,OAAOjF,KAAKkF,OAAOJ,EAAQE,EAAUD,EAAQE,IAAYD,EAAUC,GACvE,CACO,SAASE,EAAcC,GAC1B,MAAMR,EAAMS,EAAYD,GACxB,IAAIT,EAAMW,EAAYF,GAItB,OAHIR,IAAQD,IACRA,EAHoC,GAKjCL,KAAeM,EAAMD,GAAOA,CACvC,CACO,SAASY,EAAcC,GAC1B,OAAO3E,EAAS2E,GAASA,EAAQL,EAAcK,EACnD,CACO,SAASF,EAAYE,GACxB,OAAO3E,EAAS2E,GAASA,EAAQA,EAAMb,GAC3C,CACO,SAASU,EAAYG,GACxB,OAAO3E,EAAS2E,GAASA,EAAQA,EAAMZ,GAC3C,CACO,SAASa,EAAclD,EAAQiD,GAClC,GAAIjD,IAAWiD,QAAoBzD,IAAVyD,GAAuB3E,EAAS0B,GACrD,OAAOA,EAEX,MAAMoC,EAAMW,EAAY/C,GAASqC,EAAMS,EAAY9C,GACnD,YAAiBR,IAAVyD,EACD,CACEb,IAAK3E,KAAK2E,IAAIA,EAAKa,GACnBZ,IAAK5E,KAAK4E,IAAIA,EAAKY,IAErBC,EAAcd,EAAKC,EAC7B,CACO,SAASc,EAAaC,EAAQC,GACjC,MAAMC,EAAKF,EAAOhE,EAAIiE,EAAOjE,EAAGmE,EAAKH,EAAOtE,EAAIuE,EAAOvE,EACvD,MAAO,CAAEwE,GAAIA,EAAIC,GAAIA,EAAIC,SAAU/F,KAAKoC,KAAKyD,GADyB,EACPC,GADO,GAE1E,CACO,SAASE,EAAYL,EAAQC,GAChC,OAAOF,EAAaC,EAAQC,GAAQG,QACxC,CACO,SAASE,EAASC,GAErB,OAAQA,EAAUlG,KAAKC,GADT,GAElB,CAoCO,SAASkG,EAAkBC,EAAIC,EAAIC,EAAIC,GAC1C,OAAO5C,EAAOzB,OAAQkE,EAAGzE,GAAK2E,EAAKC,IAAQD,EAAKC,GJnGY,EImGLF,EAAG1E,EAAa4E,GAAOD,EAAKC,GAAKH,EAAG/E,EAC/F,CASO,SAASmF,EAA6BxI,GACzC,MAAO,CACH2D,GAAK3D,EAAKyI,UAAU9E,GAAK2C,IAAc,GAAsBtG,EAAK0I,KAAKC,MAAS,EAChFtF,GAAKrD,EAAKyI,UAAUpF,GAAKiD,IAAc,GAAsBtG,EAAK0I,KAAKE,OAAU,EAEzF,CACO,SAASC,GAAmC7I,GAC/C,MAAMyI,EAAW,CACb9E,OAAwBI,IAArB/D,EAAKyI,UAAU9E,EAAkB4D,EAAcvH,EAAKyI,SAAS9E,QAAKI,EACrEV,OAAwBU,IAArB/D,EAAKyI,UAAUpF,EAAkBkE,EAAcvH,EAAKyI,SAASpF,QAAKU,GAEzE,OAAOyE,EAA6B,CAAEE,KAAM1I,EAAK0I,KAAMD,YAC3D,CACO,SAASK,GAAkC9I,GAC9C,MAAO,CACH2D,EAAG3D,EAAKyI,UAAU9E,GAAK2C,IAActG,EAAK0I,KAAKC,MAC/CtF,EAAGrD,EAAKyI,UAAUpF,GAAKiD,IAActG,EAAK0I,KAAKE,OAEvD,CAQO,SAASG,GAAWC,GAEvB,OAAKA,EAGEA,EAAMC,SAAS,KAAOC,WAAWF,GAAS,EAAqBE,WAAWF,GAJ5D,CAKzB,CCtJO,IAAIG,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,ILCX,SAAWL,GACPA,EAAoB,KAAI,OACxBA,EAAwB,SAAI,WAC5BA,EAAwB,SAAI,WAC5BA,EAAsB,OAAI,QAC7B,CALD,CAKGA,KAAkBA,GAAgB,CAAC,ICLtC,SAAWC,GACPA,EAA4B,WAAI,aAChCA,EAA4B,WAAI,YACnC,CAHD,CAGGA,KAAoBA,GAAkB,CAAC,ICH1C,SAAWC,GACPA,EAAkB,KAAI,OACtBA,EAAiB,IAAI,MACrBA,EAAiB,IAAI,KACxB,CAJD,CAIGA,KAAgBA,GAAc,CAAC,ICJlC,SAAWC,GACPA,EAAyB,OAAI,SAC7BA,EAAuB,KAAI,OAC3BA,EAAwB,MAAI,QAC5BA,EAAsB,IAAI,KAC7B,CALD,CAKGA,KAAqBA,GAAmB,CAAC,ICL5C,SAAWC,GACPA,EAAmB,QAAI,UACvBA,EAAmB,QAAI,SAC1B,CAHD,CAGGA,KAAcA,GAAY,CAAC,ICH9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAoB,IAAI,MACxBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,KAAmBA,GAAiB,CAAC,ICKxC,MAAMC,GAAU,CACZC,MAAOC,QAAQD,MACfE,MAAOD,QAAQC,MACfC,KAAMF,QAAQE,KACdC,IAAKH,QAAQG,IACbC,QAASJ,QAAQG,IACjBE,QAASL,QAAQM,MAUd,SAASC,KACZ,OAAOT,EACX,CAaA,SAASU,GAAenK,GACpB,MAAMoK,EAAM,CAAEC,SAAS,IAAS,MAAEC,EAAK,WAAEC,EAAU,SAAEC,EAAQ,cAAEC,EAAa,SAAEC,EAAQ,OAAEC,GAAW3K,EACnG,OAAIuK,EAAW5D,IAAM8D,EAAc9D,KAC/B4D,EAAW5D,IAAM8D,EAAc7D,KAC/B2D,EAAW3D,IAAM6D,EAAc9D,KAC/B4D,EAAW3D,IAAM6D,EAAc7D,MAG9B0D,EAAM1D,KAAO4D,EAAS7D,KAAO2D,EAAM1D,MAAQ4D,EAAS5D,IAAM4D,EAAS7D,KAAOlF,GAAQiJ,EXxC4b,GWyC9gBJ,EAAM3D,KAAO6D,EAAS5D,KAAO0D,EAAM3D,KAAO6D,EAAS5D,IAAM4D,EAAS7D,KAAOlF,GAAQiJ,EXzC6b,KW0C/gBN,EAAIM,SAAWA,GAAYC,EAC3BP,EAAIC,SAAU,GALPD,CAQf,CAOO,SAASQ,KACZ,MAAyB,oBAAXC,SAA2BA,aAAqC,IAApBA,OAAOC,WAA6BD,OAAOC,QACzG,CAIO,SAASC,GAAeC,GAC3B,IAHQJ,MAAiC,oBAAfK,WAM1B,OAAOA,WAAWD,EACtB,CAaO,SAASE,GAAU1D,EAAO2D,GAE7B,OAAO3D,IAAU2D,GAAUpI,EAAQoI,IAAUA,EAAMC,QAAQ5D,IADrC,CAE1B,CACO6D,eAAeC,GAASC,EAAMC,GACjC,UACUV,SAASW,MAAMC,KAAK,GAAGF,GAAU,eAAeD,GAAQ,aAGlE,CADA,MACA,CACJ,CACO,SAASI,GAAiBR,GAC7B,OAAOnJ,KAAKkF,MAAMZ,IAAc6E,EAAMzH,OAC1C,CACO,SAASkI,GAAcT,EAAOU,EAAOC,GAAW,GACnD,OAAOX,OAAgBpH,IAAV8H,GAAuBC,EAAWD,EAAQV,EAAMzH,OAASiI,GAAiBR,GAC3F,CACO,SAASY,GAAcC,EAAOtD,EAAMuD,EAAQC,EAAQC,GAEvD,OAEG,SAAyBC,EAAQ1D,EAAMuD,EAAQE,GAClD,IAAIE,GAAS,EACRF,GAAaA,IAAc7C,GAAiBgD,SAC7CD,EAASD,EAAOG,IAAM7D,EAAKE,OAASqD,EAAOtI,IAE3C0I,GAAYF,GAAaA,IAAc7C,GAAiBkD,OACxDH,EAASD,EAAOK,MAAQR,EAAOtI,IAE/B0I,GAAYF,GAAaA,IAAc7C,GAAiBmD,QACxDJ,EAASD,EAAOI,KAAO9D,EAAKC,MAAQsD,EAAO5I,IAE3CgJ,GAAYF,GAAaA,IAAc7C,GAAiBiD,MACxDF,EAASD,EAAOE,OAASL,EAAO5I,GAEpC,OAAOgJ,CACX,CAjBWK,CAAgBC,GAAgBX,EAAOE,GAD5B,GACkDxD,EAAMuD,EAAQE,EACtF,CAiBO,SAASQ,GAAgBX,EAAOE,GACnC,MAAO,CACHI,OAAQN,EAAM3I,EAAI6I,EAClBM,KAAMR,EAAMrI,EAAIuI,EAChBO,MAAOT,EAAMrI,EAAIuI,EACjBK,IAAKP,EAAM3I,EAAI6I,EAEvB,CACO,SAASU,GAAWC,KAAgBC,GACvC,IAAK,MAAMvI,KAAUuI,EAAS,CAC1B,GAAIvI,QACA,SAEJ,IAAKzB,EAASyB,GAAS,CACnBsI,EAActI,EACd,QACJ,CACA,MAAMwI,EAAgB/J,MAAMD,QAAQwB,IAChCwI,IAAkBjK,EAAS+J,IAAiBA,GAAgB7J,MAAMD,QAAQ8J,GAGpEE,IAAkBjK,EAAS+J,IAAiBA,IAAe7J,MAAMD,QAAQ8J,KAC/EA,EAAc,CAAC,GAHfA,EAAc,GAKlB,IAAK,MAAMG,KAAOzI,EAAQ,CACtB,GAAY,cAARyI,EACA,SAEJ,MAA2BxF,EAARjD,EAA2ByI,GAAMC,EAAWJ,EAC/DI,EAASD,GACLlK,EAAS0E,IAAUxE,MAAMD,QAAQyE,GAC3BA,EAAM0F,KAAIzI,GAAKmI,GAAWK,EAASD,GAAMvI,KACzCmI,GAAWK,EAASD,GAAMxF,EACxC,CACJ,CACA,OAAOqF,CACX,CACO,SAASM,GAAiBC,EAAMC,GACnC,QAASC,GAA6BD,GAAME,GAAKA,EAAEC,QAAUtC,GAAUkC,EAAMG,EAAEH,OACnF,CACO,SAASK,GAAeL,EAAMC,EAAMK,GACvCC,GAA0BN,GAAMrI,IAC5B,MAAM4I,EAAU5I,EAAIoI,KAAmBpI,EAAIwI,QACzBtC,GAAUkC,EAAMQ,IAKnC,SAA8B5I,EAAK0I,GACtC,MAAMG,EAAY7I,EAAI6I,UACtBF,GAA0BE,GAAWC,IACjCJ,EAASI,EAAU9I,EAAI,GAE/B,CATY+I,CAAqB/I,EAAK0I,EAC9B,GAER,CAOO,SAASE,GAAQP,EAAMW,GAC1B,GAAKA,GAAYX,EAGjB,OAAOC,GAA6BD,GAAMrI,GA7H9C,SAAuBgJ,EAASH,GAC5B,MAAMzD,EAAMuD,GAA0BE,GAAWC,GACtCE,EAAQC,QAAQH,KAE3B,OAAO/K,EAAQqH,GAAOA,EAAI8D,MAAKX,GAAKA,IAAKnD,CAC7C,CAyHe+D,CAAcH,EAAShJ,EAAI6I,YAE1C,CACO,SAASO,GAA6BC,GACzC,MAAO,CACH5F,SAAU4F,EAAEC,cACZpC,OAAQmC,EAAEE,YACVC,KAAMH,EAAEI,UACR/D,SAAU2D,EAAE3D,SACZC,OAAQhF,EAAOzB,OAAOqD,EAAc8G,EAAEK,QAAQC,OAAOC,WAAWpH,OAAQD,EAAc8G,EAAEK,QAAQC,OAAOE,SAASrH,QAExH,CACO,SAASsH,GAAaC,EAAIC,GAC7B,MAAQrL,EAAGsL,EAAe5L,EAAG6L,GAAkBH,EAAGrE,SAAS5F,IAAIkK,EAAGtE,WAAYyE,EAAMC,GAAQ,CAACL,EAAGtG,SAAUuG,EAAGvG,WAAaZ,GAAIwH,EAAOvH,GAAIwH,GAAU5H,EAAa0H,EAAMD,GACtK,GAAIF,EAAgBI,EAAQH,EAAgBI,EADmJ,EAE3L,OAEJ,MAAM7L,GAASzB,KAAKmC,MAAMmL,EAAOD,GAAQ/G,EAAKyG,EAAGP,KAAMjG,EAAKyG,EAAGR,KAAMe,EAAKR,EAAGrE,SAASpF,OAAO7B,GAAQ+L,EAAKR,EAAGtE,SAASpF,OAAO7B,GAAQ2E,EAAKD,EAAkBoH,EAAIC,EAAIlH,EAAIC,GAAKF,EAAKF,EAAkBqH,EAAID,EAAIjH,EAAIC,GAAKkH,EAAUrH,EAAG9C,QAAQ7B,GAAQiM,EAAUrH,EAAG/C,QAAQ7B,GACvQsL,EAAGrE,SAAS/G,EAAI8L,EAAQ9L,EAAIoL,EAAGpE,OAAOhH,EACtCoL,EAAGrE,SAASrH,EAAIoM,EAAQpM,EAAI0L,EAAGpE,OAAOtH,EACtC2L,EAAGtE,SAAS/G,EAAI+L,EAAQ/L,EAAIqL,EAAGrE,OAAOhH,EACtCqL,EAAGtE,SAASrH,EAAIqM,EAAQrM,EAAI2L,EAAGrE,OAAOtH,CAC1C,CACO,SAASsM,GAAWC,EAAUC,GACjC,MAAkEzD,EAASO,GAA9DiD,EAAStB,cAAsBsB,EAASrB,aAAmDuB,EAAgBF,EAASlB,QAAQC,OAAQoB,EAAO5F,GAAe,CACnKG,MAAO,CACH3D,IAAKyF,EAAOI,KACZ5F,IAAKwF,EAAOK,OAEhBlC,WAAY,CACR5D,IAAKyF,EAAOG,IACZ3F,IAAKwF,EAAOE,QAEhB9B,SAAU,CACN7D,IAAKkJ,EAAUrD,KACf5F,IAAKiJ,EAAUpD,OAEnBhC,cAAe,CACX9D,IAAKkJ,EAAUtD,IACf3F,IAAKiJ,EAAUvD,QAEnB5B,SAAUkF,EAASlF,SAAS/G,EAC5BgH,OAAQpD,EAAcuI,EAAclB,WAAWpH,SAE/CuI,EAAK1F,eACiBtG,IAAlBgM,EAAKrF,WACLkF,EAASlF,SAAS/G,EAAIoM,EAAKrF,eAET3G,IAAlBgM,EAAKtH,WACLmH,EAASnH,SAAS9E,EAAIoM,EAAKtH,WAGnC,MAAMuH,EAAO7F,GAAe,CACxBG,MAAO,CACH3D,IAAKyF,EAAOG,IACZ3F,IAAKwF,EAAOE,QAEhB/B,WAAY,CACR5D,IAAKyF,EAAOI,KACZ5F,IAAKwF,EAAOK,OAEhBjC,SAAU,CACN7D,IAAKkJ,EAAUtD,IACf3F,IAAKiJ,EAAUvD,QAEnB7B,cAAe,CACX9D,IAAKkJ,EAAUrD,KACf5F,IAAKiJ,EAAUpD,OAEnB/B,SAAUkF,EAASlF,SAASrH,EAC5BsH,OAAQpD,EAAcuI,EAAcjB,SAASrH,SAE7CwI,EAAK3F,eACiBtG,IAAlBiM,EAAKtF,WACLkF,EAASlF,SAASrH,EAAI2M,EAAKtF,eAET3G,IAAlBiM,EAAKvH,WACLmH,EAASnH,SAASpF,EAAI2M,EAAKvH,UAGvC,CACO,SAASkF,GAA0BsC,EAAKvC,GAE3C,OAAO3K,EAAQkN,GAAOA,EAAI/C,KAAI,CAACgD,EAAMrE,IAAU6B,EAASwC,EAAMrE,KAAU6B,EAASuC,EAD5D,EAEzB,CACO,SAASE,GAAyBF,EAAKpE,EAAOC,GACjD,OAAO/I,EAAQkN,GAAOrE,GAAcqE,EAAKpE,EAAOC,GAAYmE,CAChE,CACO,SAAS3C,GAA6B2C,EAAKvC,GAC9C,GAAI3K,EAAQkN,GACR,OAAOA,EAAIG,MAAK,CAAC7C,EAAG1B,IAAU6B,EAASH,EAAG1B,KAG9C,OAAO6B,EAASuC,EADK,GACgBA,OAAMlM,CAC/C,CACO,SAASsM,GAAkC3B,EAAS4B,GACvD,MAAMC,EAAa7B,EAAQlH,MAAOgJ,EAAmB9B,EAAQ+B,UAAWrG,EAAM,CAC1EsG,UAAWnJ,EAAciJ,EAAiBG,OAASjP,EACnD8L,OAAQgD,EAAiBhD,OACzBhG,MAAOD,EAAcmH,EAAQlH,OAAS8I,EACtC1J,IAAKS,EAAYkJ,GAAcD,EAC/B3J,IAAKW,EAAYiJ,GAAcD,EAC/BM,MAAO,EACPC,SAAUtJ,EAAciJ,EAAiBM,OACzCC,KAAM,GAEV,GAAIP,EAAiBhD,OAAQ,CAEzB,OADApD,EAAI4G,MAFS,EAEazJ,EAAciJ,EAAiBQ,OACjDR,EAAiBpD,MACrB,KAAKjE,GAAc8H,SACf7G,EAAI8G,OAAS9H,GAAgB+H,WAC7B,MACJ,KAAKhI,GAAciI,SACfhH,EAAI8G,OAAS9H,GAAgBiI,WAC7B,MACJ,KAAKlI,GAAcrD,OACfsE,EAAI8G,OAAS5K,KAAe7E,EAAO2H,GAAgB+H,WAAa/H,GAAgBiI,WAGxF,MAAMC,EAAad,EAAiBpD,OAASjE,GAAcoI,KAC3D,OAAQf,EAAiBgB,YACrB,KAAKhI,GAAe7C,IAChByD,EAAI5C,MAAQ4C,EAAIzD,IACZ2K,IACAlH,EAAI8G,OAAS9H,GAAgB+H,YAEjC,MACJ,KAAK3H,GAAe5C,IAChBwD,EAAI5C,MAAQ4C,EAAIxD,IACZ0K,IACAlH,EAAI8G,OAAS9H,GAAgBiI,YAEjC,MACJ,KAAK7H,GAAe1D,OACpB,QACIsE,EAAI5C,MAAQL,EAAciD,GACtBkH,IACAlH,EAAI8G,OAAS5K,KAAe7E,EAAO2H,GAAgB+H,WAAa/H,GAAgBiI,YAIhG,CAEA,OADAjH,EAAIqH,aAAerH,EAAI5C,MAChB4C,CACX,CACA,SAASsH,GAAkBC,EAAgBC,GAEvC,KADkBD,EAAevE,OAAS7D,GAAUsI,SACpC,CACZ,MAAQzE,KAAM0E,KAAMC,GAASJ,EAC7B,OAAOI,CACX,CAEA,MADmB,MAAOJ,EAEf,CACHhO,EAAIgO,EAAehO,EAAI,EAAsBiO,EAAWjJ,MACxDtF,EAAIsO,EAAetO,EAAI,EAAsBuO,EAAWhJ,QAIrD,CACHD,MAAQgJ,EAAehJ,MAAQ,EAAsBiJ,EAAWjJ,MAChEC,OAAS+I,EAAe/I,OAAS,EAAsBgJ,EAAWhJ,OAG9E,CACO,SAAS0F,GAAY7F,EAAUmJ,GAClC,OAAOF,GAAkBjJ,EAAUmJ,EACvC,CACO,SAASI,GAAQtJ,EAAMkJ,GAC1B,OAAOF,GAAkBhJ,EAAMkJ,EACnC,CAeO,SAASK,GAAgBrC,EAAU5P,EAAMkS,EAAiBC,EAAaC,GAE1E,GAAIxC,EAASyC,YACRrS,IACAA,EAAKwN,SACJxN,EAAK6Q,UAJM,OAI+B7Q,EAAK4Q,OAJpC,IAI0D5Q,EAAK6Q,UAJ/D,GAKb,OAEJ,MAAMnG,GAAY1K,EAAK0K,UAPuC,GAOZ0H,EAAMzH,OAAQ2H,EAAWtS,EAAK2G,IAAK4L,EAAWvS,EAAK4G,IAAKoK,EAAQhR,EAAKgR,OAP3C,EAc5E,GANKhR,EAAK+Q,OACN/Q,EAAK+Q,KAAO,IAEX/Q,EAAK0Q,WAXqB,MAWgB1Q,EAAK+Q,MAAQ/Q,EAAK0Q,WAXlC,KAY3B1Q,EAAK+Q,MAAQqB,EAAM5K,UAElBxH,EAAK0Q,WAdqB,MAcgB1Q,EAAK+Q,MAAQ/Q,EAAK0Q,WAdlC,IAc/B,CAGA,OAAQ1Q,EAAKkR,QACT,KAAK9H,GAAgB+H,WACbnR,EAAKwH,OAAS+K,GACVL,EACAlS,EAAKkR,OAAS9H,GAAgBiI,WAG9BrR,EAAKwH,OAAS+K,EAEbvS,EAAK4Q,QACN5Q,EAAK4Q,MA3BJ,GA6BL5Q,EAAK4Q,SAGL5Q,EAAKwH,OAASkD,EAElB,MACJ,KAAKtB,GAAgBiI,WACbrR,EAAKwH,OAAS8K,GACVJ,EACAlS,EAAKkR,OAAS9H,GAAgB+H,WAG9BnR,EAAKwH,OAAS+K,EAEbvS,EAAK4Q,QACN5Q,EAAK4Q,MA5CJ,GA8CL5Q,EAAK4Q,SAGL5Q,EAAKwH,OAASkD,EAGtB1K,EAAK0K,UApDoC,IAoDxBsG,IACjBhR,EAAK0K,UAAYsG,GApEzB,SAAsBpB,EAAUuC,EAAa3K,EAAO8K,EAAUC,GAC1D,OAAQJ,GACJ,KAAK9I,GAAYzC,IACTY,GAAS+K,GACT3C,EAAS4C,UAEb,MACJ,KAAKnJ,GAAY1C,IACTa,GAAS8K,GACT1C,EAAS4C,UAIzB,CAyDIC,CAAa7C,EAAUuC,EAAanS,EAAKwH,MAAO8K,EAAUC,GACrD3C,EAASyC,YACVrS,EAAKwH,MAAQjB,EAAMvG,EAAKwH,MAAO8K,EAAUC,GAzC7C,CA2CJ,CA4CO,MAAMG,GA1bb,SAAiBC,GACb,MAAMC,EAAQ,IAAIC,IAClB,MAAO,IAAIC,KACP,MAAM9F,EAAM+F,KAAKC,UAAUF,GAC3B,GAAIF,EAAMK,IAAIjG,GACV,OAAO4F,EAAMM,IAAIlG,GAErB,MAAMmG,EAASR,KAAMG,GAErB,OADAF,EAAMQ,IAAIpG,EAAKmG,GACRA,CAAM,CAErB,CA+akCE,EAnBlC,SAAgCC,GAC5B,MAAMC,EAAkBzI,SAAS0I,cAAc,OAAOC,MAAmBA,EAAQ,CAC7E9K,MAAO,OACPC,OAAQ,OACR8K,OAAQ,IACRC,QAAS,IACTC,YAAa,IACbnL,SAAU,QACV6K,OAAQA,EAAOO,SAPkD,IAQjE,UAAWP,EAAOO,SAR+C,IASjEtH,IAAK,IACLC,KAAM,KAEV,IAAK,MAAMQ,KAAOyG,EAAO,CACrB,MAAMjM,EAAQiM,EAAMzG,GACpBuG,EAAgBO,YAAY9G,EAAKxF,EACrC,CACA,OAAO+L,CACX,ICtdO,IAAIQ,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCAAC,GCKX,SAASC,GAAaC,EAAQ5L,GAC1B,GAAKA,EAGL,IAAK,MAAM6L,KAAWD,EAAOE,cAAcC,SACvC,GAAI/L,EAAMgM,WAAWH,EAAQI,cACzB,OAAOJ,EAAQK,YAAYlM,EAGvC,CACO,SAASmM,GAAgBP,EAAQ5L,EAAO6C,EAAOC,GAAW,GAC7D,IAAK9C,EACD,OAEJ,MAAMoM,EAAQxS,EAASoG,GAAS,CAAExB,MAAOwB,GAAUA,EACnD,GAAIpG,EAASwS,EAAM5N,OACf,OAAO6N,GAAWT,EAAQQ,EAAM5N,MAAOqE,EAAOC,GAElD,GAAI/I,EAAQqS,EAAM5N,OACd,OAAO2N,GAAgBP,EAAQ,CAC3BpN,MAAOoE,GAAcwJ,EAAM5N,MAAOqE,EAAOC,KAGjD,IAAK,MAAM+I,KAAWD,EAAOE,cAAcC,SAAU,CACjD,MAAM3K,EAAMyK,EAAQS,iBAAiBF,GACrC,GAAIhL,EACA,OAAOA,CAEf,CACJ,CACO,SAASiL,GAAWT,EAAQ5L,EAAO6C,EAAOC,GAAW,GACxD,IAAK9C,EACD,OAEJ,MAAMoM,EAAQxS,EAASoG,GAAS,CAAExB,MAAOwB,GAAUA,EACnD,GAAIpG,EAASwS,EAAM5N,OACf,OAAO4N,EAAM5N,QAAU3F,EAAmB0T,KAiD3C,SAAqBX,EAAQ5L,GAChC,OAAO2L,GAAaC,EAAQ5L,EAChC,CAnDwEwM,CAAYZ,EAAQQ,EAAM5N,OAE9F,GAAIzE,EAAQqS,EAAM5N,OACd,OAAO6N,GAAWT,EAAQ,CACtBpN,MAAOoE,GAAcwJ,EAAM5N,MAAOqE,EAAOC,KAGjD,IAAK,MAAM+I,KAAWD,EAAOE,cAAcC,SAAU,CACjD,MAAM3K,EAAMyK,EAAQY,YAAYL,GAChC,GAAIhL,EACA,OAAOA,CAEf,CACJ,CAKO,SAASsL,GAAgBd,EAAQQ,EAAOvJ,EAAOC,GAAW,GAC7D,MAAM6J,EAAMR,GAAgBP,EAAQQ,EAAOvJ,EAAOC,GAClD,OAAO6J,EAAMC,GAASD,QAAO5R,CACjC,CACO,SAAS6R,GAASR,GACrB,MAAMS,EAAKT,EAAMhO,EAAI/E,EAAQyT,EAAKV,EAAMW,EAAI1T,EAAQ2T,EAAKZ,EAAMa,EAAI5T,EAAQuE,EAAM5E,KAAK4E,IAAIiP,EAAIC,EAAIE,GAAKrP,EAAM3E,KAAK2E,IAAIkP,EAAIC,EAAIE,GAAK5L,EAAM,CACrI8L,ExBxD6a,EwByD7aC,GAAIvP,EAAMD,GAAOlF,EACjB2U,ExB1Dub,GwB4E3b,OAhBIxP,IAAQD,IACRyD,EAAIgM,EAAIhM,EAAI+L,EAAI1U,GAAQmF,EAAMD,IAAQC,EAAMD,IAAQC,EAAMD,IxB7DF,EwB6DmBC,EAAMD,GACjFyD,EAAI8L,EACAL,IAAOjP,GACAkP,EAAKE,IAAOpP,EAAMD,GAClByD,EAAI8L,EAAIJ,IAAOlP,ExBjE8B,GwBiEdoP,EAAKH,IAAOjP,EAAMD,GAAO,GAAmBkP,EAAKC,IAAOlP,EAAMD,IAE5GyD,EAAI+L,GxBnEia,IwBoEra/L,EAAIgM,GxBpEqZ,IwBqEzZhM,EAAI8L,GxBrEmc,GwBsEnc9L,EAAI8L,ExBtEya,IwBuE7a9L,EAAI8L,GAAK5T,GAET8H,EAAI8L,GAAK5T,IACT8H,EAAI8L,GAAK5T,GAEN8H,CACX,CAOO,SAASiM,GAASC,GACrB,MAAMJ,GAAMI,EAAIJ,EAAI5T,EAAQA,GAAQA,EAAM8T,EAAIpU,KAAK4E,IxBrFwY,EwBqF9X5E,KAAK2E,IxBrFuV,IwBqF7U2P,EAAIF,IAAKD,EAAInU,KAAK4E,IxBrFqpC,EwBqF3oC5E,KAAK2E,IxBrFwT,IwBqF9S2P,EAAIH,IAAKI,EAAcL,EAAI5T,EAAMkU,EAAcJ,ExBrFmP,IwBqFzOK,EAAcN,ExBrFuO,IwBsFra,GxBtF2b,IwBsFvbC,EAAY,CACZ,MAAMM,EAAiB1U,KAAK2U,MAAMF,EAAcjU,GAChD,MAAO,CAAE4E,EAAGsP,EAAgBX,EAAGW,EAAgBT,EAAGS,EACtD,CACA,MAAME,EAAU,CAACC,EAAOC,EAAOC,KAQ3B,GANIA,EADa,GAEbA,IAEAA,EAJ2B,GAK3BA,IxBhGsxC,EwBkGtxCA,EAP2B,EAQ3B,OAAOF,ExBnG+wC,GwBmGtwCC,EAAQD,GAAoBE,EAEhD,GxBrGwD,EwBqGpDA,EAV2B,EAW3B,OAAOD,EAEX,GxBxG4wC,EwBwGxwCC,EAAiBC,EAAmB,CAEpC,OAAOH,GAASC,EAAQD,IxB1G4B,EAAotC,EwB0GxtCE,GxB1GsuC,CwB2G1xC,CACA,OAAOF,CAAK,EACbA,EAAQJ,EAAchV,EACnBgV,GxB9G+yC,EwB8G5wCD,GACnCC,EAAcD,EAAcC,EAAcD,EAAaM,ExB/GD,EwB+GkBL,EAAcI,EAAOI,ExB/GsuC,EAAzD,EwB+GvoCC,EAAMlV,KAAK2E,IAAInE,EAAWA,EAAYoU,EAAQE,EAAOD,EAAON,EAAcU,IAAcE,EAAQnV,KAAK2E,IAAInE,EAAWA,EAAYoU,EAAQE,EAAOD,EAAON,IAAea,EAAOpV,KAAK2E,IAAInE,EAAWA,EAAYoU,EAAQE,EAAOD,EAAON,EAAcU,IACzX,MAAO,CAAE7P,EAAGpF,KAAK2U,MAAMO,GAAMnB,EAAG/T,KAAK2U,MAAMQ,GAAQlB,EAAGjU,KAAK2U,MAAMS,GACrE,CAUO,SAAS7B,GAAkB5O,GAC9B,MAAM0Q,EAAW1Q,GxB5H20C,EwB6H51C,MAAO,CACHsP,EAAGjU,KAAKkF,MAAMC,EAAcM,EAAc4P,EAFIhV,OAG9C0T,EAAG/T,KAAKkF,MAAMC,EAAcM,EAAc4P,EAHIhV,OAI9C+E,EAAGpF,KAAKkF,MAAMC,EAAcM,EAAc4P,EAJIhV,OAMtD,CACO,SAASiV,GAAgBlC,EAAOmC,GACnC,MAAO,QAAQnC,EAAMhO,MAAMgO,EAAMW,MAAMX,EAAMa,MAAMsB,GxBpI2kB,IwBqIloB,CACO,SAASC,GAAgBpC,EAAOmC,GACnC,MAAO,QAAQnC,EAAMc,MAAMd,EAAMgB,OAAOhB,EAAMe,OAAOoB,GxBvIykB,IwBwIloB,CACO,SAASE,GAASC,EAAQC,EAAQC,EAAOC,GAC5C,IAAIC,EAAOJ,EAAQK,EAAOJ,EAO1B,YANe5T,IAAX+T,EAAK1Q,IACL0Q,EAAOzB,GAASqB,SAEL3T,IAAXgU,EAAK3Q,IACL2Q,EAAO1B,GAASsB,IAEb,CACH1B,EAAGpP,EAAIiR,EAAK7B,EAAG8B,EAAK9B,EAAG2B,EAAOC,GAC9B9B,EAAGlP,EAAIiR,EAAK/B,EAAGgC,EAAKhC,EAAG6B,EAAOC,GAC9BzQ,EAAGP,EAAIiR,EAAK1Q,EAAG2Q,EAAK3Q,EAAGwQ,EAAOC,GAEtC,CACO,SAASG,GAAajJ,EAAIC,EAAIiJ,GACjC,GAAIA,IAAcpW,EACd,OAAO0T,KAEN,GAAI0C,IAAcnW,EAanB,OAAOmW,EAb2B,CAClC,MAAMC,EAAcnJ,EAAGoJ,gBAAkBpJ,EAAGqJ,iBAAkBC,EAAYrJ,GAAImJ,gBAAkBnJ,GAAIoJ,iBACpG,GAAIF,GAAeG,GAAarJ,EAC5B,OAAOyI,GAASS,EAAaG,EAAWtJ,EAAGR,YAAaS,EAAGT,aAE1D,CACD,MAAM+J,EAAWJ,GAAeG,EAChC,GAAIC,EACA,OAAOjC,GAASiC,EAExB,CACJ,CAIJ,CACO,SAASC,GAAmB3D,EAAQ4D,EAAUC,EAAOC,GACxD,MAAMtD,EAAQxS,EAAS4V,GAAYA,EAAWA,EAAShR,MACvD,OAAI4N,IAAUvT,EACN6W,EACOvD,GAAgBP,EAAQ,CAC3BpN,MAAO4N,IAGXqD,EACO5W,EAEJC,EAEFsT,IAAUtT,EACRA,EAGAqT,GAAgBP,EAAQ,CAC3BpN,MAAO4N,GAGnB,CACO,SAASuD,GAAoBlI,GAChC,YAAqB1M,IAAd0M,EACD,CACEyF,EAAGzF,EAAUyF,EAAE1O,MACf4O,EAAG3F,EAAU2F,EAAE5O,MACf2O,EAAG1F,EAAU0F,EAAE3O,YAEjBzD,CACV,CACO,SAAS6U,GAAuBtC,EAAK9F,EAAkBqI,GAC1D,MAAMC,EAAW,CACb5C,EAAG,CACC1I,QAAQ,EACRhG,MAAO8O,EAAIJ,GAEfE,EAAG,CACC5I,QAAQ,EACRhG,MAAO8O,EAAIF,GAEfD,EAAG,CACC3I,QAAQ,EACRhG,MAAO8O,EAAIH,IAQnB,OALI3F,IACAuI,GAAkBD,EAAS5C,EAAG1F,EAAiB0F,EAAG2C,GAClDE,GAAkBD,EAAS1C,EAAG5F,EAAiB4F,EAAGyC,GAClDE,GAAkBD,EAAS3C,EAAG3F,EAAiB2F,EAAG0C,IAE/CC,CACX,CACA,SAASC,GAAkBC,EAAYC,EAAgBJ,GACnDG,EAAWxL,OAASyL,EAAezL,OAC/BwL,EAAWxL,QACXwL,EAAWtO,SAAYnD,EAAc0R,EAAeC,OAAS,EAAsBL,EACnFG,EAAWhI,MxBpOs2B,EwBoOh1BzJ,EAAc0R,EAAejI,OAC9DgI,EAAW9H,OAAS9H,GAAgB+H,WACpC6H,EAAWpI,MxBtOo3C,EwBuO/3CoI,EAAWnI,SAAWtJ,EAAc0R,EAAenI,OACnDkI,EAAWjI,KxBxOq4C,EwByOh5CiI,EAAWtI,UAAYnJ,EAAc0R,EAAetI,OAASjP,EACxDuX,EAAeE,OAChBH,EAAWtO,UAAYpE,IACvB0S,EAAWxR,OAASlB,KAExB0S,EAAWvH,aAAeuH,EAAWxR,MACrCwR,EAAW/M,OAASxE,EAAcwR,EAAehN,SAGjD+M,EAAWtO,SxBlPk2C,CwBoPr3C,CACO,SAAS0O,GAAiBpZ,EAAMqZ,EAAOjI,EAAUgB,GAEpD,IAAKpS,IACAA,EAAKwN,SACJxN,EAAK6Q,UAHM,OAG+B7Q,EAAK4Q,OAHpC,IAG0D5Q,EAAK6Q,UAH/D,GAIb,OAQJ,GANK7Q,EAAK+Q,OACN/Q,EAAK+Q,KAAO,IAEX/Q,EAAK0Q,WATqB,MASgB1Q,EAAK+Q,MAAQ/Q,EAAK0Q,WATlC,KAU3B1Q,EAAK+Q,MAAQqB,EAAM5K,QAElBxH,EAAK0Q,WAZqB,MAYgB1Q,EAAK+Q,MAAQ/Q,EAAK0Q,WAZlC,GAa3B,OAEJ,MAAMzE,EAASjM,EAAKiM,OAAS9E,EAAcnH,EAAKiM,QAf6B,EAeRvB,GAAY1K,EAAK0K,UAfxB,GAemD0H,EAAMzH,OAftB,IAe+BsB,EAAyB+E,EAAQhR,EAAKgR,OAfzH,EAe4IpK,EAAMS,EAAYgS,GAAQ1S,EAAMW,EAAY+R,GACrO,GAAKjI,GAAYpR,EAAKkR,SAAW9H,GAAgB+H,WAe5C,CACDnR,EAAKwH,OAASkD,EACd,MAAM4H,EAAW,EACbtS,EAAKwH,MAAQ8K,IACRtS,EAAK4Q,QACN5Q,EAAK4Q,MAAQ,GAEjB5Q,EAAK4Q,QACL5Q,EAAKkR,OAAS9H,GAAgB+H,WAEtC,MAxBInR,EAAKwH,OAASkD,EACV1K,EAAKwH,MAAQZ,IACR5G,EAAK4Q,QACN5Q,EAAK4Q,MAAQ,GAEjB5Q,EAAK4Q,QACDQ,EACApR,EAAKkR,OAAS9H,GAAgBiI,WAG9BrR,EAAKwH,OAASZ,GAetB5G,EAAK0K,UA1CoC,IA0CxBsG,IACjBhR,EAAK0K,UAAYsG,GAErBhR,EAAKwH,MAAQjB,EAAMvG,EAAKwH,MAAOb,EAAKC,EACxC,CACO,SAAS0S,GAAYlE,EAAOhD,GAC/B,IAAKgD,EACD,OAEJ,MAAM,EAAEc,EAAC,EAAEE,EAAC,EAAED,GAAMf,EAAOmE,EAEpB,CAAE5S,IAAK,EAAGC,IAAK,KAFK2S,EAGpB,CAAE5S,IAAK,EAAGC,IAAK,KAElBsP,GACAkD,GAAiBlD,EALd,CAAEvP,IAAK,EAAGC,IAAK,MAKY,EAAOwL,GAErCgE,GACAgD,GAAiBhD,EAAGmD,GAAU,EAAMnH,GAEpC+D,GACAiD,GAAiBjD,EAAGoD,GAAU,EAAMnH,EAE5C,CC7TO,SAASoH,GAASC,EAASC,EAAOC,GACrCF,EAAQG,YACRH,EAAQI,OAAOH,EAAM/V,EAAG+V,EAAMrW,GAC9BoW,EAAQK,OAAOH,EAAIhW,EAAGgW,EAAItW,GAC1BoW,EAAQM,WACZ,CAaO,SAASC,GAAMP,EAASQ,GAC3BR,EAAQS,UAAUvY,EAAeA,EAAesY,EAAUtR,MAAOsR,EAAUrR,OAC/E,CACO,SAASuR,GAAana,GACzB,MAAM,UAAEoa,EAAS,QAAEX,EAAO,SAAE7J,EAAQ,MAAEwC,EAAK,YAAEiI,EAAW,eAAEC,EAAc,UAAEC,EAAS,OAAErO,EAAM,QAAEqL,EAAO,OAAEiD,EAAM,UAAEC,GAAeza,EAAM0a,EAAM9K,EAAStB,cAAe7K,EAAQmM,EAAS+K,UAAY/K,EAASgL,aAAehL,EAASlF,SAASjH,MzBhBk9B,GyBgB37BoX,EACtP7Y,KAAK6B,IAAIJ,GAD6OoX,EAEtP7Y,KAAK4B,IAAIH,GACfqX,IAAarX,EAAOsX,EAAgB,CACnCC,EAAGH,GAAkBJ,EAAUO,GAAKpZ,GACpCqU,EAAG6E,EAAWD,GAAkBJ,EAAUxE,GzBrB0pC,GyBqBxoCwE,EAAUxE,GAAKrU,EAC3E4D,EAAGsV,GAAYD,GAAkBJ,EAAUjV,GzBtBypC,GyBsBvoCiV,EAAUjV,GAAK5D,EAC5EqZ,EAAGJ,GAAkBJ,EAAUQ,GAAKrZ,IAExC6X,EAAQyB,aAAaH,EAAcC,EAAGD,EAAc9E,EAAG8E,EAAcvV,EAAGuV,EAAcE,EAAGP,EAAI/W,EAAG+W,EAAIrX,GAChGiX,IACAb,EAAQ0B,yBAA2BZ,GAEvC,MAAMa,EAAcxL,EAASwL,YACzBZ,EAAOhN,QAAU4N,IACjB3B,EAAQ4B,WAAab,EAAOc,KAC5B7B,EAAQ2B,YAAc9D,GAAgB8D,GACtC3B,EAAQ8B,cAAgBf,EAAOvO,OAAOtI,EACtC8V,EAAQ+B,cAAgBhB,EAAOvO,OAAO5I,GAEtCgX,EAAYoB,OACZhC,EAAQiC,UAAYrB,EAAYoB,MAEpC,MAAME,EAAc/L,EAAS+L,azBvC+rC,EyBwC5tClC,EAAQmC,UAAYD,EAChBtB,EAAYwB,SACZpC,EAAQqC,YAAczB,EAAYwB,QAEtC,MAAME,EAAW,CACb3B,YACAX,UACA7J,WACA1D,SACAqL,UACAnF,QACA2I,gBACAY,gBA2BD,SAAmB3b,GACtB,MAAM,UAAEoa,EAAS,QAAEX,EAAO,SAAE7J,EAAQ,OAAE1D,EAAM,QAAEqL,EAAO,MAAEnF,EAAK,YAAEuJ,EAAW,cAAEZ,GAAkB/a,EAC7F,IAAK4P,EAASoM,MACV,OAEJ,MAAMC,EAAS7B,EAAU8B,aAAahJ,IAAItD,EAASoM,OACnD,IAAKC,EACD,OAEJxC,EAAQG,YACRqC,EAAOE,KAAK,CACR1C,UACA7J,WACA1D,SACAqL,UACAnF,QACAgK,WAAYhC,EAAUiC,OAAOD,WAC7BrB,cAAe,IAAKA,KAEpBnL,EAAS0M,YACT7C,EAAQM,YAER4B,EzBrGwtC,GyBsGxtClC,EAAQoC,SAERjM,EAAS2M,WACT9C,EAAQgC,MAEhB,CArDIe,CAAUT,GAsDP,SAA4B/b,GAC/B,MAAM,UAAEoa,EAAS,QAAEX,EAAO,SAAE7J,EAAQ,OAAE1D,EAAM,QAAEqL,EAAO,MAAEnF,EAAK,cAAE2I,GAAkB/a,EAChF,IAAK4P,EAASoM,MACV,OAEJ,MAAMC,EAAS7B,EAAU8B,aAAahJ,IAAItD,EAASoM,OACnD,IAAKC,GAAQQ,UACT,OAEJR,EAAOQ,UAAU,CACbhD,UACA7J,WACA1D,SACAqL,UACAnF,QACAgK,WAAYhC,EAAUiC,OAAOD,WAC7BrB,cAAe,IAAKA,IAE5B,CAvEI2B,CAAmBX,GAKhB,SAAoB/b,GACvB,MAAM,UAAEoa,EAAS,QAAEX,EAAO,SAAE7J,EAAQ,OAAE1D,EAAM,QAAEqL,EAAO,MAAEnF,EAAK,cAAE2I,GAAkB/a,EAChF,IAAK4P,EAAS+M,OACV,OAEJ,MAAMV,EAAS7B,EAAUwC,cAAc1J,IAAItD,EAAS+M,QACpD,IAAKV,EACD,OAEJA,EAAOE,KAAK,CACR1C,UACA7J,WACA1D,SACAqL,UACAnF,QACAgK,WAAYhC,EAAUiC,OAAOD,WAC7BrB,cAAe,IAAKA,IAE5B,CAtBI8B,CAAWd,GACXtC,EAAQ0B,yBAA2B,cACnC1B,EAAQqD,gBACZ,CChEA,SAASC,GAAkBpS,EAAQqS,EAAWhQ,GAC1C,MAAMiQ,EAAWD,EAAUhQ,QACVjJ,IAAbkZ,IACAtS,EAAOqC,IAAQrC,EAAOqC,I1BEohB,G0BFnfiQ,EAE/D,CACA,SAASC,GAASC,EAAQ1J,EAAO2J,GAAY,GACzC,IAAK3J,EACD,OAGJ,IADgB0J,EAEZ,OAEJ,MAAME,EAJUF,EAIa1J,MAC7B,IAAK4J,EACD,OAEJ,MAAMC,EAAO,IAAIC,IACjB,IAAK,MAAMvQ,KAAOqQ,EACTG,OAAOC,UAAUC,eAAeC,KAAKN,EAAcrQ,IAGxDsQ,EAAK9Y,IAAI6Y,EAAarQ,IAE1B,IAAK,MAAMA,KAAOyG,EACT+J,OAAOC,UAAUC,eAAeC,KAAKlK,EAAOzG,IAGjDsQ,EAAK9Y,IAAIiP,EAAMzG,IAEnB,IAAK,MAAMA,KAAOsQ,EAAM,CACpB,MAAM9V,EAAQiM,EAAMmK,iBAAiB5Q,GAChCxF,EAID6V,EAAavJ,YAAY9G,EAAKxF,EAAO4V,EAAY,YAAc,IAH/DC,EAAaQ,eAAe7Q,EAKpC,CACJ,Ed3CA,SAAW+G,GACPA,EAAkB,OAAI,SACtBA,EAAqB,UAAI,WAC5B,CAHD,CAGGA,KAAcA,GAAY,CAAC,IcyCvB,MAAM+J,GACT3a,YAAYiX,EAAWxF,GACnBrR,KAAK6W,UAAYA,EACjB7W,KAAKwa,uBAAyBnO,IAC1B,IAAK,MAAMoO,KAAWza,KAAK0a,kBACvBD,EAAQvB,YAAY7M,EACxB,EAEJrM,KAAK2a,sBAAwB,CAACC,EAAKvO,EAAU1D,EAAQkS,EAAU/D,EAAaI,KACxE,IAAK,MAAMuD,KAAWza,KAAK8a,iBAAkB,CACzC,GAAIL,EAAQM,eAAgB,CACxB,MAAM,KAAE7C,EAAI,OAAEI,GAAWmC,EAAQM,eAAe1O,EAAUuO,EAAKjS,EAAQkS,GACnE3C,IACApB,EAAYoB,KAAOA,GAEnBI,IACAxB,EAAYwB,OAASA,EAE7B,CACA,GAAImC,EAAQO,mBAAoB,CAC5B,MAAMC,EAAmBR,EAAQO,mBAAmB3O,GACpD,IAAK,MAAM5C,KAAOwR,EACdzB,GAAkBtC,EAAW+D,EAAkBxR,EAEvD,CACAgR,EAAQS,aAAa7O,EACzB,GAEJrM,KAAKmb,oBAAsB,KACvB,IAAK,MAAMC,KAAUpb,KAAKqb,eACtBD,EAAOE,UACX,EAEJtb,KAAKub,yBAA2BlP,IAC5B,IAAImP,EAAQC,EACZ,IAAK,MAAML,KAAUpb,KAAK0b,cAOtB,IANKF,GAAUJ,EAAOO,oBAClBH,EAASrJ,GAAgBnS,KAAK4b,QAASR,EAAOO,kBAAkBtP,MAE/DoP,GAAUL,EAAOS,sBAClBJ,EAAStJ,GAAgBnS,KAAK4b,QAASR,EAAOS,oBAAoBxP,KAElEmP,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,EAAO,EAE3Bzb,KAAK8b,WAAahU,UACd,MAA8CiU,EAA9B/b,KAAK6W,UAAUmF,cAA+BjF,eAAegF,MAAOlK,EAAQkK,EAAMlK,MAClG,GAAIA,EAAO,CACP,MAAMoK,EAAWrK,GAAgB5R,KAAK4b,QAAS/J,GAC/C,GAAIoK,EAAU,CACV,MAAMC,EAAa,IACZD,EACHxE,EAAGsE,EAAM/H,SAEbhU,KAAKmc,iBAAmBpI,GAAgBmI,EAAYA,EAAWzE,EACnE,CACJ,YAEU,IAAI2E,SAAQ,CAACC,EAASC,KACxB,IAAKP,EAAMQ,MACP,OAEJ,MAAMC,EAAMjV,SAAS0I,cAAc,OACnCuM,EAAIC,iBAAiB,QAAQ,KACzBzc,KAAK0c,YAAc,CACfH,MAAOC,EACPxI,QAAS+H,EAAM/H,SAEnBqI,GAAS,IAEbG,EAAIC,iBAAiB,SAASE,IAC1BL,EAAOK,EAAItW,MAAM,IAErBmW,EAAII,IAAMb,EAAMQ,KAAK,GAE7B,EAEJvc,KAAK6c,WAAa,KACd,MAAMpS,EAAUzK,KAAKyK,QAASU,EAAUnL,KAAK6W,UAAUmF,cACvD,GAAKvR,EAAL,CAGIzK,KAAK8c,YACL9c,KAAK+c,sBAGL/c,KAAKgd,sBAET,IAAK,MAAMvT,KAAO0B,EAAQ+E,MAAO,CAC7B,IAAKzG,IAAQ0B,EAAQ+E,QAAU+J,OAAOC,UAAUC,eAAeC,KAAKjP,EAAQ+E,MAAOzG,GAC/E,SAEJ,MAAMxF,EAAQkH,EAAQ+E,MAAMzG,GACvBxF,GAGLwG,EAAQyF,MAAMK,YAAY9G,EAAKxF,EAAO,YAC1C,CAhBA,CAgBA,EAEJjE,KAAKid,WAAanV,UACd,MAA8CoV,EAA9Bld,KAAK6W,UAAUmF,cAA+BmB,UAAUC,KAAKF,MAAOG,EAAYH,EAAMhF,KACtG,IAAKgF,EAAMjT,OACP,OAEJ,MAAM+J,E1B/IqW,E0B+IlUkJ,EAAM/c,OAC/C,GAAIkd,EAAUxL,MAAO,CACjB,MAAMyL,EAAY1L,GAAgB5R,KAAK4b,QAASyB,EAAUxL,OAC1D,IAAKyL,EACD,OAEJtd,KAAKud,WAAa,CACd1L,MAAO,IACAyL,GAEPtJ,UAER,YAEU,IAAIoI,SAAQ,CAACC,EAASC,KACxB,IAAKe,EAAUd,MACX,OAEJ,MAAMC,EAAMjV,SAAS0I,cAAc,OACnCuM,EAAIC,iBAAiB,QAAQ,KACzBzc,KAAKud,WAAa,CACdhB,MAAOC,EACPxI,WAEJqI,GAAS,IAEbG,EAAIC,iBAAiB,SAASE,IAC1BL,EAAOK,EAAItW,MAAM,IAErBmW,EAAII,IAAMS,EAAUd,KAAK,GAEjC,EAEJvc,KAAKwd,WAAaC,IACdzd,KAAK4Y,MAAKgC,GDjLf,SAAmB1E,EAASQ,EAAW+G,GAC1CvH,EAAQiC,UAAYsF,GAAa,gBACjCvH,EAAQwH,SAAStf,EAAeA,EAAesY,EAAUtR,MAAOsR,EAAUrR,OAC9E,CC8K6BsY,CAAU/C,EAAK5a,KAAKmF,KAAMsY,IAAW,EAE1Dzd,KAAK4d,YAAc,CAACrB,EAAOvI,KACvBhU,KAAK4Y,MAAKgC,GDhLf,SAAoB1E,EAASQ,EAAW6F,EAAOvI,GAC7CuI,IAGLrG,EAAQ2H,YAAc7J,EACtBkC,EAAQ4H,UAAUvB,EAAOne,EAAeA,EAAesY,EAAUtR,MAAOsR,EAAUrR,QAClF6Q,EAAQ2H,YAAc,EAC1B,CCyK6BE,CAAWnD,EAAK5a,KAAKmF,KAAMoX,EAAOvI,IAAS,EAEhEhU,KAAKge,aAAe,KAChB,MAAMvT,EAAUzK,KAAKyK,QAChBA,IAGLzK,KAAKie,uBAAsBC,GAAYA,EAASC,eAChDne,KAAK6c,aACL7c,KAAKoe,iBACLpe,KAAKie,uBAAsBC,IAClBzT,GAAaA,aAAmB4T,MAGrCH,EAASI,QAAQ7T,EAAS,CAAE8T,YAAY,GAAO,IACjD,EAENve,KAAKgd,oBAAsB,KACvB,MAAMvS,EAAUzK,KAAKyK,QAAS+T,EAAgBxe,KAAKye,eAC9ChU,GAAY+T,GAGjB7E,GAASlP,EAAS+T,GAAe,EAAK,EAE1Cxe,KAAKie,sBAAwB9T,IACpBnK,KAAK0e,mBAGVvU,EAASnK,KAAK0e,kBAAkB,EAEpC1e,KAAK+c,oBAAsB,KACvB,MAAMtS,EAAUzK,KAAKyK,QAChBA,GAGLkP,GAASlP,EAAS0E,GAAmBnP,KAAK6W,UAAUmF,cAAc2C,WAAW5O,SAAS,EAAK,EAE/F/P,KAAK4b,QAAUvK,EACfrR,KAAK4e,cAAgB,CACjBvZ,OAAQ,EACRD,MAAO,GAEX,MAAM2H,EAAU8J,EAAUiC,OAAOD,WAAYgG,EAAU7e,KAAK4e,cAC5D5e,KAAKmF,KAAO,CACRE,OAAQwZ,EAAQxZ,OAAS0H,EACzB3H,MAAOyZ,EAAQzZ,MAAQ2H,GAE3B/M,KAAK8e,SAAW,KAChB9e,KAAK+e,YAAa,EAClB/e,KAAK8a,iBAAmB,GACxB9a,KAAK0a,kBAAoB,GACzB1a,KAAKqb,eAAiB,GACtBrb,KAAK0b,cAAgB,EACzB,CACIoB,kBACA,OAAO9c,KAAK6W,UAAUmF,cAAc2C,WAAW1U,MACnD,CACAwM,QACI,MAAMtL,EAAUnL,KAAK6W,UAAUmF,cAAekB,EAAQ/R,EAAQgS,UAAUC,KAAKF,MAAOG,EAAYrd,KAAKud,WACjGpS,EAAQ4L,eAAe9M,OACvBjK,KAAKgf,QAEA9B,EAAMjT,QAAUiT,EAAM/c,O1BlP+iB,G0BkPrhBkd,EACjDA,EAAUxL,MACV7R,KAAKwd,WAAWzJ,GAAgBsJ,EAAUxL,MAAOwL,EAAUrJ,UAEtDqJ,EAAUd,OACfvc,KAAK4d,YAAYP,EAAUd,MAAOc,EAAUrJ,SAG3C7I,EAAQsL,OACbzW,KAAK4Y,MAAKgC,IACNnE,GAAMmE,EAAK5a,KAAKmF,KAAK,GAGjC,CACA8J,UAEI,GADAjP,KAAKif,OACDjf,KAAK+e,WAAY,CACD/e,KAAKyK,SACZyU,SACTlf,KAAKyK,aAAUjK,CACnB,MAEIR,KAAKgd,sBAEThd,KAAK8a,iBAAmB,GACxB9a,KAAK0a,kBAAoB,GACzB1a,KAAKqb,eAAiB,GACtBrb,KAAK0b,cAAgB,EACzB,CACA9C,KAAKlW,GACD,MAAMkY,EAAM5a,KAAK8e,SACjB,GAAKlE,EAGL,OAAOlY,EAAGkY,EACd,CACAuE,UAAUzc,GACN,MAAMkY,EAAM5a,KAAK8e,SACjB,GAAKlE,EAGL,OAAOlY,EAAGkY,EACd,CACAhE,aAAavK,EAAUwC,GACnB,GAAIxC,EAAS+S,UAAY/S,EAASyC,UAC9B,OAEJ,MAAMnG,EAAS0D,EAASrB,YACxB,GAAIrC,G1BlSujB,E0BmSvjB,OAEJ,MAAM0W,EAAUhT,EAASuI,eAAgB0K,EAAUjT,EAASwI,kBAAoBwK,EAChF,IAAK7D,EAAQC,GAAUzb,KAAKub,yBAAyBlP,GAChDmP,IACDA,EAAS6D,GAER5D,IACDA,EAAS6D,IAER9D,GAAWC,IAGhBzb,KAAK4Y,MAAMgC,IACP,MAAM/D,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAeuD,EAAgBlT,EAASlB,QAAQ4E,OAAQyP,E1BjTof,E0BiThdnT,EAASmT,aAAcC,EAAiBD,GAAgBD,EAAcG,YAAa1L,EAAU3H,EAASsT,OAAO3L,SAAW3H,EAAS2H,SAAS/P,O1BjT0V,E0BiT9Q4W,EAAW7G,EAAUyL,EAAgBG,GAAxEvT,EAASwT,eAAiB7L,GAA+EyL,EAAgBvI,EAAY,CAAC,EAAGJ,EAAc,CACxdoB,KAAMsD,EAASvH,GAAgBuH,EAAQX,QAAYra,GAEvDsW,EAAYwB,OAASmD,EAASxH,GAAgBwH,EAAQmE,GAAkB9I,EAAYoB,KACpFlY,KAAK2a,sBAAsBC,EAAKvO,EAAU1D,EAAQkS,EAAU/D,EAAaI,GACzEN,GAAa,CACTC,YACAX,QAAS0E,EACTvO,WACAwC,QACAiI,cACAC,eAAgB5L,EAAQ4L,eAAe9M,OACvC+M,UAAW7L,EAAQ4L,eAAeC,UAClCrO,OAAQA,EAAS6W,GAAgBD,EAAcO,SAC/C9L,QAAS6G,EACT5D,OAAQ5K,EAASlB,QAAQ8L,OACzBC,cAEJlX,KAAKwa,uBAAuBnO,EAAS,GAE7C,CACA0T,mBAAmB3E,EAAQ/O,EAAUwC,GACjC7O,KAAK4Y,MAAKgC,GDlMX,SAA4B1E,EAASkF,EAAQ/O,EAAUwC,GACrDuM,EAAOxE,cAGZwE,EAAOxE,aAAaV,EAAS7J,EAAUwC,EAC3C,CC6LyBkR,CAAmBnF,EAAKQ,EAAQ/O,EAAUwC,IAC/D,CACAmR,WAAW5E,EAAQvM,GACf7O,KAAK4Y,MAAKgC,GD3MX,SAAoB1E,EAASkF,EAAQvM,GACnCuM,EAAOxC,MAGZwC,EAAOxC,KAAK1C,EAASrH,EACzB,CCsMyBmR,CAAWpF,EAAKQ,EAAQvM,IAC7C,CACA/G,aACI9H,KAAKie,uBAAsBgC,GAAOA,EAAI9B,eACtCne,KAAK0e,kBfvQN,SAA8BvU,GACjC,IAAI9C,MAAuC,oBAArB6Y,iBAGtB,OAAO,IAAIA,iBAAiB/V,EAChC,CekQiCgW,EAAqBC,IAC1C,IAAK,MAAMC,KAAUD,EACG,eAAhBC,EAAOC,MAAkD,UAAzBD,EAAOE,eACvCvgB,KAAKge,cAEb,IAEJhe,KAAKsb,SACLtb,KAAK6c,mBACC7c,KAAK8b,aACX,UACU9b,KAAKid,YAIf,CAFA,MAAOuD,GACH7Z,KAAYN,MAAMma,EACtB,CACAxgB,KAAKoe,iBACLpe,KAAKie,uBAAsBgC,IAClBjgB,KAAKyK,SAAazK,KAAKyK,mBAAmB4T,MAG/C4B,EAAI3B,QAAQte,KAAKyK,QAAS,CAAE8T,YAAY,GAAO,IAEnDve,KAAKygB,eACLzgB,KAAK0gB,cACL1gB,KAAKgf,OACT,CACAZ,iBACI,MAA8CuC,EAA9B3gB,KAAK6W,UAAUmF,cAAoC2E,WAAYlW,EAAUzK,KAAKyK,QAC9F,IAAKA,EACD,OAEJ,MAAMqP,EAAerP,EAAQyF,MAC7B,GAAK4J,EAAL,CAGA,GAAI6G,EAAW9O,MAAO,CAClB,MAAMA,EAAQD,GAAgB5R,KAAK4b,QAAS+E,EAAW9O,OACvDiI,EAAa8G,gBAAkB/O,EAAQkC,GAAgBlC,EAAO8O,EAAW3M,SAAW,EACxF,MAEI8F,EAAa8G,gBAAkB,GAEnC9G,EAAa+G,gBAAkBF,EAAWpE,OAAS,GACnDzC,EAAagH,mBAAqBH,EAAWzb,UAAY,GACzD4U,EAAaiH,iBAAmBJ,EAAWK,QAAU,GACrDlH,EAAamH,eAAiBN,EAAWxb,MAAQ,EAXjD,CAYJ,CACAub,cACI1gB,KAAKqb,eAAiB,GACtB,IAAK,MAAMD,KAAUpb,KAAK6W,UAAUqK,QAAQ1P,SACpC4J,EAAOE,QACPtb,KAAKqb,eAAe8F,KAAK/F,IAEzBA,EAAOO,mBAAqBP,EAAOS,sBACnC7b,KAAK0b,cAAcyF,KAAK/F,EAGpC,CACAqF,eACIzgB,KAAK8a,iBAAmB,GACxB9a,KAAK0a,kBAAoB,GACzB,IAAK,MAAMD,KAAWza,KAAK6W,UAAUsG,UAAUiE,SACvC3G,EAAQvB,WACRlZ,KAAK0a,kBAAkByG,KAAK1G,IAE5BA,EAAQM,gBAAkBN,EAAQO,oBAAsBP,EAAQS,aAChElb,KAAK8a,iBAAiBqG,KAAK1G,EAGvC,CACA4G,WAAWzH,GACH5Z,KAAK+e,YAAc/e,KAAKyK,SACxBzK,KAAKyK,QAAQyU,SAEjBlf,KAAK+e,WACDnF,EAAO0H,SAAWzjB,KAAsB+b,EAAO0H,QACF,SAAvC1H,EAAO0H,QAAQzjB,GACfmC,KAAK+e,WACf/e,KAAKyK,QAAUmP,EACf5Z,KAAKyK,QAAQ8W,WAAa,OAC1BvhB,KAAKye,efIN,SAAoBvO,GACvB,MAAMsR,EAAcja,SAAS0I,cAAc,OAAOC,MAClD,IAAKA,EACD,OAAOsR,EAEX,IAAK,MAAM/X,KAAOyG,EAAO,CACrB,MAAMuR,EAAWvR,EAAMzG,GACvB,IAAKwQ,OAAOC,UAAUC,eAAeC,KAAKlK,EAAOzG,IAAQ/J,EAAO+hB,GAC5D,SAEJ,MAAMC,EAAaxR,EAAMmK,mBAAmBoH,GAC5C,IAAKC,EACD,SAEJ,MAAMC,EAAgBzR,EAAM0R,sBAAsBH,GAC7CE,EAIDH,EAAYjR,cAAckR,EAAUC,EAAYC,GAHhDH,EAAYjR,cAAckR,EAAUC,EAK5C,CACA,OAAOF,CACX,Ce3B8BK,CAAW7hB,KAAKyK,QAAQyF,OAC9C,MAAM4R,EAAe9hB,KAAK4e,cAC1BkD,EAAazc,OAASuU,EAAOmI,aAC7BD,EAAa1c,MAAQwU,EAAOoI,YAC5B,MAAMjV,EAAU/M,KAAK6W,UAAUiC,OAAOD,WAAYoJ,EAAajiB,KAAKmF,KACpEyU,EAAOvU,OAAS4c,EAAW5c,OAASyc,EAAazc,OAAS0H,EAC1D6M,EAAOxU,MAAQ6c,EAAW7c,MAAQ0c,EAAa1c,MAAQ2H,EACvD/M,KAAK8e,SAAW9e,KAAKyK,QAAQyX,WAAW,MACxCliB,KAAKie,uBAAsBgC,GAAOA,EAAI9B,eACtCne,KAAK6W,UAAUiC,OAAOqJ,OACtBniB,KAAKoe,iBACLpe,KAAKie,uBAAsBgC,IAClBjgB,KAAKyK,SAAazK,KAAKyK,mBAAmB4T,MAG/C4B,EAAI3B,QAAQte,KAAKyK,QAAS,CAAE8T,YAAY,GAAO,GAEvD,CACAS,QACI,MAAM7T,EAAUnL,KAAK6W,UAAUmF,cAC/Bhc,KAAK4Y,MAAKgC,IACFzP,EAAQ4L,eAAe9M,QAAUkB,EAAQ4L,eAAegF,OACxDtF,GAAMmE,EAAK5a,KAAKmF,MACZnF,KAAK0c,YACL1c,KAAK4d,YAAY5d,KAAK0c,YAAYH,MAAOvc,KAAK0c,YAAY1I,SAErDhU,KAAKmc,iBACVnc,KAAKwd,WAAWxd,KAAKmc,kBAGrBnc,KAAKwd,cAITxd,KAAKwd,YACT,GAER,CACAlC,SACI,IAAKtb,KAAKyK,QACN,OAAO,EAEX,MAAMoM,EAAY7W,KAAK6W,UAAWuL,EAAcvL,EAAU+C,OAAOgF,cAAeyD,EAAU,CACtFjd,MAAOpF,KAAKyK,QAAQuX,YACpB3c,OAAQrF,KAAKyK,QAAQsX,cACtBhV,EAAU8J,EAAUiC,OAAOD,WAAYoJ,EAAa,CACnD7c,MAAOid,EAAQjd,MAAQ2H,EACvB1H,OAAQgd,EAAQhd,OAAS0H,GAE7B,GAAIsV,EAAQhd,SAAW+c,EAAY/c,QAC/Bgd,EAAQjd,QAAUgd,EAAYhd,OAC9B6c,EAAW5c,SAAWrF,KAAKyK,QAAQpF,QACnC4c,EAAW7c,QAAUpF,KAAKyK,QAAQrF,MAClC,OAAO,EAEX,MAAMkd,EAAU,IAAKF,GACrBA,EAAY/c,OAASgd,EAAQhd,OAC7B+c,EAAYhd,MAAQid,EAAQjd,MAC5B,MAAMiJ,EAAarO,KAAKmF,KASxB,OARAnF,KAAKyK,QAAQrF,MAAQiJ,EAAWjJ,MAAQ6c,EAAW7c,MACnDpF,KAAKyK,QAAQpF,OAASgJ,EAAWhJ,OAAS4c,EAAW5c,OACjDrF,KAAK6W,UAAU0L,SACf1L,EAAUsG,UAAUqF,gBAAgB,CAChCpd,MAAOgd,EAAYhd,MAAQkd,EAAQld,MACnCC,OAAQ+c,EAAY/c,OAASid,EAAQjd,UAGtC,CACX,CACA4Z,OACIjf,KAAKie,uBAAsBgC,GAAOA,EAAI9B,eACtCne,KAAK0e,uBAAoBle,EACzBR,KAAK4Y,MAAKgC,GAAOnE,GAAMmE,EAAK5a,KAAKmF,OACrC,CACA2C,qBACI,IAAK9H,KAAKyK,UAAYzK,KAAKsb,SACvB,OAEJ,MAAMzE,EAAY7W,KAAK6W,UAAW4L,EAAe5L,EAAU6L,sBAC3D7L,EAAUsG,UAAUwF,aACpB3iB,KAAKmb,sBACDsH,SACM5L,EAAU+L,SAExB,ECxfJ,SAASC,GAAepY,EAASqY,EAAOC,EAAS9hB,EAAKkK,GAClD,GAAIlK,EAAK,CACL,IAAI+hB,EAAa,CAAEC,SAAS,GACxB9jB,EAAUgM,GACV6X,EAAWE,QAAU/X,OAEJ3K,IAAZ2K,IACL6X,EAAa7X,GAEjBV,EAAQgS,iBAAiBqG,EAAOC,EAASC,EAC7C,KACK,CACD,MAAMG,EAAgBhY,EACtBV,EAAQ2Y,oBAAoBN,EAAOC,EAASI,EAChD,CACJ,EdlBA,SAAW1S,GACPA,EAA4B,OAAI,SAChCA,EAA4B,OAAI,SAChCA,EAA4B,OAAI,QACnC,CAJD,CAIGA,KAAwBA,GAAsB,CAAC,Ice3C,MAAM4S,GACTzjB,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAKsjB,mBAAqB9C,IACtB,MAAM3J,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cACtD,GAAIhc,KAAKujB,SAAU,CACf,MAAMC,EAAqB3M,EAAU4M,cAAcC,MAAOC,EAAWH,EAAmBte,SACxF,IAAKye,EACD,OAEJH,EAAmBI,cAAgB,IAAKD,GACxCH,EAAmBK,WAAY,IAAIC,MAAOC,UAE1C3Z,GADgBe,EAAQsY,cAAcO,OAAOC,QACXpa,MAAMA,GAAQ7J,KAAK6W,UAAUqN,gBAAgBra,IACnF,CACe,aAAX2W,EAAEF,MACF6D,YAAW,IAAMnkB,KAAKokB,qB3B3BwmC,I2B4BloC,EAEJpkB,KAAKqkB,mBAAsB7D,IACvB,MAAM8D,EAAa9D,EAAG3J,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAU1L,QAASoZ,EAAgBpZ,EAAQoZ,cAAeC,EAAYF,EAAW5Z,QAAU6Z,EAAcE,KAAOF,EAAcG,MAAevZ,EAAQwZ,OAAO9X,MAAK+X,GAASA,EAAMC,OAASL,KAC1OM,QAAQ9W,MACV6I,EAAUkO,UAAUP,EAC7B,EAEJxkB,KAAKglB,wBAA0B,KAC3B,MAAMnO,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cACtDhc,KAAKokB,oBACAjZ,EAAQ8Z,cAGT1d,UAAU2d,QACVrO,EAAUsO,YAAa,EACvBtO,EAAUuO,UAGVvO,EAAUsO,YAAa,EACnBtO,EAAUwO,gBACLxO,EAAUyO,MAAK,GAGfzO,EAAU+B,MAAK,IAE5B,EAEJ5Y,KAAKulB,oBAAsB,KACnBvlB,KAAKwlB,iBACLC,aAAazlB,KAAKwlB,uBACXxlB,KAAKwlB,gBAEhB,MAAME,EAAe5d,UACjB,MAAM8R,EAAS5Z,KAAK6W,UAAU+C,aACxBA,GAAQ+L,eAAc,EAEhC3lB,KAAKwlB,eAAiBrB,YAAW,KAAWuB,GAAc,GAAE1lB,KAAK6W,UAAUmF,cAAcyH,cAAcO,OAAO1I,OAAOlO,MAAQjP,EAAsB,EAEvJ6B,KAAK4lB,8BAAgC,CAACC,EAAoB5kB,KACtD,MAAM6kB,EAAW9lB,KAAK+lB,UAAWlP,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAegK,EAAkBnP,EAAU4M,cAAchZ,QAC1I,IAAKub,EACD,OAEJ,MAAMC,EAAOD,EAAiBE,EAAWrP,EAAU+C,OAAOnP,QACtDyb,IACAA,EAAShW,MAAMiW,cAAgBF,IAASC,EAAW,UAAY,SAE7D/a,EAAQsY,cAAcO,OAAOoC,QAAQnc,QAAUkB,EAAQsY,cAAcO,OAAOC,QAAQha,UAG1F4Y,GAAemD,EAAiBjoB,EAAgB+nB,EAASO,UAAWplB,GACpE4hB,GAAemD,E3BzFkM,a2ByFhKF,EAASQ,WAAYrlB,GACtE4hB,GAAemD,E3B1F6P,Y2B0F5NF,EAASS,UAAWtlB,GAC/DkK,EAAQsY,cAAcO,OAAOC,QAAQha,QAItC4Y,GAAemD,EAAiBhoB,EAAe8nB,EAASU,cAAevlB,GACvE4hB,GAAemD,E3BhG+D,Y2BgGhCF,EAASW,QAASxlB,GAChE4hB,GAAemD,E3BjGiC,c2BiGAF,EAASY,UAAWzlB,IALpE4hB,GAAemD,EAAiBhoB,EAAe8nB,EAASa,SAAU1lB,GAOtE4hB,GAAemD,EAAiBH,EAAoBC,EAASc,WAAY3lB,GACzE4hB,GAAemD,E3BpG6R,c2BoG1PF,EAASe,YAAa5lB,GAAI,EAEhFjB,KAAK8mB,iBAAmB7lB,IACpB,MAAM6kB,EAAW9lB,KAAK+lB,UAAWlP,EAAY7W,KAAK6W,UAA8CkQ,EAAzBlQ,EAAUmF,cAAoCyH,cAAcuD,UAAWd,EAAWrP,EAAU+C,OAAOnP,QAC1K,IAAIob,EAAqB/nB,EACrBipB,IAAetW,GAAoBnJ,QACnCuP,EAAU4M,cAAchZ,QAAUnD,OAClCue,E3B3G6I,c2B6GxIkB,IAAetW,GAAoBwW,QAAUf,EAClDrP,EAAU4M,cAAchZ,QAAUyb,EAASgB,eAAiBhB,EAASiB,WAGrEtQ,EAAU4M,cAAchZ,QAAUyb,EAEtClmB,KAAKonB,kBAAkBnmB,GACvBjB,KAAKqnB,cAAcpmB,GACnBjB,KAAK4lB,8BAA8BC,EAAoB5kB,GACnDsG,UACAsb,GAAetb,S3BvHwV,mB2BuHvTue,EAASwB,iBAAkBrmB,GAAK,EACpF,EAEJjB,KAAKonB,kBAAoBnmB,IACrB,MAAM6kB,EAAW9lB,KAAK+lB,UAAWwB,EAAa/f,GAAe,gCACxD+f,SAG+B/mB,IAAhC+mB,EAAW9K,sBAIgBjc,IAA3B+mB,EAAWC,cAGXvmB,EACAsmB,EAAWC,YAAY1B,EAAS2B,gBAGhCF,EAAWG,eAAe5B,EAAS2B,iBAVnC5E,GAAe0E,EAAY,SAAUzB,EAAS6B,YAAa1mB,GAW/D,EAEJjB,KAAKqnB,cAAgBpmB,IACjB,MAAM6kB,EAAW9lB,KAAK+lB,UAAWlP,EAAY7W,KAAK6W,UAClD,IADuEA,EAAUmF,cACpEyH,cAAcO,OAAO1I,OAC9B,OAEJ,GAA8B,oBAAnBsM,eAEP,YADA/E,GAAevb,O3BnJsT,S2BmJjSwe,EAASxK,OAAQra,GAGzD,MAAMilB,EAAWrP,EAAU+C,OAAOnP,QAC9BzK,KAAK6nB,kBAAoB5mB,GACrBilB,GACAlmB,KAAK6nB,gBAAgBC,UAAU5B,GAEnClmB,KAAK6nB,gBAAgB1J,oBACdne,KAAK6nB,kBAEN7nB,KAAK6nB,iBAAmB5mB,GAAOilB,IACrClmB,KAAK6nB,gBAAkB,IAAID,gBAAgBG,IACzBA,EAAQlb,MAAK2T,GAAKA,EAAEwH,SAAW9B,KAI7ClmB,KAAKulB,qBAAqB,IAE9BvlB,KAAK6nB,gBAAgBvJ,QAAQ4H,GACjC,EAEJlmB,KAAKioB,WAAa,KACd,MAAM,cAAExE,GAAkBzjB,KAAK6W,UAC/B,IAAK4M,EACD,OAEJ,MAAM,MAAEC,GAAUD,EAClBC,EAAMwE,UAAW,EACjBxE,EAAMyE,aAAezE,EAAMxe,QAAQ,EAEvClF,KAAKooB,iBAAmB5H,IACpB,MAAM3J,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,eAAe,MAAE0H,GAAU7M,EAAU4M,cAC3FC,EAAM5a,QAAS,EACf,IAAIuf,GAAU,EACd,MAAMC,EAAgB5E,EAAMxe,SAC5B,GAAKojB,GAAkBnd,EAAQsY,cAAcO,OAAOC,QAAQha,OAA5D,CAGA,IAAK,MAAMmR,KAAUvE,EAAUqK,QAAQ1P,SACnC,GAAK4J,EAAOmN,qBAGZF,EAAUjN,EAAOmN,mBAAmBD,GAChCD,GACA,MAGHA,GACDroB,KAAKsjB,mBAAmB9C,GAE5BkD,EAAMwE,UAAW,CAbjB,CAasB,EAE1BloB,KAAKokB,kBAAoB,KACrB,MAAMX,EAAgBzjB,KAAK6W,UAAU4M,cACrC,IAAKA,EACD,OAEJ,MAAMC,EAAQD,EAAcC,aACrBA,EAAMxe,gBACNwe,EAAME,qBACNF,EAAMyE,aACb1E,EAAc9V,OAAS7P,EACvB4lB,EAAM5a,QAAS,EACf4a,EAAMwE,UAAW,CAAK,EAE1BloB,KAAKwoB,gBAAkBhI,IACnB,MAAM3J,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAeyH,EAAgB5M,EAAU4M,cAAeyC,EAAWrP,EAAU+C,OAAOnP,QAC1I,IAAKgZ,GAAehZ,QAChB,OAGJ,IAAI0M,EACJ,GAFAsM,EAAcC,MAAM5a,QAAS,EAEzB0X,EAAEF,KAAK7O,WAAW,WAAY,CAC9BzR,KAAKujB,UAAW,EAChB,MAAMkF,EAAajI,EACnB,GAAIiD,EAAchZ,UAAYnD,QAC1B,GAAI4e,EAAU,CACV,MAAMwC,EAAaxC,EAASyC,wBAC5BxR,EAAM,CACF/W,EAAGqoB,EAAWG,QAAUF,EAAWzf,KACnCnJ,EAAG2oB,EAAWI,QAAUH,EAAW1f,IAE3C,OAEC,GAAImC,EAAQsY,cAAcuD,YAAcvW,GAAoBwW,OAAQ,CACrE,MAAMjmB,EAASynB,EAAWT,OAAQA,EAASS,EAAWK,cACtD,GAAI9nB,GAAUgnB,GAAU9B,EAAU,CAC9B,MAAM6C,EAAa/nB,EAAO2nB,wBAAyBK,EAAahB,EAAOW,wBAAyBM,EAAa/C,EAASyC,wBACtHxR,EAAM,CACF/W,EAAGqoB,EAAWS,Q3BpOsB,E2BoOHH,EAAW9f,MAAQ+f,EAAW/f,KAAOggB,EAAWhgB,MACjFnJ,EAAG2oB,EAAWU,Q3BrOsB,E2BqOHJ,EAAW/f,KAAOggB,EAAWhgB,IAAMigB,EAAWjgB,KAEvF,MAEImO,EAAM,CACF/W,EAAGqoB,EAAWS,SAAWT,EAAWG,QACpC9oB,EAAG2oB,EAAWU,SAAWV,EAAWI,QAGhD,MACSJ,EAAWT,SAAW9B,IAC3B/O,EAAM,CACF/W,EAAGqoB,EAAWS,SAAWT,EAAWG,QACpC9oB,EAAG2oB,EAAWU,SAAWV,EAAWI,SAGhD,MAGI,GADA7oB,KAAKujB,SAAsB,cAAX/C,EAAEF,KACd4F,EAAU,CACV,MAAMkD,EAAa5I,EAAG6I,EAAYD,EAAWE,QAAQF,EAAWE,QAAQnpB,O3BzPu/B,G2ByP/9B8oB,EAAa/C,EAASyC,wBACtHxR,EAAM,CACF/W,EAAGipB,EAAUT,SAAWK,EAAWhgB,M3B3PqoB,G2B4PxqBnJ,EAAGupB,EAAUR,SAAWI,EAAWjgB,K3B5PqoB,G2B8PhrB,CAEJ,MAAM+D,EAAU8J,EAAUiC,OAAOD,WAC7B1B,IACAA,EAAI/W,GAAK2M,EACToK,EAAIrX,GAAKiN,GAEb0W,EAAcC,MAAMxe,SAAWiS,EAC/BsM,EAAc9V,OAAS5P,CAAc,EAEzCiC,KAAKupB,UAAY/I,IACb,MAAM7D,EAAM6D,EAAG8I,EAAU7pB,MAAM+pB,KAAK7M,EAAI8M,gBACxC,IAAK,MAAMC,KAASJ,EAChBtpB,KAAK2pB,SAASC,OAAOF,EAAMG,YAE/B7pB,KAAKokB,mBAAmB,EAE5BpkB,KAAK8pB,eAAiBtJ,IAClB,MAAM7D,EAAM6D,EAAG8I,EAAU7pB,MAAM+pB,KAAK7M,EAAI8M,gBACxC,IAAK,MAAMC,KAASJ,EAChBtpB,KAAK2pB,SAASC,OAAOF,EAAMG,YAE/B7pB,KAAKooB,iBAAiB5H,EAAE,EAE5BxgB,KAAK+pB,YAAcvJ,IACf,MAAM7D,EAAM6D,EAAG8I,EAAU7pB,MAAM+pB,KAAK7M,EAAI8M,gBACxC,IAAK,MAAMC,KAASJ,EAChBtpB,KAAK2pB,SAAS9Z,IAAI6Z,EAAMG,WAAYG,YAAYC,OAEpDjqB,KAAKwoB,gBAAgBhI,EAAE,EAE3BxgB,KAAKujB,UAAW,EAChBvjB,KAAK2pB,SAAW,IAAIra,IACpBtP,KAAK+lB,UAAY,CACbW,UAAW,IAAM1mB,KAAKioB,aACtBrB,WAAY,IAAM5mB,KAAKokB,oBACvBiC,UAAY7F,GAAMxgB,KAAKwoB,gBAAgBhI,GACvCiG,QAAUjG,GAAMxgB,KAAKooB,iBAAiB5H,GACtC8F,WAAa9F,GAAMxgB,KAAK+pB,YAAYvJ,GACpC+F,UAAY/F,GAAMxgB,KAAKwoB,gBAAgBhI,GACvCmG,SAAWnG,GAAMxgB,KAAKupB,UAAU/I,GAChCqG,YAAcrG,GAAMxgB,KAAKupB,UAAU/I,GACnCgG,cAAgBhG,GAAMxgB,KAAK8pB,eAAetJ,GAC1C8G,iBAAkB,IAAMtnB,KAAKglB,0BAC7B2C,YAAcnH,GAAMxgB,KAAKqkB,mBAAmB7D,GAC5CiH,eAAiBjH,GAAMxgB,KAAKqkB,mBAAmB7D,GAC/ClF,OAAQ,KACJtb,KAAKulB,qBAAqB,EAGtC,CACA2E,eACIlqB,KAAK8mB,kBAAiB,EAC1B,CACAqD,kBACInqB,KAAK8mB,kBAAiB,EAC1B,Gb9TJ,SAAWpW,GACPA,EAAuB,YAAI,cAC3BA,EAAyB,cAAI,gBAC7BA,EAA0B,eAAI,iBAC9BA,EAA4B,iBAAI,mBAChCA,EAA4B,iBAAI,mBAChCA,EAA8B,mBAAI,qBAClCA,EAA2B,gBAAI,kBAC/BA,EAAyB,cAAI,gBAC7BA,EAA0B,eAAI,iBAC9BA,EAAyB,cAAI,gBAC7BA,EAA6B,kBAAI,oBACjCA,EAA2B,gBAAI,iBAClC,CAbD,CAaGA,KAAcA,GAAY,CAAC,IcbvB,MAAM0Z,GACTxqB,cACII,KAAKiE,MAAQ,EACjB,CACAlD,cAAcC,EAAQvE,GAClB,MAAMoV,EAAQ,IAAIuY,GAUlB,OATAvY,EAAM1J,KAAKnH,QACER,IAAT/D,IACI4C,EAAS5C,IAAS+C,EAAQ/C,GAC1BoV,EAAM1J,KAAK,CAAElE,MAAOxH,IAGpBoV,EAAM1J,KAAK1L,IAGZoV,CACX,CACA1J,KAAK1L,GACGiD,EAAOjD,IAGNiD,EAAOjD,EAAKwH,SACbjE,KAAKiE,MAAQxH,EAAKwH,MAE1B,ECvBG,MAAMomB,GACTzqB,cACII,KAAK6R,MAAQ,IAAIuY,GACjBpqB,KAAK6R,MAAM5N,MAAQ,GACnBjE,KAAKuc,MAAQ,GACbvc,KAAKkF,SAAW,GAChBlF,KAAKghB,OAAS,GACdhhB,KAAKmF,KAAO,GACZnF,KAAKgU,QAAU,CACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEnCrR,IAAf/D,EAAK8f,QACLvc,KAAKuc,MAAQ9f,EAAK8f,YAEA/b,IAAlB/D,EAAKyI,WACLlF,KAAKkF,SAAWzI,EAAKyI,eAEL1E,IAAhB/D,EAAKukB,SACLhhB,KAAKghB,OAASvkB,EAAKukB,aAELxgB,IAAd/D,EAAK0I,OACLnF,KAAKmF,KAAO1I,EAAK0I,WAEA3E,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAE5B,EChCG,MAAMsW,GACT1qB,cACII,KAAKgU,QAAU,CACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEnCrR,IAAf/D,EAAK8f,QACLvc,KAAKuc,MAAQ9f,EAAK8f,YAED/b,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAE5B,ECjBG,MAAMuW,GACT3qB,cACII,KAAKgX,UAAY,kBACjBhX,KAAK+b,MAAQ,IAAIuO,GACjBtqB,KAAKiK,QAAS,CAClB,CACA9B,KAAK1L,GACD,IAAIiD,EAAOjD,GAAX,CAMA,QAHuB+D,IAAnB/D,EAAKua,YACLhX,KAAKgX,UAAYva,EAAKua,gBAEPxW,IAAf/D,EAAKsf,MAAqB,CAC1B,MAAMA,EAAQtf,EAAKsf,MAAOlK,EAASxS,EAAS5C,EAAKsf,OAAS,CAAElK,MAAOpV,EAAKsf,OAAUtf,EAAKsf,MACvF/b,KAAK+b,MAAM5T,UAAqB3H,IAAhBub,EAAMlK,YAAuCrR,IAAhBub,EAAMQ,MAAsBR,EAAQ,CAAElK,MAAOA,GAC9F,MACoBrR,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,OATvB,CAWJ,ECrBG,MAAMugB,GACT5qB,cACII,KAAKiK,QAAS,EACdjK,KAAK+P,OAAS,CAClB,CACA5H,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEHzJ,IAAhB/D,EAAKsT,SACL/P,KAAK+P,OAAStT,EAAKsT,QAE3B,ECfG,MAAM0a,GACT7qB,cACII,KAAKiK,QAAS,EACdjK,KAAK6J,KAAO,EAChB,CACA1B,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAELzJ,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,MAEzB,GlBfJ,SAAW8G,GACPA,EAAgB,OAAI,SACpBA,EAAmB,UAAI,WAC1B,CAHD,CAGGA,KAAYA,GAAU,CAAC,ImBFnB,MAAM+Z,GACT9qB,cACII,KAAKsK,UAAY,GACjBtK,KAAKiK,QAAS,EACdjK,KAAK6J,KAAO,GACZ7J,KAAKsgB,KAAO3P,GAAQga,MACxB,CACAxiB,KAAK1L,GACGiD,EAAOjD,UAGY+D,IAAnB/D,EAAK6N,YACLtK,KAAKsK,UAAY7N,EAAK6N,gBAEN9J,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAELzJ,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEHrJ,IAAd/D,EAAK6jB,OACLtgB,KAAKsgB,KAAO7jB,EAAK6jB,MAEzB,ECxBG,MAAMsK,GACThrB,cACII,KAAKiK,QAAS,EACdjK,KAAK6qB,MAAQ,EACb7qB,KAAK8qB,OAAS,EAClB,CACA3iB,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKouB,QACL7qB,KAAK6qB,MAAQpuB,EAAKouB,YAEFrqB,IAAhB/D,EAAKquB,SACL9qB,KAAK8qB,OAASruB,EAAKquB,QAE3B,EClBG,MAAMC,GACTnrB,cACII,KAAKiK,QAAS,EACdjK,KAAK6J,KAAO,GACZ7J,KAAKgrB,SAAW,IAAIJ,EACxB,CACAziB,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAELzJ,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,MAErB7J,KAAKgrB,SAAS7iB,KAAK1L,EAAKuuB,UAC5B,EClBG,MAAMC,GACTrrB,cACII,KAAKoN,MAAQ,GACbpN,KAAKiK,QAAS,CAClB,CACA9B,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQ3Q,EAAK2Q,YAEF5M,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAE3B,ECVG,MAAMihB,GACTtrB,cACII,KAAKikB,QAAU,IAAIwG,GACnBzqB,KAAKmrB,MAAQ,IAAIT,GACjB1qB,KAAKomB,QAAU,IAAI2E,GACnB/qB,KAAKsb,OAAS,IAAI2P,EACtB,CACA9iB,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJuD,KAAKikB,QAAQ9b,KAAK1L,EAAKwnB,SACvB,MAAMkH,EAAQ1uB,EAAK0uB,WACL3qB,IAAV2qB,IACAnrB,KAAKmrB,MAAQ/gB,GAA0B+gB,GAAOnhB,IAC1C,MAAMohB,EAAM,IAAIV,GAEhB,OADAU,EAAIjjB,KAAK6B,GACFohB,CAAG,KAGlBprB,KAAKomB,QAAQje,KAAK1L,EAAK2pB,SACvBpmB,KAAKsb,OAAOnT,KAAK1L,EAAK6e,OAC1B,EC3BG,MAAM+P,GACTzrB,YAAYyR,EAAQwF,GAChB7W,KAAK4b,QAAUvK,EACfrR,KAAKsrB,WAAazU,CACtB,CACA1O,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,IAAKuD,KAAKsrB,WACN,OAEJ,MAAMC,EAAcvrB,KAAK4b,QAAQ2P,YAAY5b,IAAI3P,KAAKsrB,YACtD,GAAKC,EAGL,IAAK,MAAMC,KAAcD,EAChBC,EAAWC,iBAGhBD,EAAWC,gBAAgBzrB,KAAMvD,EAEzC,ECnBG,MAAMivB,GACT9rB,YAAYyR,EAAQwF,GAChB7W,KAAKgnB,UAAYvW,GAAoBnJ,OACrCtH,KAAKgkB,OAAS,IAAIkH,GAClBlrB,KAAK2rB,MAAQ,IAAIN,GAAMha,EAAQwF,EACnC,CACA1O,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,MAAMuqB,EAAYvqB,EAAKuqB,eACLxmB,IAAdwmB,IACAhnB,KAAKgnB,UAAYA,GAErBhnB,KAAKgkB,OAAO7b,KAAK1L,EAAKunB,QACtBhkB,KAAK2rB,MAAMxjB,KAAK1L,EAAKkvB,MACzB,EChBG,MAAMC,GACTzjB,KAAK1L,GACGiD,EAAOjD,KAGPA,EAAKyI,WACLlF,KAAKkF,SAAW,CACZ9E,EAAG3D,EAAKyI,SAAS9E,GzCF0oC,GyCG3pCN,EAAGrD,EAAKyI,SAASpF,GzCH0oC,GyCI3pC+J,KAAMpN,EAAKyI,SAAS2E,MAAQ7D,GAAUsI,UAG1C7R,EAAK0O,UACLnL,KAAKmL,QAAU9B,GAAW,CAAC,EAAG5M,EAAK0O,UAE3C,GzBlBJ,SAAWyF,GACPA,EAAuB,OAAI,SAC3BA,EAAuB,OAAI,QAC9B,CAHD,CAGGA,KAAmBA,GAAiB,CAAC,I0BDjC,MAAMib,GACTjsB,cACII,KAAK8rB,SAAWC,IAChB/rB,KAAKmL,QAAU,CAAC,EAChBnL,KAAK6J,KAAO+G,GAAegJ,MAC/B,CACAzR,KAAK1L,GACGiD,EAAOjD,KAGNiD,EAAOjD,EAAKqvB,YACb9rB,KAAK8rB,SAAWrvB,EAAKqvB,UAEpBpsB,EAAOjD,EAAKoN,QACTpN,EAAKoN,OAAS+G,GAAeob,OAC7BhsB,KAAK6J,KAAO+G,GAAeob,OAG3BhsB,KAAK6J,KAAO+G,GAAegJ,QAG9Bla,EAAOjD,EAAK0O,WACbnL,KAAKmL,QAAU9B,GAAW,CAAC,EAAG5M,EAAK0O,UAE3C,GzB1BJ,SAAW0F,GACPA,EAAe,IAAI,MACnBA,EAAgB,KAAI,OACpBA,EAAiB,MAAI,OACxB,CAJD,CAIGA,KAAcA,GAAY,CAAC,I0BHvB,MAAMob,GACTrsB,cACII,KAAKgO,MAAO,EACZhO,KAAK6J,KAAOgH,GAAUqb,IACtBlsB,KAAKiE,OAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKuR,OACLhO,KAAKgO,KAAOvR,EAAKuR,WAEHxN,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEFrJ,IAAf/D,EAAKwH,QACLjE,KAAKiE,MAAQxH,EAAKwH,OAE1B,EClBG,MAAMkoB,GACTvsB,cACII,KAAK6kB,KAAO,GACZ7kB,KAAK8kB,QAAU,IAAImH,EACvB,CACA9jB,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKooB,OACL7kB,KAAK6kB,KAAOpoB,EAAKooB,MAErB7kB,KAAK8kB,QAAQ3c,KAAK1L,EAAKqoB,cACFtkB,IAAjB/D,EAAK0O,UACLnL,KAAKmL,QAAU9B,GAAW,CAAC,EAAG5M,EAAK0O,UAE3C,ECfG,MAAMihB,GACTxsB,cACII,KAAKuN,MAAQ,EACbvN,KAAKiK,QAAS,EACdjK,KAAK2V,MAAQ,EACb3V,KAAKyN,MAAQ,EACbzN,KAAKoN,MAAQ,EACbpN,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAK8Q,QACLvN,KAAKuN,MAAQrJ,EAAczH,EAAK8Q,aAEhB/M,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQzR,EAAczH,EAAKkZ,aAEjBnV,IAAf/D,EAAKgR,QACLzN,KAAKyN,MAAQvJ,EAAczH,EAAKgR,aAEjBjN,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQlJ,EAAczH,EAAK2Q,aAElB5M,IAAd/D,EAAKmZ,OACL5V,KAAK4V,KAAOnZ,EAAKmZ,MAEzB,EAEG,MAAMyW,WAA+BD,GACxCxsB,cACIyC,QACArC,KAAK6J,KAAOjE,GAAcoI,KAC1BhO,KAAKiO,WAAahI,GAAe1D,MACrC,CACA4F,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,UAGO+D,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEGrJ,IAApB/D,EAAKwR,aACLjO,KAAKiO,WAAaxR,EAAKwR,YAE/B,ECnDG,MAAMqe,WAAuBF,GAChCxsB,cACIyC,QACArC,KAAK0I,OAAS,EACd1I,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,SAGS+D,IAAhB/D,EAAKiM,SACL1I,KAAK0I,OAASxE,EAAczH,EAAKiM,QAEzC,ECfG,MAAM6jB,GACT3sB,cACII,KAAK2S,EAAI,IAAI2Z,GACbtsB,KAAK6S,EAAI,IAAIyZ,GACbtsB,KAAK4S,EAAI,IAAI0Z,EACjB,CACAnkB,KAAK1L,GACGiD,EAAOjD,KAGXuD,KAAK2S,EAAExK,KAAK1L,EAAKkW,GACjB3S,KAAK6S,EAAE1K,KAAK1L,EAAKoW,GACjB7S,KAAK4S,EAAEzK,KAAK1L,EAAKmW,GACrB,ECZG,MAAM4Z,WAAwBpC,GACjCxqB,cACIyC,QACArC,KAAKkN,UAAY,IAAIqf,EACzB,CACAxrB,cAAcC,EAAQvE,GAClB,MAAMoV,EAAQ,IAAI2a,GAUlB,OATA3a,EAAM1J,KAAKnH,QACER,IAAT/D,IACI4C,EAAS5C,IAAS+C,EAAQ/C,GAC1BoV,EAAM1J,KAAK,CAAElE,MAAOxH,IAGpBoV,EAAM1J,KAAK1L,IAGZoV,CACX,CACA1J,KAAK1L,GAED,GADA4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,GACP,OAEJ,MAAMiZ,EAAiBjZ,EAAKyQ,eACL1M,IAAnBkV,SAC8BlV,IAA1BkV,EAAezL,OACfjK,KAAKkN,UAAUyF,EAAExK,KAAKuN,GAGtB1V,KAAKkN,UAAU/E,KAAK1L,EAAKyQ,WAGrC,G9BlCJ,SAAW4D,GACPA,EAAsB,OAAI,SAC1BA,EAAsB,OAAI,SAC1BA,EAAuB,QAAI,SAC9B,CAJD,CAIGA,KAAkBA,GAAgB,CAAC,I+BJ/B,MAAM2b,GACT7sB,cACII,KAAK2V,MAAQ,CACjB,CACAxN,KAAK1L,GACGiD,EAAOjD,SAGQ+D,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQlZ,EAAKkZ,MAE1B,ECXG,MAAM+W,GACT9sB,cACII,KAAKiK,QAAS,EACdjK,KAAK2sB,QAAU,CACnB,CACAxkB,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEFzJ,IAAjB/D,EAAKkwB,UACL3sB,KAAK2sB,QAAUlwB,EAAKkwB,SAE5B,ECbG,MAAMC,GACThtB,cACII,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,IAGNiD,EAAOjD,EAAKwH,SACbjE,KAAKiE,MAAQC,EAAczH,EAAKwH,OAExC,EAEG,MAAM4oB,WAAiCD,GAC1ChtB,cACIyC,QACArC,KAAKkN,UAAY,IAAIkf,EACzB,CACAjkB,KAAK1L,GAED,GADA4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,GACP,OAEJ,MAAMyQ,EAAYzQ,EAAKyQ,eACL1M,IAAd0M,GACAlN,KAAKkN,UAAU/E,KAAK+E,EAE5B,EAEG,MAAM4f,WAAuCD,GAChDjtB,cACIyC,QACArC,KAAKkN,UAAY,IAAImf,EACzB,CACAlkB,KAAK1L,GACD4F,MAAM8F,KAAK1L,EACf,ECtCG,MAAMswB,WAA8BH,GACvChtB,cACIyC,QACArC,KAAKiE,MAAQ,CACjB,ECHG,MAAM+oB,GACTptB,cACII,KAAKqL,WAAa,IAAI0hB,GACtB/sB,KAAKsL,SAAW,IAAIyhB,EACxB,CACA5kB,KAAK1L,GACGiD,EAAOjD,KAGXuD,KAAKqL,WAAWlD,KAAK1L,EAAK4O,YAC1BrL,KAAKsL,SAASnD,KAAK1L,EAAK6O,UAC5B,ECPG,MAAM2hB,GACTrtB,cACII,KAAKktB,OAAS,IAAIT,GAClBzsB,KAAKoL,OAAS,IAAI4hB,GAClBhtB,KAAKiK,QAAS,EACdjK,KAAKmtB,SAAW,GAChBntB,KAAK6J,KAAOiH,GAAc1F,OAC1BpL,KAAKotB,QAAU,IAAIV,EACvB,CACAvkB,KAAK1L,GACGiD,EAAOjD,KAGXuD,KAAKktB,OAAO/kB,KAAK1L,EAAKywB,QACtBltB,KAAKoL,OAAOjD,KAAK1L,EAAK2O,aACF5K,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEDzJ,IAAlB/D,EAAK0wB,WACLntB,KAAKmtB,SAAWjpB,EAAczH,EAAK0wB,gBAErB3sB,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,MAErB7J,KAAKotB,QAAQjlB,KAAK1L,EAAK2wB,SAC3B,EC7BG,MAAMC,GACTztB,cACII,KAAKstB,OAAQ,EACbttB,KAAKkY,MAAO,EACZlY,KAAKmL,QAAU,CAAC,EAChBnL,KAAKsgB,KAAO,EAChB,CACAnY,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,MAAM0O,EAAU1O,EAAK0O,QACrB,QAAgB3K,IAAZ2K,EACA,IAAK,MAAMiO,KAAUjO,EAAS,CAC1B,MAAMwB,EAAOxB,EAAQiO,GACjBzM,IACA3M,KAAKmL,QAAQiO,GAAU/P,GAAWrJ,KAAKmL,QAAQiO,IAAW,CAAC,EAAGzM,GAEtE,MAEenM,IAAf/D,EAAK6wB,QACLttB,KAAKstB,MAAQ7wB,EAAK6wB,YAEJ9sB,IAAd/D,EAAKyb,OACLlY,KAAKkY,KAAOzb,EAAKyb,WAEH1X,IAAd/D,EAAK6jB,OACLtgB,KAAKsgB,KAAO7jB,EAAK6jB,KAEzB,EC7BG,MAAMiN,GACT3tB,cACII,KAAK0I,OAAS,EACd1I,KAAKiE,MAAQ,EACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKiM,SACL1I,KAAK0I,OAASxE,EAAczH,EAAKiM,cAElBlI,IAAf/D,EAAKwH,QACLjE,KAAKiE,MAAQC,EAAczH,EAAKwH,QAExC,ECfG,MAAMupB,GACT5tB,cACII,KAAKwE,SAAW,IAChBxE,KAAKiK,QAAS,EACdjK,KAAK+B,OAAS,CACV3B,EAAG,IACHN,EAAG,IAEX,CACAqI,KAAK1L,GACD,IAAIiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAWN,EAAczH,EAAK+H,gBAEnBhE,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEnBxN,EAAKsF,QAAQ,CACb,MAAM0rB,EAAUhxB,EAAKsF,OAAO3B,OACZI,IAAZitB,IACAztB,KAAK+B,OAAO3B,EAAIqtB,GAEpB,MAAMC,EAAUjxB,EAAKsF,OAAOjC,OACZU,IAAZktB,IACA1tB,KAAK+B,OAAOjC,EAAI4tB,EAExB,CACJ,EC7BG,MAAMC,GACT/tB,cACII,KAAKI,EAAI,GACTJ,KAAKF,EAAI,GACTE,KAAK6J,KAAO7D,GAAUsI,QACtBtO,KAAK2I,OAAS,CAClB,CACAR,KAAK1L,GACGiD,EAAOjD,UAGI+D,IAAX/D,EAAK2D,IACLJ,KAAKI,EAAI3D,EAAK2D,QAEHI,IAAX/D,EAAKqD,IACLE,KAAKF,EAAIrD,EAAKqD,QAEAU,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEDrJ,IAAhB/D,EAAKkM,SACL3I,KAAK2I,OAASlM,EAAKkM,QAE3B,ECvBG,MAAMilB,GACThuB,cACII,KAAK6tB,aAAe,KACpB7tB,KAAKiK,QAAS,EACdjK,KAAK8tB,SAAU,EACf9tB,KAAKmtB,SAAW,EACpB,CACAhlB,KAAK1L,GACGiD,EAAOjD,UAGe+D,IAAtB/D,EAAKoxB,eACL7tB,KAAK6tB,aAAe3pB,EAAczH,EAAKoxB,oBAEvBrtB,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEFzJ,IAAjB/D,EAAKqxB,UACL9tB,KAAK8tB,QAAUrxB,EAAKqxB,cAEFttB,IAAlB/D,EAAK0wB,WACLntB,KAAKmtB,SAAWjpB,EAAczH,EAAK0wB,WAE3C,ECtBG,MAAMY,GACTnuB,cACII,KAAKgD,OAAQ,EACbhD,KAAKoN,MAAQ,IAAIwf,GACjB5sB,KAAKiK,QAAS,EACdjK,KAAKmL,QAAU,CAAC,CACpB,CACAhD,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKuG,QACLhD,KAAKgD,MAAQvG,EAAKuG,OAEtBhD,KAAKoN,MAAMjF,KAAK1L,EAAK2Q,YACD5M,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEvBjK,KAAKguB,UAAYvxB,EAAKuxB,UAClBvxB,EAAK0O,UACLnL,KAAKmL,QAAU9B,GAAWrJ,KAAKmL,QAAS1O,EAAK0O,UAErD,ECvBG,MAAM8iB,GACT9lB,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEnCrR,IAAf/D,EAAK8f,QACLvc,KAAKuc,MAAQ9f,EAAK8f,OAE1B,ECXG,MAAM2R,GACTtuB,cACII,KAAKiK,QAAS,EACdjK,KAAKG,OAAS,GACdH,KAAKkY,KAAO,IAAI+V,EACpB,CACA9lB,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAELzJ,IAAd/D,EAAKyb,MACLlY,KAAKkY,KAAK/P,KAAK1L,EAAKyb,WAEJ1X,IAAhB/D,EAAK0D,SACLH,KAAKG,OAAS1D,EAAK0D,QAE3B,G3CpBJ,SAAW4Q,GACPA,EAAgB,OAAI,SACpBA,EAAc,KAAI,OAClBA,EAAa,IAAI,MACjBA,EAAiB,QAAI,UACrBA,EAAe,MAAI,OACtB,CAND,CAMGA,KAAYA,GAAU,CAAC,I4CLnB,MAAMod,GACTvuB,cACII,KAAK8kB,QAAU/T,GAAQqd,GAC3B,CACAjmB,KAAK1L,GACGiD,EAAOjD,UAGU+D,IAAjB/D,EAAKqoB,UACL9kB,KAAK8kB,QAAUroB,EAAKqoB,SAExB9kB,KAAK+I,OAAStM,EAAKsM,QAAUtM,EAAKqoB,QAClC9kB,KAAKiJ,KAAOxM,EAAKwM,MAAQxM,EAAKqoB,QAC9B9kB,KAAKkJ,MAAQzM,EAAKyM,OAASzM,EAAKqoB,QAChC9kB,KAAKgJ,IAAMvM,EAAKuM,KAAOvM,EAAKqoB,QAChC,ECdG,MAAMuJ,GACTzuB,cACII,KAAK6tB,aAAe,EACpB7tB,KAAKiK,QAAS,CAClB,CACA9B,KAAK1L,GACGiD,EAAOjD,UAGe+D,IAAtB/D,EAAKoxB,eACL7tB,KAAK6tB,aAAe3pB,EAAczH,EAAKoxB,oBAEvBrtB,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEnBxN,EAAKyI,WACLlF,KAAKkF,SAAWmE,GAAW,CAAC,EAAG5M,EAAKyI,WAE5C,ECVG,MAAMopB,GACT1uB,cACII,KAAKE,MAAQ,IAAIqtB,GACjBvtB,KAAKuuB,QAAU,IAAIf,GACnBxtB,KAAKwuB,OAAS,IAAIb,GAClB3tB,KAAKyN,MAAQ,EACbzN,KAAKwE,SAAW,CAAC,EACjBxE,KAAK4I,UAAY1J,EAAcuvB,KAC/BzuB,KAAK0uB,MAAQ,EACb1uB,KAAKiK,QAAS,EACdjK,KAAK2uB,QAAU,IAAIf,GACnB5tB,KAAK4uB,KAAO,IAAIb,GAChB/tB,KAAK6uB,SAAW,IAAIV,GACpBnuB,KAAKuC,QAAS,EACdvC,KAAKmF,MAAO,EACZnF,KAAK2V,MAAQ,EACb3V,KAAK8uB,KAAO,IAAIT,GAChBruB,KAAK+uB,UAAW,EAChB/uB,KAAKkd,MAAQ,IAAIgR,GACjBluB,KAAKgvB,SAAU,EACfhvB,KAAKivB,MAAO,CAChB,CACA9mB,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJuD,KAAKE,MAAMiI,KAAK7I,EAAS7C,EAAKyD,OAAS,CAAE+D,MAAOxH,EAAKyD,OAAUzD,EAAKyD,OACpEF,KAAKuuB,QAAQpmB,KAAK1L,EAAK8xB,SACvBvuB,KAAKwuB,OAAOrmB,KAAK1L,EAAK+xB,aACHhuB,IAAf/D,EAAKgR,QACLzN,KAAKyN,MAAQvJ,EAAczH,EAAKgR,aAEbjN,IAAnB/D,EAAKmM,YACL5I,KAAK4I,UAAYnM,EAAKmM,gBAEJpI,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAWlF,EAAS7C,EAAK+H,UACxB,CACE6G,WAAY5O,EAAK+H,SACjB8G,SAAU7O,EAAK+H,UAEjB,IAAK/H,EAAK+H,gBAEDhE,IAAf/D,EAAKiyB,QACL1uB,KAAK0uB,MAAQxqB,EAAczH,EAAKiyB,aAEhBluB,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEvBjK,KAAK2uB,QAAQxmB,KAAK1L,EAAKkyB,SACvB,MAAME,EAAWpyB,EAAKoyB,cACLruB,IAAbquB,IACItvB,EAASsvB,GACT7uB,KAAK6uB,SAAS1mB,KAAK0mB,GAGnB7uB,KAAK6uB,SAAS1mB,KAAK,CACf2c,QAAS+J,KAIrB7uB,KAAK4uB,KAAKzmB,KAAK1L,EAAKmyB,WACApuB,IAAhB/D,EAAK8F,SACLvC,KAAKuC,OAAS9F,EAAK8F,aAEL/B,IAAd/D,EAAK0I,OACLnF,KAAKmF,KAAO1I,EAAK0I,WAEF3E,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQzR,EAAczH,EAAKkZ,QAEpC3V,KAAK8uB,KAAK3mB,KAAK1L,EAAKqyB,WACEtuB,IAAlB/D,EAAKsyB,WACL/uB,KAAK+uB,SAAWtyB,EAAKsyB,UAEzB/uB,KAAKkd,MAAM/U,KAAK1L,EAAKygB,YACA1c,IAAjB/D,EAAKuyB,UACLhvB,KAAKgvB,QAAUvyB,EAAKuyB,cAENxuB,IAAd/D,EAAKwyB,OACLjvB,KAAKivB,KAAOxyB,EAAKwyB,KAEzB,EC1FG,MAAMC,WAAyB7C,GAClCzsB,cACIyC,QACArC,KAAKiP,QAAUnJ,GAAY2oB,KAC3BzuB,KAAK2V,MAAQ,CACjB,CACAxN,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,SAGU+D,IAAjB/D,EAAKwS,UACLjP,KAAKiP,QAAUxS,EAAKwS,QAE5B,ECdG,MAAMkgB,WAAgBrC,GACzBltB,cACIyC,QACArC,KAAKkN,UAAY,IAAIgiB,GACrBlvB,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ4F,MAAM8F,KAAK1L,GACX,MAAMyQ,EAAYzQ,EAAKyQ,eACL1M,IAAd0M,GACAlN,KAAKkN,UAAU/E,KAAK+E,EAE5B,ECjBG,MAAMkiB,GACTxvB,cACII,KAAKiK,QAAS,EACdjK,KAAKoF,MAAQ,KACbpF,KAAKqF,OAAS,IAClB,CACA8C,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,YAEgB+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEvB,MAAM7E,EAAQ3I,EAAK2I,WACL5E,IAAV4E,IACApF,KAAKoF,MAAQA,GAEjB,MAAMC,EAAS5I,EAAK4I,YACL7E,IAAX6E,IACArF,KAAKqF,OAASA,EAEtB,GhDrBJ,SAAW2L,GACPA,EAAkB,OAAI,SACtBA,EAAgB,KAAI,MACvB,CAHD,CAGGA,KAAcA,GAAY,CAAC,IiDFvB,MAAMqe,GACTzvB,cACII,KAAK6J,KAAOmH,GAAA,OACZhR,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEFrJ,IAAf/D,EAAKwH,QACLjE,KAAKiE,MAAQxH,EAAKwH,OAE1B,ECdG,MAAMqrB,GACT1vB,cACII,KAAKuvB,QAAU,IAAIH,GACnBpvB,KAAKwvB,MAAQ,IAAIH,GACjBrvB,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,KAGXuD,KAAKuvB,QAAQpnB,KAAK1L,EAAK8yB,SACvBvvB,KAAKwvB,MAAMrnB,KAAK1L,EAAK+yB,YACFhvB,IAAf/D,EAAKwH,QACLjE,KAAKiE,MAAQxH,EAAKwH,OAE1B,EChBG,MAAMwrB,GACT7vB,cACII,KAAK+X,KAAO,EACZ/X,KAAK6R,MAAQ,IAAIuY,GACjBpqB,KAAKiK,QAAS,EACdjK,KAAK0I,OAAS,CACVtI,EAAG,EACHN,EAAG,GAEPE,KAAK6R,MAAM5N,MAAQ,MACvB,CACAkE,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKsb,OACL/X,KAAK+X,KAAOtb,EAAKsb,MAErB/X,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,YAC9BrR,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEHzJ,IAAhB/D,EAAKiM,cAGalI,IAAlB/D,EAAKiM,OAAOtI,IACZJ,KAAK0I,OAAOtI,EAAI3D,EAAKiM,OAAOtI,QAEVI,IAAlB/D,EAAKiM,OAAO5I,IACZE,KAAK0I,OAAO5I,EAAIrD,EAAKiM,OAAO5I,IAEpC,EC/BG,MAAM4vB,GACT9vB,cACII,KAAKstB,OAAQ,EACbttB,KAAKkY,MAAO,EACZlY,KAAKmL,QAAU,CAAC,EAChBnL,KAAKsgB,KAAO,QAChB,CACAnY,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,MAAM0O,EAAU1O,EAAK0O,QACrB,QAAgB3K,IAAZ2K,EACA,IAAK,MAAMsN,KAAStN,EAAS,CACzB,MAAMwB,EAAOxB,EAAQsN,GACjB9L,IACA3M,KAAKmL,QAAQsN,GAASpP,GAAWrJ,KAAKmL,QAAQsN,IAAU,CAAC,EAAG9L,GAEpE,MAEenM,IAAf/D,EAAK6wB,QACLttB,KAAKstB,MAAQ7wB,EAAK6wB,YAEJ9sB,IAAd/D,EAAKyb,OACLlY,KAAKkY,KAAOzb,EAAKyb,WAEH1X,IAAd/D,EAAK6jB,OACLtgB,KAAKsgB,KAAO7jB,EAAK6jB,KAEzB,EC5BG,MAAMqP,WAAsBtD,GAC/BzsB,cACIyC,QACArC,KAAKiP,QAAUnJ,GAAY2oB,KAC3BzuB,KAAK2V,MAAQ,CACjB,CACAxN,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,SAGU+D,IAAjB/D,EAAKwS,UACLjP,KAAKiP,QAAUxS,EAAKwS,QAE5B,ECdG,MAAM2gB,WAAa9C,GACtBltB,cACIyC,QACArC,KAAKkN,UAAY,IAAIyiB,GACrB3vB,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GAED,GADA4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,GACP,OAEJ,MAAMyQ,EAAYzQ,EAAKyQ,eACL1M,IAAd0M,GACAlN,KAAKkN,UAAU/E,KAAK+E,EAE5B,ECfG,MAAM2iB,GACTjwB,cACII,KAAKoF,MAAQ,CACjB,CACA+C,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQ2a,GAAgB7rB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEtCrR,IAAf/D,EAAK2I,QACLpF,KAAKoF,MAAQlB,EAAczH,EAAK2I,aAEf5E,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAU9P,EAAczH,EAAKuX,UAE1C,EClBG,MAAM8b,WAAelD,GACxBhtB,cACIyC,QACArC,KAAK0f,YAAc,EACnB1f,KAAK8f,SAAW,EAChB9f,KAAK+vB,aAAe,CACxB,CACA5nB,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,UAGc+D,IAArB/D,EAAKijB,cACL1f,KAAK0f,YAAcjjB,EAAKijB,kBAENlf,IAAlB/D,EAAKqjB,WACL9f,KAAK8f,SAAWrjB,EAAKqjB,eAECtf,IAAtB/D,EAAKszB,eACL/vB,KAAK+vB,aAAetzB,EAAKszB,cAEjC,ECTG,MAAMC,GACTpwB,YAAYyR,EAAQwF,GAChB7W,KAAK4b,QAAUvK,EACfrR,KAAKsrB,WAAazU,EAClB7W,KAAKoL,OAAS,IAAI4hB,GAClBhtB,KAAKiwB,WAAa,IAAIhD,GACtBjtB,KAAK6R,MAAQ,IAAI2a,GACjBxsB,KAAK6R,MAAM5N,MAAQ,OACnBjE,KAAKoZ,OAAS,IAAIiU,GAClBrtB,KAAKkwB,OAAS,CAAC,EACflwB,KAAKod,KAAO,IAAIkR,GAChBtuB,KAAKmwB,OAAS,IAAIb,GAClBtvB,KAAKgU,QAAU,IAAImb,GACnBnvB,KAAKowB,kBAAmB,EACxBpwB,KAAKiX,OAAS,IAAIwY,GAClBzvB,KAAKyY,MAAQ,IAAIiX,GACjB1vB,KAAKmF,KAAO,IAAIyqB,GAChB5vB,KAAKsY,OAAS,IAAIuX,GAClB7vB,KAAK+P,OAAS,IAAI+f,EACtB,CACA3nB,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,QAAoB+D,IAAhB/D,EAAKyzB,OACL,IAAK,MAAMG,KAASpW,OAAOF,KAAKtd,EAAKyzB,QAAS,CAC1C,IAAKjW,OAAOqW,OAAO7zB,EAAKyzB,OAAQG,GAC5B,SAEJ,MAAM1jB,EAAOlQ,EAAKyzB,OAAOG,QACZ7vB,IAATmM,IACA3M,KAAKkwB,OAAOG,GAAShnB,GAAWrJ,KAAKkwB,OAAOG,IAAU,CAAC,EAAG1jB,GAElE,MAE0BnM,IAA1B/D,EAAK2zB,mBACLpwB,KAAKowB,iBAAmB3zB,EAAK2zB,kBAEjCpwB,KAAKoL,OAAOjD,KAAK1L,EAAK2O,QACtBpL,KAAK6R,MAAM1J,KAAKqkB,GAAgB7rB,OAAOX,KAAK6R,MAAOpV,EAAKoV,QACxD7R,KAAKoZ,OAAOjR,KAAK1L,EAAK2c,QACtBpZ,KAAKod,KAAKjV,KAAK1L,EAAK2gB,MACpBpd,KAAKmwB,OAAOhoB,KAAK1L,EAAK0zB,QACtBnwB,KAAKgU,QAAQ7L,KAAK1L,EAAKuX,SACvBhU,KAAKyY,MAAMtQ,KAAK1L,EAAKgc,OACrBzY,KAAKmF,KAAKgD,KAAK1L,EAAK0I,MACpBnF,KAAKiX,OAAO9O,KAAK1L,EAAKwa,QACtBjX,KAAK+P,OAAO5H,KAAK1L,EAAKsT,QACtB/P,KAAKiwB,WAAW9nB,KAAK1L,EAAKwzB,iBACCzvB,IAAvB/D,EAAKgnB,gBACLzjB,KAAKyjB,cAAgBpa,GAAW,CAAC,EAAG5M,EAAKgnB,gBAE7C,MAAM8M,EAAe9zB,EAAK6b,OAQ1B,GAPIiY,IACAvwB,KAAKsY,OAASlO,GAA0BmmB,GAAcvmB,IAClD,MAAMohB,EAAM,IAAIyE,GAEhB,OADAzE,EAAIjjB,KAAK6B,GACFohB,CAAG,KAGdprB,KAAKsrB,WAAY,CACjB,MAAMlK,EAAWphB,KAAK4b,QAAQwF,SAASzR,IAAI3P,KAAKsrB,YAChD,GAAIlK,EACA,IAAK,MAAM3G,KAAW2G,EACd3G,EAAQ+V,aACR/V,EAAQ+V,YAAYxwB,KAAMvD,GAItC,MAAM8uB,EAAcvrB,KAAK4b,QAAQ2P,YAAY5b,IAAI3P,KAAKsrB,YACtD,GAAIC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWiF,sBACXjF,EAAWiF,qBAAqBzwB,KAAMvD,EAItD,CACJ,EC3FG,SAAS+zB,GAAYrlB,KAAYulB,GACpC,IAAK,MAAMC,KAAiBD,EACxBvlB,EAAQhD,KAAKwoB,EAErB,CACO,SAASF,GAAqBpf,EAAQwF,KAAc6Z,GACvD,MAAMvlB,EAAU,IAAI6kB,GAAiB3e,EAAQwF,GAE7C,OADA2Z,GAAYrlB,KAAYulB,GACjBvlB,CACX,CCGO,MAAMylB,GACThxB,YAAYyR,EAAQwF,GAChB7W,KAAK6wB,kBAAoBhnB,GACb7J,KAAK2kB,OAAO9X,MAAK+X,GAASA,EAAME,QAAQ7gB,OAAS2gB,EAAME,QAAQjb,OAASA,KAC5E7J,KAAK2kB,OAAO9X,MAAK+X,GAASA,EAAME,QAAQ7gB,OAAS2gB,EAAME,QAAQjb,OAASgH,GAAUqb,MAE1FlsB,KAAK8wB,cAAgBC,IACjB/wB,KAAKmI,KAAKnI,KAAK4b,QAAQoV,UAAUD,GAAQ,EAE7C/wB,KAAK4b,QAAUvK,EACfrR,KAAKsrB,WAAazU,EAClB7W,KAAKixB,UAAW,EAChBjxB,KAAK2gB,WAAa,IAAI0J,GACtBrqB,KAAK+W,eAAiB,IAAIwT,GAC1BvqB,KAAKyW,OAAQ,EACbzW,KAAKukB,cAAgB,CAAC,EACtBvkB,KAAKoN,MAAQ,EACbpN,KAAK2e,WAAa,IAAI6L,GACtBxqB,KAAKkxB,cAAe,EACpBlxB,KAAKmxB,SAAW,EAChBnxB,KAAKoxB,SAAW,IAChBpxB,KAAKyjB,cAAgB,IAAIiI,GAAcra,EAAQwF,GAC/C7W,KAAKqxB,gBAAkB,GACvBrxB,KAAKmd,UAAYsT,GAAqBzwB,KAAK4b,QAAS5b,KAAKsrB,YACzDtrB,KAAKilB,aAAc,EACnBjlB,KAAKsxB,wBAAyB,EAC9BtxB,KAAKuxB,WAAa,GAClBvxB,KAAK8qB,QAAS,EACd9qB,KAAKkQ,MAAQ,CAAC,EACdlQ,KAAK2kB,OAAS,GACd3kB,KAAKwxB,QAAU,GACnB,CACArpB,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,YAEgB+D,IAAhB/D,EAAKs0B,QACL3mB,GAA0B3N,EAAKs0B,QAAQA,GAAU/wB,KAAK8wB,cAAcC,UAElDvwB,IAAlB/D,EAAKw0B,WACLjxB,KAAKixB,SAAWx0B,EAAKw0B,eAENzwB,IAAf/D,EAAKga,QACLzW,KAAKyW,MAAQha,EAAKga,YAELjW,IAAb/D,EAAKgN,MACLzJ,KAAKyJ,IAAMhN,EAAKgN,UAEFjJ,IAAd/D,EAAKooB,OACL7kB,KAAK6kB,KAAOpoB,EAAKooB,WAEFrkB,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQlJ,EAAczH,EAAK2Q,QAEpC,MAAM8jB,EAAez0B,EAAKy0B,kBACL1wB,IAAjB0wB,IACAlxB,KAAKkxB,aAAeA,QAEF1wB,IAAlB/D,EAAK00B,WACLnxB,KAAKmxB,SAAWjtB,EAAczH,EAAK00B,WAEvC,MAAMC,EAAW30B,EAAK20B,cACL5wB,IAAb4wB,IACApxB,KAAKoxB,SAAWA,QAEK5wB,IAArB/D,EAAKwoB,cACLjlB,KAAKilB,YAAcxoB,EAAKwoB,kBAEQzkB,IAAhC/D,EAAK60B,yBACLtxB,KAAKsxB,uBAAyB70B,EAAK60B,6BAElB9wB,IAAjB/D,EAAK+0B,UACLxxB,KAAKwxB,QAAU/0B,EAAK+0B,SAExBxxB,KAAK2gB,WAAWxY,KAAK1L,EAAKkkB,YAC1B,MAAMhC,EAAaliB,EAAKkiB,WACpBxf,EAAUwf,GACV3e,KAAK2e,WAAW1U,OAAS0U,EAGzB3e,KAAK2e,WAAWxW,KAAKwW,GAEzB3e,KAAK+W,eAAe5O,KAAK1L,EAAKsa,gBAC9B/W,KAAKyjB,cAActb,KAAK1L,EAAKgnB,eACzBhnB,EAAK40B,kBACLrxB,KAAKqxB,gBAAkB50B,EAAK40B,gBAAgB1nB,KAAIK,IAC5C,MAAMohB,EAAM,IAAIQ,GAEhB,OADAR,EAAIjjB,KAAK6B,GACFohB,CAAG,KAGlBprB,KAAKmd,UAAUhV,KAAK1L,EAAK0gB,WACzBnd,KAAKkQ,MAAQ7G,GAAWrJ,KAAKkQ,MAAOzT,EAAKyT,OACzClQ,KAAK4b,QAAQ4U,YAAYxwB,KAAMvD,QACX+D,IAAhB/D,EAAKquB,SACL9qB,KAAK8qB,OAASruB,EAAKquB,QAEvB,MAAMS,EAAcvrB,KAAK4b,QAAQ2P,YAAY5b,IAAI3P,KAAKsrB,YACtD,GAAIC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWgF,aACXhF,EAAWgF,YAAYxwB,KAAMvD,GAIzC,QAAwB+D,IAApB/D,EAAK80B,WACL,IAAK,MAAMA,KAAc90B,EAAK80B,WAAY,CACtC,MAAME,EAAgB,IAAI5F,GAC1B4F,EAActpB,KAAKopB,GACnBvxB,KAAKuxB,WAAWpQ,KAAKsQ,EACzB,CAGJ,GADAzxB,KAAKuxB,WAAWG,MAAK,CAACja,EAAG/E,IAAM+E,EAAEqU,SAAWpZ,EAAEoZ,gBAC1BtrB,IAAhB/D,EAAKkoB,OACL,IAAK,MAAMC,KAASnoB,EAAKkoB,OAAQ,CAC7B,MAAMgN,EAAgB3xB,KAAK2kB,OAAO9X,MAAK7C,GAAKA,EAAE6a,OAASD,EAAMC,OAC7D,GAAK8M,EAMDA,EAAcxpB,KAAKyc,OANH,CAChB,MAAMgN,EAAW,IAAIzF,GACrByF,EAASzpB,KAAKyc,GACd5kB,KAAK2kB,OAAOxD,KAAKyQ,EACrB,CAIJ,CAEJ5xB,KAAKukB,cAAcE,KAAOzkB,KAAK6wB,kBAAkBhgB,GAAU4T,OAAOI,KAClE7kB,KAAKukB,cAAcG,MAAQ1kB,KAAK6wB,kBAAkBhgB,GAAU6T,QAAQG,IACxE,CACAgN,cAAczsB,EAAO2H,EAAS+kB,GAC1B9xB,KAAKmI,KAAK2pB,GACV,MAAMC,EAAoB/xB,KAAKuxB,WAAW1kB,MAAK7C,GAAKA,EAAEH,OAAS+G,GAAeob,QAAUA,OAAShiB,EAAE8hB,SAAWE,OAAOgG,WAAahoB,EAAE8hB,SAAW/e,EAAU3H,IAEzJ,OADApF,KAAKmI,KAAK4pB,GAAmB5mB,SACtB4mB,GAAmBjG,QAC9B,CACAmG,SAASpN,GACL,GAAIA,EAAM,CACN,MAAMqN,EAAclyB,KAAK2kB,OAAO9X,MAAK+X,GAASA,EAAMC,OAASA,IACzDqN,GACAlyB,KAAKmI,KAAK+pB,EAAY/mB,QAE9B,KACK,CACD,MAAmEgnB,EAAhD3qB,GAAe,iCAA8DkD,QAAS0nB,EAAepyB,KAAK6wB,kBAAkBsB,EAAiBthB,GAAU4T,KAAO5T,GAAU6T,OACvL0N,GACApyB,KAAKmI,KAAKiqB,EAAajnB,QAE/B,CACJ,G1DhKJ,SAAW8F,GACPA,EAAyB,SAAI,WAC7BA,EAA0B,UAAI,WACjC,CAHD,CAGGA,KAAmBA,GAAiB,CAAC,I2DHjC,MAAMohB,GACTzyB,YAAYyR,EAAQwF,GAChB7W,KAAK6W,UAAYA,EACjB7W,KAAK4b,QAAUvK,EACfrR,KAAKsyB,aAAe,GACpBtyB,KAAKuyB,qBAAuB,GAC5BvyB,KAAKwyB,qBAAuB,EAChC,CACAC,iBAAiB5jB,GACb,IAAK,MAAM2c,KAAcxrB,KAAKuyB,qBACtB/G,EAAWkH,aACXlH,EAAWmH,SAAS9jB,EAGhC,CACAqV,gBAAgBra,GACZ,IAAK,MAAM2hB,KAAcxrB,KAAKuyB,qBAC1B/G,EAAWtH,kBAAkBra,EAErC,CACA/B,aACI9H,KAAKsyB,mBAAqBtyB,KAAK4b,QAAQgX,eAAe5yB,KAAK6W,WAAW,GACtE7W,KAAKuyB,qBAAuB,GAC5BvyB,KAAKwyB,qBAAuB,GAC5B,IAAK,MAAMhH,KAAcxrB,KAAKsyB,aAAc,CACxC,OAAQ9G,EAAWlL,MACf,KAAKrP,GAAe4hB,SAChB7yB,KAAKuyB,qBAAqBpR,KAAKqK,GAC/B,MACJ,KAAKva,GAAekM,UAChBnd,KAAKwyB,qBAAqBrR,KAAKqK,GAGvCA,EAAWrJ,MACf,CACJ,CACA2Q,kBAAkBzmB,EAAUwC,GACxB,IAAK,MAAM2c,KAAcxrB,KAAKuyB,qBAC1B/G,EAAW/U,MAAMpK,EAAUwC,GAE/B,IAAK,MAAM2c,KAAcxrB,KAAKwyB,qBACtBhH,EAAWkH,UAAUrmB,IACrBmf,EAAWmH,SAAStmB,EAAUwC,EAG1C,CACAkkB,MAAM1mB,GACF,IAAK,MAAMmf,KAAcxrB,KAAKuyB,qBACtB/G,EAAWkH,aACXlH,EAAWuH,MAAM1mB,GAGzB,IAAK,MAAMmf,KAAcxrB,KAAKwyB,qBACtBhH,EAAWkH,UAAUrmB,IACrBmf,EAAWuH,MAAM1mB,EAG7B,ECzBJ,SAAS2mB,GAAWv2B,GAChB,IAAKkL,GAAUlL,EAAKw2B,QAASx2B,EAAKy2B,YAC9B,OAEJ,MAAMC,EjF5BsD,EiF4B3C12B,EAAKkM,OAClBlM,EAAK22B,MAAQ32B,EAAK42B,SAAWF,EAC7B12B,EAAK62B,OAAO72B,EAAKkM,QAEZlM,EAAK22B,MAAQD,GAClB12B,EAAK62B,MAAM72B,EAAKkM,OAExB,E3D3CA,SAAWuI,GACPA,EAAwB,OAAI,SAC5BA,EAAwB,OAAI,SAC5BA,EAAyB,QAAI,SAChC,CAJD,CAIGA,KAAoBA,GAAkB,CAAC,I2DwCnC,MAAMqiB,GACT3zB,YAAYyR,EAAQwF,GAChB7W,KAAK6W,UAAYA,EACjB7W,KAAKwzB,cAAgB,CAAC3c,EAAW3R,EAAU6K,EAAQ0jB,EjFvCoK,KiFwCnN,IAAK,MAAMrY,KAAUvE,EAAUqK,QAAQ1P,SAAU,CAC7C,MAAMkiB,OAAwClzB,IAA5B4a,EAAOuY,iBAAiCvY,EAAOuY,iBAAiBzuB,EAAUlF,WAAQQ,EACpG,GAAIkzB,EACA,OAAO/zB,EAASgB,OAAO+yB,EAAUtzB,EAAGszB,EAAU5zB,EAAGiQ,EAEzD,CACA,MAA0C6jB,EAAgBruB,GAAkC,CACxFJ,KADe0R,EAAU+C,OAAOzU,KAEhCD,SAAUA,IACViS,EAAMxX,EAASgB,OAAOizB,EAAcxzB,EAAGwzB,EAAc9zB,EAAGiQ,GAASpH,EAAS3I,KAAKgL,YAAa6jB,EAAW7uB,KAAKmL,QAAQiS,KAAKyR,SAAUgF,EAAiBZ,IACpJD,GAAW,CACPC,UACAC,WAAY,CAACniB,GAAQ3F,QACrBgoB,MAAOjc,EAAI/W,EACXizB,SAAUxc,EAAU+C,OAAOzU,KAAKC,MAChCkuB,MAAQrvB,GAAWkT,EAAI/W,GAAK6D,EAC5B0E,UACF,EACHmrB,EAAeb,IACdD,GAAW,CACPC,UACAC,WAAY,CAACniB,GAAQ3F,QACrBgoB,MAAOjc,EAAIrX,EACXuzB,SAAUxc,EAAU+C,OAAOzU,KAAKE,OAChCiuB,MAAQrvB,GAAWkT,EAAIrX,GAAKmE,EAC5B0E,UACF,EAMN,OAJAkrB,EAAchF,EAAS5lB,MAAQ4lB,EAAS/J,SACxC+O,EAAchF,EAAS3lB,OAAS2lB,EAAS/J,SACzCgP,EAAYjF,EAAS7lB,KAAO6lB,EAAS/J,SACrCgP,EAAYjF,EAAS9lB,QAAU8lB,EAAS/J,SACpC9kB,KAAK+zB,cAAc5c,EAAKsc,GACjBzzB,KAAKwzB,cAAc3c,OAAWrW,EAAWuP,EAAQ0jB,EjFzEw0B,GiF2E73Btc,CAAG,EAEdnX,KAAKg0B,mBAAqB,KACtB,MAA8DntB,E7EcnE,SAAiC+B,GACpC,MAAMqrB,EAAe7xB,EAAO1B,OAG5B,OAFAuzB,EAAa9zB,OAAS,EACtB8zB,EAAa/zB,MAAQ0I,EACdqrB,CACX,C6EnBiCC,CAAwBl0B,KAAK4I,WAA+BxH,OAAQ+yB,EAAcn0B,KAAKmL,QAAQiS,KACpH,GAAI+W,EAAYvrB,YAAc1J,EAAc4J,QAAUqrB,EAAYvrB,YAAc1J,EAAck1B,QAC1F,OAAOvtB,EAEX,MAAMwtB,EAAM3vB,EAASV,EAAcmwB,EAAYj0B,MAAM+D,QAASqwB,EAAY5vB,EAASV,EAAcmwB,EAAYj0B,MAAMwI,SAAUoN,EAAQ,CACjI7M,KAAMqrB,EAAYD,EAAMn2B,EACxBgL,MAAOorB,EAAYD,EAAMn2B,GAQ7B,OANKi2B,EAAYpF,WACbloB,EAAI3G,OAAS0D,EAAcM,EAAc4R,EAAM7M,KAAM6M,EAAM5M,SAE3DirB,EAAY5xB,QAAuC,iBAAtB4xB,EAAYxe,QACzC9O,EAAI1G,QAAU4C,KAEX8D,CAAG,EAEd7G,KAAK+zB,cAAgB,CAAC5c,EAAKsc,EjF9F4L,KiF+FnN,MAAMc,EAAoBv0B,KAAKmL,QAAQ8kB,WAAYtnB,EAAS3I,KAAKgL,YACjE,IAAKupB,EAAkBtqB,OACnB,OAAO,EAEX,MAAMuqB,EAAiBD,EAAkBnH,QACzC,GAAIoH,EAAevqB,OACf,OAAO,EAEX,MAAM0iB,EAAU6H,EAAe7H,QAC/B,GAAIA,GjFxGg5B,GiFwGv3B8G,EAAW9G,EACpC,MAAM,IAAIlsB,MAAM,GAAGxC,iDAEvB,QAAS+B,KAAK6W,UAAUsG,UAAUtQ,MAAKR,GAAY5H,EAAY0S,EAAK9K,EAASnH,UAAYyD,EAAS0D,EAASrB,aAAY,EAE3HhL,KAAKy0B,cAAgB5iB,IACjB,IAAKA,IAAU7R,KAAK00B,OAAU10B,KAAK20B,YAAc30B,KAAK00B,KAAKE,MACvD,OAAO/iB,EAEX,MAAMgjB,EAAa70B,KAAK00B,KAAKrpB,YAAcrL,KAAK00B,KAAKppB,SAAW,EjFjHo2B,EiFiHl0BwpB,EAAU90B,KAAK00B,KAAKrpB,WAAa5M,KAAKC,GAAKR,EjFjH+sB,EiFkH51B,OADmKO,KAAKkF,QAAQ3D,KAAK00B,KAAKx0B,OjFjHkqB,GiFiHjpB40B,IAAYr2B,KAAKC,GAAKm2B,IjFjH7K,EiFqHhD70B,KAAK20B,UACE30B,KAAK20B,UAEZ30B,KAAK00B,KAAKE,MxDmBnB,SAAkB/iB,EAAOyO,EAAMrc,GAClC,MAAO,CACH0O,EAAGd,EAAMc,EACTE,EAAGhB,EAAMgB,EACTD,EAAGf,EAAMe,GAAK0N,IAAS9P,GAAUukB,QzB/IosC,KyB+IrqC9wB,EAExE,CwDxBuB+wB,CAASnjB,EAAO7R,KAAK00B,KAAKE,MAAMtU,KAAMtgB,KAAK00B,KAAKE,MAAM3wB,OAE1D4N,EARIA,CAQC,EAEhB7R,KAAKi1B,cAAgB/vB,IACjB,MAAM2R,EAAY7W,KAAK6W,UAAWqe,EAAclxB,EAAchE,KAAKmL,QAAQ4E,OAAO9L,OAClFjE,KAAKkF,SAAWlF,KAAKwzB,cAAc3c,EAAW3R,EAAUlC,EAAMkyB,EjF/Hg3B,EiF+H71Bre,EAAU2a,UAC3FxxB,KAAKm1B,gBAAkBn1B,KAAKkF,SAAS9D,OACrC,MAAMiN,EAAawI,EAAU+C,OAAOzU,KAOpC,OANAnF,KAAKo1B,WAAa,IACXrqB,GAAY/K,KAAKmL,QAAQiS,KAAKoR,OAAQngB,GACzC1F,OAAQ3I,KAAKmL,QAAQiS,KAAKoR,OAAO7lB,QjFpI45B,EiFqI77BkB,KAAM7J,KAAKmL,QAAQiS,KAAKoR,OAAO3kB,MAAQ7D,GAAUsI,SAErDtO,KAAK4I,U7ExEV,SAAmCA,EAAW1D,EAAUspB,GAC3D,GAAIlvB,EAASsJ,GACT,OAAOlE,EAASkE,GAEpB,OAAQA,GACJ,KAAK1J,EAAc8J,IACf,OAAQvK,KAAKC,GAAKR,EACtB,KAAKgB,EAAcm2B,SACf,OAAQ52B,KAAKC,GAAKM,EACtB,KAAKE,EAAcgK,MACf,OJzE2c,EI0E/c,KAAKhK,EAAco2B,YACf,OAAO72B,KAAKC,GAAKM,EACrB,KAAKE,EAAc6J,OACf,OAAOtK,KAAKC,GAAKR,EACrB,KAAKgB,EAAcq2B,WACf,MJ/E6er3B,II+EteO,KAAKC,GAChB,KAAKQ,EAAc+J,KACf,OAAOxK,KAAKC,GAChB,KAAKQ,EAAcs2B,QACf,MJnF6et3B,KImFreO,KAAKC,GACjB,KAAKQ,EAAc4J,OACf,OAAOrK,KAAKmC,MAAM4tB,EAAO1uB,EAAIoF,EAASpF,EAAG0uB,EAAOpuB,EAAI8E,EAAS9E,GACjE,KAAKlB,EAAck1B,QACf,OAAO31B,KAAKmC,MAAMsE,EAASpF,EAAI0uB,EAAO1uB,EAAGoF,EAAS9E,EAAIouB,EAAOpuB,GACjE,QACI,OAAO2C,IAAcvE,EAEjC,C6E4C6Bi3B,CAA0Bz1B,KAAKmL,QAAQiS,KAAKxU,UAAW5I,KAAKkF,SAAUlF,KAAKo1B,YACpFp1B,KAAKmL,QAAQiS,KAAKxU,WACtB,KAAK1J,EAAc4J,OACf9I,KAAK01B,QAAUxkB,GAAgBpI,OAC/B,MACJ,KAAK5J,EAAck1B,QACfp0B,KAAK01B,QAAUxkB,GAAgBkjB,QAGvCp0B,KAAK0I,OAAStG,EAAO1B,MAAM,EAE/BV,KAAK4b,QAAUvK,CACnB,CACApC,QAAQ0mB,GACJ,GAAI31B,KAAK41B,aAAe51B,KAAK8O,UACzB,OAEJ9O,KAAK8O,WAAY,EACjB9O,KAAK2f,OAAOkW,SAAU,EACtB71B,KAAK81B,KAAKD,SAAU,EACpB,MAAMhf,EAAY7W,KAAK6W,UAAWkf,EAAgB/1B,KAAK+1B,cAA6Blf,EAAU8B,aAAahJ,IAAI3P,KAAKyY,QACvGud,kBAAkBh2B,MAC/B,IAAK,MAAMob,KAAUvE,EAAUqK,QAAQ1P,SACnC4J,EAAO6a,oBAAoBj2B,KAAM21B,GAErC,IAAK,MAAMlb,KAAW5D,EAAUsG,UAAUiE,SACtC3G,EAAQwb,oBAAoBj2B,KAAM21B,GAEtCI,GAAehD,MAAM/yB,MACrBA,KAAK4b,QAAQsa,cAAcxlB,GAAUulB,kBAAmB,CACpDpf,UAAW7W,KAAK6W,UAChBpa,KAAM,CACF4P,SAAUrM,OAGtB,CACA4Y,KAAK/J,GACD,MAAMgI,EAAY7W,KAAK6W,UAAW+C,EAAS/C,EAAU+C,OACrD,IAAK,MAAMwB,KAAUvE,EAAUqK,QAAQ1P,SACnCoI,EAAOmG,mBAAmB3E,EAAQpb,KAAM6O,GAE5C+K,EAAOhD,aAAa5W,KAAM6O,EAC9B,CACA+F,eACI,OAAO5U,KAAKy0B,cAAcz0B,KAAK2f,OAAO9N,OAASuD,GAAoBpV,KAAK6R,OAC5E,CACA3G,UACI,OAAOlL,KAAKgL,ajFtL0N,EiFsL/LvM,KAAKC,GAAKR,CACrD,CACA6M,cACI,MAAO,CACH3K,EAAGJ,KAAKkF,SAAS9E,EAAIJ,KAAK0I,OAAOtI,EACjCN,EAAGE,KAAKkF,SAASpF,EAAIE,KAAK0I,OAAO5I,EACjCC,EAAGC,KAAKkF,SAASnF,EAEzB,CACAiL,YACI,OAAOhL,KAAK2f,OAAOhX,QAAU3I,KAAKmF,KAAKlB,KAC3C,CACA4Q,iBACI,OAAO7U,KAAKy0B,cAAcz0B,KAAK2f,OAAO9N,OAASuD,GAAoBpV,KAAKm2B,aAC5E,CACAhU,KAAKiU,EAAIlxB,EAAUmxB,EAAiBhG,GAChC,MAAMxZ,EAAY7W,KAAK6W,UAAWxF,EAASrR,KAAK4b,QAChD5b,KAAKo2B,GAAKA,EACVp2B,KAAKqwB,MAAQA,EACbrwB,KAAKs2B,aAAc,EACnBt2B,KAAKu2B,YAAa,EAClBv2B,KAAK+Y,YAAa,EAClB/Y,KAAKgZ,WAAY,EACjBhZ,KAAKqX,cAAe,EACpBrX,KAAKw2B,aAAe,EACpBx2B,KAAK8O,WAAY,EACjB9O,KAAK41B,aAAc,EACnB51B,KAAKy2B,YAAa,EAClBz2B,KAAKoX,SAAW,EAChBpX,KAAK02B,WAAY,EACjB12B,KAAK8Y,OAAS,CACV6d,YAAa,CAAC,GAElB32B,KAAK01B,QAAUxkB,GAAgB0lB,OAC/B52B,KAAK62B,oBAAqB,EAC1B,MAAM9pB,EAAU8J,EAAUiC,OAAOD,WAAYie,EAAcjgB,EAAUmF,cAAe+a,EAAmBtG,GAAqBzwB,KAAK4b,QAAS/E,EAAWigB,EAAY3Z,YAAY,iBAAEiT,GAAqB2G,EAAkBC,EAAaD,EAAiB3d,OAAOkH,KAAM2W,EAAYF,EAAiBte,MAAM6H,KACpStgB,KAAKoZ,OAASxM,GAAyBoqB,EAAYh3B,KAAKo2B,GAAIhG,GAC5DpwB,KAAKyY,MAAQ7L,GAAyBqqB,EAAWj3B,KAAKo2B,GAAIhG,GAC1D,MAAM8G,EAAgBH,EAAiB3d,OAAQ+d,EAAeJ,EAAiBte,MAC/E,GAAI4d,EAAiB,CACjB,GAAIA,EAAgBjd,QAAQkH,KAAM,CAC9B,MAAwDlH,EAASxM,GAAtCypB,EAAgBjd,OAAOkH,KAA4DtgB,KAAKo2B,GAAIhG,GACnHhX,IACApZ,KAAKoZ,OAASA,EACd8d,EAAc/uB,KAAKkuB,EAAgBjd,QAE3C,CACA,GAAIid,EAAgB5d,OAAO6H,KAAM,CAC7B,MAAsD7H,EAAQ7L,GAApCypB,EAAgB5d,MAAM6H,KAA0DtgB,KAAKo2B,GAAIhG,GAC/G3X,IACAzY,KAAKyY,MAAQA,EACb0e,EAAahvB,KAAKkuB,EAAgB5d,OAE1C,CACJ,CACA,GAAIzY,KAAKoZ,SAAW9a,EAAkB,CAClC,MAAM84B,EAAmB,IAAIp3B,KAAK6W,UAAUwC,cAAcU,QAC1D/Z,KAAKoZ,OAASge,EAAiB34B,KAAKkF,MAAMlF,KAAK8D,SAAW60B,EAAiBj3B,QAC/E,CACA,GAAIH,KAAKyY,QAAUna,EAAkB,CACjC,MAAM+4B,EAAkB,IAAIr3B,KAAK6W,UAAU8B,aAAaoB,QACxD/Z,KAAKyY,MAAQ4e,EAAgB54B,KAAKkF,MAAMlF,KAAK8D,SAAW80B,EAAgBl3B,QAC5E,CACAH,KAAKs3B,WAjPb,SAAwBle,EAAQ8d,EAAed,EAAIhG,GAC/C,MAAMkH,EAAaJ,EAAc/rB,QAAQiO,GACzC,GAAKke,EAGL,OAAOjuB,GAAW,CACdikB,MAAO4J,EAAc5J,MACrBpV,KAAMgf,EAAchf,MACrBtL,GAAyB0qB,EAAYlB,EAAIhG,GAChD,CAwO0BmH,CAAev3B,KAAKoZ,OAAQ8d,EAAel3B,KAAKo2B,GAAIhG,GACtEpwB,KAAKw3B,UAxOb,SAAuB/e,EAAO0e,EAAcf,EAAIhG,GAC5C,MAAMoH,EAAYL,EAAahsB,QAAQsN,GACvC,GAAK+e,EAGL,OAAOnuB,GAAW,CACdikB,MAAO6J,EAAa7J,MACpBpV,KAAMif,EAAajf,MACpBtL,GAAyB4qB,EAAWpB,EAAIhG,GAC/C,CA+NyBqH,CAAcz3B,KAAKyY,MAAO0e,EAAcn3B,KAAKo2B,GAAIhG,GAClE2G,EAAiB5uB,KAAKkuB,GACtB,MAAMiB,EAAat3B,KAAKs3B,WACpBA,GACAP,EAAiB5uB,KAAKmvB,EAAWna,WAErC,MAAMqa,EAAYx3B,KAAKw3B,UACnBA,GACAT,EAAiB5uB,KAAKqvB,EAAUra,WAEpC,MAAMsG,EAAgB,IAAIiI,GAAcra,EAAQwF,GAChD4M,EAActb,KAAK0O,EAAUmF,cAAcyH,eAC3CA,EAActb,KAAK4uB,EAAiBtT,eACpCzjB,KAAKyjB,cAAgBA,EACrBzjB,KAAKu2B,WAAae,GAAYpf,MAAQ6e,EAAiB3d,OAAOlB,KAC9DlY,KAAKs2B,YAAcgB,GAAYhK,OAASyJ,EAAiB3d,OAAOkU,MAChEttB,KAAKgZ,UAAYwe,GAAWtf,MAAQ6e,EAAiBte,MAAMP,KAC3DlY,KAAK+Y,WAAaye,GAAWlK,OAASyJ,EAAiBte,MAAM6U,MAC7DttB,KAAKmL,QAAU4rB,EACf,MAAMW,EAAc13B,KAAKmL,QAAQiS,KAAKwR,KACtC5uB,KAAK23B,UAAY3zB,EAAc0zB,EAAYtqB,MAAMnJ,OAAS9F,EACtDu5B,EAAY1J,YACZhuB,KAAK+1B,cAAgB/1B,KAAK4b,QAAQgc,iBAAiBF,EAAY1J,WAC3DhuB,KAAK+1B,eAAiBlf,EAAUghB,QAAQH,EAAY1J,UAAWhuB,KAAK+1B,gBACpE/1B,KAAK+1B,cAAc5T,KAAKtL,IAGhCA,EAAUiC,OAAOgf,aAAa93B,MAC9BA,KAAKmF,KAAO2H,GAAkC9M,KAAKmL,QAAQhG,KAAM4H,GACjE/M,KAAK2f,OAAS,CACVkW,SAAS,GAEb71B,KAAK81B,KAAO,CACRD,SAAS,EACTzuB,OAAQ,GAEZpH,KAAKi1B,cAAc/vB,GACnBlF,KAAK+3B,gBAAkB/3B,KAAKg0B,qBAC5Bh0B,KAAKmH,SAAWnH,KAAK+3B,gBAAgB32B,OACrCpB,KAAKg4B,UjF7R42B,EiF6Rl1Bh0B,EAAchE,KAAKmL,QAAQiS,KAAK3P,OAC/D,MAAM0P,EAAYtG,EAAUsG,UAC5BA,EAAU8a,cAAcj4B,KAAKkF,SAASnF,GACtCC,KAAKwf,aAAexf,KAAKkF,SAASnF,EAAI8W,EAAU2a,QAChDxxB,KAAKk4B,MAAQ,GACb,IAAIC,EAAethB,EAAUwC,cAAc1J,IAAI3P,KAAKoZ,QAC/C+e,IACDA,EAAen4B,KAAK4b,QAAQwc,gBAAgBp4B,KAAKoZ,QAC7C+e,GACAthB,EAAUwC,cAAcxJ,IAAI7P,KAAKoZ,OAAQ+e,IAG7CA,GAAcE,YACdF,EAAaE,WAAWr4B,MAE5B,IAAIs4B,EAAczhB,EAAU8B,aAAahJ,IAAI3P,KAAKyY,OAC7C6f,IACDA,EAAct4B,KAAK4b,QAAQ2c,eAAev4B,KAAKyY,OAC3C6f,GACAzhB,EAAU8B,aAAa9I,IAAI7P,KAAKyY,MAAO6f,IAG3CA,GAAaE,WACbF,EAAYE,UAAUx4B,MAE1B,MAAMy4B,EAAgBH,GAAaI,cAC/BD,IACAz4B,KAAKk4B,MAAQO,EAAcz4B,OAE/BA,KAAKof,UAAW,EAChBpf,KAAK6X,YAAcjG,GAAgB5R,KAAK4b,QAAS5b,KAAKmL,QAAQ8L,OAAOpF,OACrE,IAAK,MAAM4I,KAAW0C,EAAUiE,SAC5B3G,EAAQ0H,KAAKniB,MAEjB,IAAK,MAAM24B,KAASxb,EAAUyb,OAC1BD,EAAMxW,OAAOniB,MAEjBm4B,GAAcU,eAAehiB,EAAW7W,MACxCs4B,GAAaO,eAAehiB,EAAW7W,MACvC,IAAK,MAAMob,KAAUvE,EAAUqK,QAAQ1P,SACnC4J,EAAO0d,kBAAkB94B,KAEjC,CACA+4B,iBACI,MAAMpwB,EAAS3I,KAAKgL,YAAaqD,EAAarO,KAAK6W,UAAU+C,OAAOzU,KAAMD,EAAWlF,KAAKkF,SAC1F,OAAQA,EAAS9E,IAAMuI,GACnBzD,EAASpF,IAAM6I,GACfzD,EAASpF,GAAKuO,EAAWhJ,OAASsD,GAClCzD,EAAS9E,GAAKiO,EAAWjJ,MAAQuD,CACzC,CACAqwB,YACI,OAAQh5B,KAAK8O,YAAc9O,KAAKof,UAAYpf,KAAK+4B,gBACrD,CACAhG,QACI,IAAK,MAAMtY,KAAWza,KAAK6W,UAAUsG,UAAUiE,SAC3C3G,EAAQsY,QAAQ/yB,KAExB,EC/VG,MAAMi5B,GACTr5B,YAAYsF,EAAUmH,GAClBrM,KAAKkF,SAAWA,EAChBlF,KAAKqM,SAAWA,CACpB,G3DHJ,SAAW8E,GACPA,EAAkB,OAAI,SACtBA,EAAqB,UAAI,WAC5B,CAHD,CAGGA,KAAcA,GAAY,CAAC,I4DDvB,MAAM+nB,GACTt5B,YAAYQ,EAAGN,EAAGwgB,GACdtgB,KAAKkF,SAAW,CACZ9E,EAAGA,EACHN,EAAGA,GAEPE,KAAKsgB,KAAOA,CAChB,EAEG,MAAM6Y,WAAeD,GACxBt5B,YAAYQ,EAAGN,EAAG6I,GACdtG,MAAMjC,EAAGN,EAAGqR,GAAUwZ,QACtB3qB,KAAK2I,OAASA,CAClB,CACAywB,SAAS3wB,GACL,OAAOhE,EAAYgE,EAAOzI,KAAKkF,WAAalF,KAAK2I,MACrD,CACA0wB,WAAWvjB,GACP,MAAMlK,EAAO5L,KAAKkF,SAAU2G,EAAOiK,EAAM5Q,SAAUo0B,EAAe76B,KAAK86B,IAAI1tB,EAAKzL,EAAIwL,EAAKxL,GAAtCk5B,EAA6C76B,KAAK86B,IAAI1tB,EAAK/L,EAAI8L,EAAK9L,GAAM+D,EAAI7D,KAAK2I,OACtI,GAAImN,aAAiBqjB,IAAUrjB,EAAMwK,OAASnP,GAAUwZ,OAAQ,CAE5D,OADkC9mB,EAAdiS,EAA8BnN,OAAelK,KAAKoC,KAAKy4B,GnFduJ,EmFc9HA,GnFd8H,EmFgBtO,CACK,GAAIxjB,aAAiB0jB,IAAa1jB,EAAMwK,OAASnP,GAAUsoB,UAAW,CACvE,MAAMC,EAAY5jB,GAAO,MAAE1Q,EAAK,OAAEC,GAAWq0B,EAAUv0B,KACvD,OADqE1G,KAAKk7B,IAAIL,EAAYl0B,EnFlBwI,GmFkBpH3G,KAAKk7B,IAAIL,EAAYj0B,EnFlB+F,ImFmBjNxB,GnFnBiN,GmFoB7Ny1B,GAAaz1B,EAAIuB,GAASk0B,GAAaz1B,EAAIwB,GAC5Ci0B,GAAal0B,GACbk0B,GAAaj0B,CACrB,CACA,OAAO,CACX,EAEG,MAAMm0B,WAAkBN,GAC3Bt5B,YAAYQ,EAAGN,EAAGsF,EAAOC,GACrBhD,MAAMjC,EAAGN,EAAGqR,GAAUsoB,WACtBz5B,KAAKmF,KAAO,CACRE,OAAQA,EACRD,MAAOA,EAEf,CACAg0B,SAAS3wB,GACL,MAAMmxB,EAAI55B,KAAKmF,KAAKC,MAAOuN,EAAI3S,KAAKmF,KAAKE,OAAQ8R,EAAMnX,KAAKkF,SAC5D,OAAOuD,EAAMrI,GAAK+W,EAAI/W,GAAKqI,EAAMrI,GAAK+W,EAAI/W,EAAIw5B,GAAKnxB,EAAM3I,GAAKqX,EAAIrX,GAAK2I,EAAM3I,GAAKqX,EAAIrX,EAAI6S,CAC9F,CACA0mB,WAAWvjB,GACP,GAAIA,aAAiBqjB,GACjB,OAAOrjB,EAAMujB,WAAWr5B,MAE5B,MAAM45B,EAAI55B,KAAKmF,KAAKC,MAAOuN,EAAI3S,KAAKmF,KAAKE,OAAQuG,EAAO5L,KAAKkF,SAAU2G,EAAOiK,EAAM5Q,SAAUoP,EAAQwB,aAAiB0jB,GAAY1jB,EAAM3Q,KAAO,CAAEC,MAAO,EAAGC,OAAQ,GAAKw0B,EAAKvlB,EAAMlP,MAAO00B,EAAKxlB,EAAMjP,OACtM,OAAOwG,EAAKzL,EAAIwL,EAAKxL,EAAIw5B,GAAK/tB,EAAKzL,EAAIy5B,EAAKjuB,EAAKxL,GAAKyL,EAAK/L,EAAI8L,EAAK9L,EAAI6S,GAAK9G,EAAK/L,EAAIg6B,EAAKluB,EAAK9L,CACpG,ECnDG,MAAMi6B,GACTn6B,YAAY65B,EAAWO,GACnBh6B,KAAKy5B,UAAYA,EACjBz5B,KAAKg6B,SAAWA,EAChBh6B,KAAKi6B,WAAa,KACd,MAAM,EAAE75B,EAAC,EAAEN,GAAME,KAAKy5B,UAAUv0B,UAAU,MAAEE,EAAK,OAAEC,GAAWrF,KAAKy5B,UAAUt0B,MAAM,SAAE60B,GAAah6B,KAClG,IAAK,IAAIk6B,EAAI,EAAGA,EpFA+T,EoFA3SA,IAAK,CACrC,MAAMC,EAAaD,EpFD6B,EoFEhDl6B,KAAKo6B,MAAMjZ,KAAK,IAAI4Y,GAAS,IAAIP,GAAUp5B,EAAIgF,EAAQlH,EAAOi8B,EAAYr6B,EAAIuF,EAASnH,GAAQO,KAAK2U,MAAM8mB,EAAIh8B,GAAQi8B,GAAa/0B,EAAQlH,EAAMmH,EAASnH,GAAO87B,GACrK,CACAh6B,KAAKq6B,UAAW,CAAI,EAExBr6B,KAAKs6B,QAAU,GACft6B,KAAKq6B,UAAW,EAChBr6B,KAAKo6B,MAAQ,EACjB,CACAG,OAAO9xB,GACH,QAAKzI,KAAKy5B,UAAUL,SAAS3wB,EAAMvD,YAG/BlF,KAAKs6B,QAAQn6B,OAASH,KAAKg6B,UAC3Bh6B,KAAKs6B,QAAQnZ,KAAK1Y,IACX,IAENzI,KAAKq6B,UACNr6B,KAAKi6B,aAEFj6B,KAAKo6B,MAAMzvB,MAAKpJ,GAAOA,EAAIg5B,OAAO9xB,MAC7C,CACAhB,MAAMqO,EAAO0kB,GACT,MAAM3zB,EAAM,GACZ,IAAKiP,EAAMujB,WAAWr5B,KAAKy5B,WACvB,MAAO,GAEX,IAAK,MAAM3uB,KAAK9K,KAAKs6B,SACZxkB,EAAMsjB,SAAStuB,EAAE5F,WAClBT,EAAYqR,EAAM5Q,SAAU4F,EAAE5F,UAAY4F,EAAEuB,SAASrB,eACnDwvB,GAASA,EAAM1vB,EAAEuB,YAGvBxF,EAAIsa,KAAKrW,EAAEuB,UAEf,GAAIrM,KAAKq6B,SACL,IAAK,MAAM94B,KAAOvB,KAAKo6B,MACnBvzB,EAAIsa,QAAQ5f,EAAIkG,MAAMqO,EAAO0kB,IAGrC,OAAO3zB,CACX,CACA4zB,YAAYv1B,EAAUyD,EAAQ6xB,GAC1B,OAAOx6B,KAAKyH,MAAM,IAAI0xB,GAAOj0B,EAAS9E,EAAG8E,EAASpF,EAAG6I,GAAS6xB,EAClE,CACAE,eAAex1B,EAAUC,EAAMq1B,GAC3B,OAAOx6B,KAAKyH,MAAM,IAAI+xB,GAAUt0B,EAAS9E,EAAG8E,EAASpF,EAAGqF,EAAKC,MAAOD,EAAKE,QAASm1B,EACtF,EChDJ,MAAMG,GAAkBtsB,IACpB,MAAM,OAAEhJ,EAAM,MAAED,GAAUiJ,EAC1B,OAAO,IAAImrB,IrFF68B,IqFEv7Bp0B,GrFFu7B,IqFEp6BC,ErFF27B,IqFEt6BD,ErFFs6B,IqFEl5BC,EAAO,EAEjG,MAAMu1B,GACTh7B,YAAYyR,EAAQwF,GAChB7W,KAAK66B,WAAa,IAAI1d,KAClBnd,KAAK86B,MAAM3Z,QAAQhE,EAAU,EAEjCnd,KAAK+6B,cAAgB,CAAC5vB,EAAS6vB,EAAa3K,KACxC,MAAM4K,EAAgB9vB,EAAQglB,OAC9B,IAAKhlB,EAAQglB,OAAOZ,SAAStlB,OAOzB,iBANczJ,IAAV6vB,EACArwB,KAAKk7B,OAASD,EAAczL,MAAMvrB,MAE7Bg3B,EAAczL,OACnBxvB,KAAKm7B,aAAatrB,IAAIwgB,EAAO4K,EAAczL,MAAMvrB,QAIzD,MAAMm3B,EAAgBp7B,KAAKq7B,mBAAmBJ,EAAc1L,SAAU+L,EAAqBL,EAAch3B,MAAOs3B,EAAoBN,EAAczL,MAAMvrB,MrFpB+1B,EqFoB50Bg3B,EAAczL,MAAMvrB,MAAQq3B,EAAoBE,EAAkB/8B,KAAK2E,IAAIk4B,EAAoBC,GAAqBH,EAAgBJ,EAAaS,EAAiBh9B,KAAK2E,IAAIpD,KAAKuN,MAAOvN,KAAK07B,QAAO1xB,GAAKA,EAAEqmB,QAAUA,IAAOlwB,aACxXK,IAAV6vB,EACArwB,KAAKk7B,OAASD,EAAczL,MAAMvrB,MAAQm3B,EAG1Cp7B,KAAKm7B,aAAatrB,IAAIwgB,EAAO4K,EAAczL,MAAMvrB,MAAQm3B,GAEzDK,EAAiBD,EACjBx7B,KAAKmhB,KAAK1iB,KAAK86B,IAAIiC,EAAkBC,QAAiBj7B,EAAW2K,EAASklB,GAErEoL,EAAiBD,GACtBx7B,KAAK27B,eAAeF,EAAiBD,EAAiBnL,EAC1D,EAEJrwB,KAAKq7B,mBAAqBO,IACtB,MAAM/kB,EAAY7W,KAAKsrB,WACvB,IAAKzU,EAAU+C,OAAOnP,UAAYmxB,EAAe3xB,OAC7C,OrFrC6lC,EqFuCjmC,MAAM2P,EAAS/C,EAAU+C,OAAOnP,QAASsC,EAAU8J,EAAUiC,OAAOD,WACpE,OAAQe,EAAOxU,MAAQwU,EAAOvU,QAAWu2B,EAAev2B,OAASu2B,EAAex2B,MAAQ2H,GrFxC0I,EqFwCrH,EAEjH/M,KAAK67B,cAAgB,CAAC32B,EAAUmxB,EAAiBhG,EAAOyL,KACpD,IACI,IAAIzvB,EAAWrM,KAAK86B,MAAMiB,MACrB1vB,IACDA,EAAW,IAAIknB,GAASvzB,KAAK4b,QAAS5b,KAAKsrB,aAE/Cjf,EAAS8V,KAAKniB,KAAKg8B,QAAS92B,EAAUmxB,EAAiBhG,GACvD,IAAI4L,GAAS,EAIb,GAHIH,IACAG,EAASH,EAAYzvB,KAEpB4vB,EACD,OAWJ,OATAj8B,KAAKk8B,OAAO/a,KAAK9U,GACjBrM,KAAKm8B,QAAQhb,KAAK9U,GAClBrM,KAAKg8B,UACLh8B,KAAK4b,QAAQsa,cAAcxlB,GAAU0rB,cAAe,CAChDvlB,UAAW7W,KAAKsrB,WAChB7uB,KAAM,CACF4P,cAGDA,CAIX,CAFA,MAAOmU,GACH7Z,KAAYF,QAAQ,GAAGxI,sBAAgCuiB,IAC3D,GAEJxgB,KAAKq8B,gBAAkB,CAAC/zB,EAAO+nB,EAAOsF,KAClC,MAAMtpB,EAAWrM,KAAKk8B,OAAO5zB,GAC7B,IAAK+D,GAAYA,EAASgkB,QAAUA,EAChC,OAAO,EAEX,MAAMiM,EAAOt8B,KAAKm8B,QAAQt0B,QAAQwE,GAWlC,OAVArM,KAAKk8B,OAAOK,OAAOj0B,ErF7E+lC,GqF8ElnCtI,KAAKm8B,QAAQI,OAAOD,ErF9E8lC,GqF+ElnCjwB,EAAS4C,QAAQ0mB,GACjB31B,KAAK4b,QAAQsa,cAAcxlB,GAAU8rB,gBAAiB,CAClD3lB,UAAW7W,KAAKsrB,WAChB7uB,KAAM,CACF4P,cAGRrM,KAAK66B,WAAWxuB,IACT,CAAI,EAEfrM,KAAK4b,QAAUvK,EACfrR,KAAKsrB,WAAazU,EAClB7W,KAAKg8B,QAAU,EACfh8B,KAAKk8B,OAAS,GACdl8B,KAAKm8B,QAAU,GACfn8B,KAAK86B,MAAQ,GACb96B,KAAKk7B,OAAS,EACdl7B,KAAKm7B,aAAe,IAAI7rB,IACxBtP,KAAKy8B,YAAa,EAClBz8B,KAAK08B,YAAc,EACnB18B,KAAK28B,oBAAsB,IAAItK,GAAmBhhB,EAAQwF,GAC1D7W,KAAK48B,qBAAsB,EAC3B,MAAMvuB,EAAawI,EAAU+C,OAAOzU,KACpCnF,KAAK68B,SAAW,IAAI9C,GAASY,GAAetsB,GrFtG6M,GqFuGzPrO,KAAK44B,OAAS,GACd54B,KAAKohB,SAAW,EACpB,CACI7T,YACA,OAAOvN,KAAKk8B,OAAO/7B,MACvB,CACA28B,qBACI,MAAMjmB,EAAY7W,KAAKsrB,WAAsBzU,EAAUmF,cAC/CqV,gBAAgB0L,SAAQjyB,GAAK9K,KAAKg9B,YAAYlyB,EAAE5F,SAAW6F,GAAYD,EAAE5F,SAAU2R,EAAU+C,OAAOzU,WAAQ3E,EAAWsK,EAAEK,UACrI,CACA6xB,YAAY93B,EAAUmxB,EAAiBhG,EAAOyL,GAC1C,MAAMmB,EAAYj9B,KAAKsrB,WAAWtP,cAAcmB,UAAUgT,OAAOX,MAAM3lB,KAAM2lB,OAAkBhvB,IAAV6vB,EAAsBrwB,KAAKk7B,OAAUl7B,KAAKm7B,aAAaxrB,IAAI0gB,IAAUrwB,KAAKk7B,OAASgC,EAAel9B,KAAKuN,MAC5L,GAAIiiB,ErFnHu/B,EqFoHv/B,OAAQyN,GACJ,KAAKjsB,GAAA,OAAkB,CACnB,MAAMmsB,EAAgBD,ErFtH0+B,EqFsH78B1N,EAC/C2N,ErFvH0gC,GqFwH1gCn9B,KAAK27B,eAAewB,GAExB,KACJ,CACA,KAAKnsB,GAAUosB,KACX,GAAIF,GAAgB1N,EAChB,OAKhB,OAAOxvB,KAAK67B,cAAc32B,EAAUmxB,EAAiBhG,EAAOyL,EAChE,CACArlB,QACIzW,KAAKk8B,OAAS,GACdl8B,KAAKm8B,QAAU,GACfn8B,KAAK48B,qBAAsB,CAC/B,CACA3tB,UACIjP,KAAKk8B,OAAS,GACdl8B,KAAKm8B,QAAU,GACfn8B,KAAK44B,OAAS,GACd54B,KAAKohB,SAAW,EACpB,CACAxI,KAAK/J,GACD,MAAMgI,EAAY7W,KAAKsrB,WAAY1R,EAAS/C,EAAU+C,OACtDA,EAAOnD,QACPzW,KAAKq9B,OAAOxuB,GACZ,IAAK,MAAMuM,KAAUvE,EAAUqK,QAAQ1P,SACnCoI,EAAOoG,WAAW5E,EAAQvM,GAE9B,IAAK,MAAM/D,KAAK9K,KAAKm8B,QACjBrxB,EAAE8N,KAAK/J,EAEf,CACA6sB,OAAO4B,GACH,OAAOt9B,KAAKk8B,OAAOR,OAAO4B,EAC9B,CACAzwB,KAAKywB,GACD,OAAOt9B,KAAKk8B,OAAOrvB,KAAKywB,EAC5B,CACA3tB,IAAIrH,GACA,OAAOtI,KAAKk8B,OAAO5zB,EACvB,CACA4b,gBAAgBra,GACZ7J,KAAK28B,oBAAoBzY,gBAAgBra,EAC7C,CACA/B,aACI,MAAM+O,EAAY7W,KAAKsrB,WAAYngB,EAAU0L,EAAUmF,cACvDhc,KAAK08B,YAAc,EACnB18B,KAAKy8B,YAAa,QACZz8B,KAAK0gB,cACX,IAAI2H,GAAU,EACd,IAAK,MAAMjN,KAAUvE,EAAUqK,QAAQ1P,SAEnC,GADA6W,EAAUjN,EAAOmiB,6BAA+BlV,EAC5CA,EACA,MAIR,GADAroB,KAAK88B,sBACAzU,EAAS,CACV,MAAM0O,EAAmB5rB,EAAQgS,UAAW+S,EAAS6G,EAAiB7G,OACtE,IAAK,MAAMG,KAASH,EAAQ,CACxB,MAAMsN,EAAetN,EAAOG,GAC5B,IAAK,IAAI6J,EAAIl6B,KAAKuN,MAAOkwB,EAAI,EAAGA,EAAID,EAAarN,QAAQlsB,OAASi2B,EAAInD,EAAiB5G,OAAOlsB,MAAOi2B,IAAKuD,IACtGz9B,KAAKg9B,iBAAYx8B,EAAWg9B,EAAcnN,EAElD,CACA,IAAK,IAAI6J,EAAIl6B,KAAKuN,MAAO2sB,EAAInD,EAAiB5G,OAAOlsB,MAAOi2B,IACxDl6B,KAAKg9B,aAEb,CACJ,CACAl1B,oBACI,GAAI9H,KAAK48B,oBACL,OAEJ,MAAM/lB,EAAY7W,KAAKsrB,WACvBtrB,KAAK44B,aAAe54B,KAAK4b,QAAQ8hB,UAAU7mB,GAAW,GACtD7W,KAAKohB,eAAiBphB,KAAK4b,QAAQ+hB,YAAY9mB,GAAW,SACpD7W,KAAK28B,oBAAoBxa,OAC/B,IAAK,MAAM4T,KAAiBlf,EAAU+mB,eAAepsB,SACjDukB,EAAc5T,KAAKtL,EAE3B,CACAsK,KAAK0c,EAAIna,EAAO2S,EAAiBhG,GAC7B,IAAK,IAAI6J,EAAI,EAAGA,EAAI2D,EAAI3D,IACpBl6B,KAAKg9B,YAAYtZ,GAAOxe,SAAUmxB,EAAiBhG,EAE3D,CACAvoB,eACI9H,KAAKyW,cACCzW,KAAKmiB,OACXniB,KAAK4Y,KAAK,CAAE3U,MAAO,EAAGmD,OAAQ,GAClC,CACA8X,OAAO7S,EAAUgkB,EAAOsF,GACpB31B,KAAK89B,SAAS99B,KAAKk8B,OAAOr0B,QAAQwE,QAAW7L,EAAW6vB,EAAOsF,EACnE,CACAmI,SAASx1B,EAAOy1B,ErF1NwQ,EqF0NtO1N,EAAOsF,GACrD,GAAIrtB,ErF3NoiC,GqF2NhhCA,EAAQtI,KAAKuN,MACjC,OAEJ,IAAIywB,EAAU,EACd,IAAK,IAAI9D,EAAI5xB,EAAO01B,EAAUD,GAAY7D,EAAIl6B,KAAKuN,MAAO2sB,IAClDl6B,KAAKq8B,gBAAgBnC,EAAG7J,EAAOsF,KAC/BuE,IACA8D,IAGZ,CACArC,eAAeoC,EAAU1N,GACrBrwB,KAAK89B,SrFvOmiC,EqFuOhhCC,EAAU1N,EACtC,CACA1N,aACI,MAAMxX,EAAUnL,KAAKsrB,WAAWtP,cAAekU,EAAS/kB,EAAQgS,UAAU+S,OAC1E,IAAK,MAAMG,KAASH,EAChBlwB,KAAK+6B,cAAc7K,EAAOG,GrF5O2hC,EqF4OtgCA,GAEnDrwB,KAAK+6B,cAAc5vB,EAAQgS,UAAWhS,EAAQkmB,gBAAgBlxB,OAClE,CACA83B,cAAcloB,GACV/P,KAAK08B,YAAc3sB,EACnB/P,KAAKy8B,WAAaz8B,KAAKy8B,YAAcz8B,KAAK08B,YAAc3sB,CAC5D,CACAyS,gBAAgBpb,GACZpH,KAAKi+B,cAAgB72B,CACzB,CACAi2B,OAAOxuB,GACH,MAAMgI,EAAY7W,KAAKsrB,WAAY4S,EAAoB,IAAIlkB,IAC3Dha,KAAK68B,SAAW,IAAI9C,GAASY,GAAe9jB,EAAU+C,OAAOzU,MrFzP4L,GqF0PzP,IAAK,MAAM4wB,KAAiBlf,EAAU+mB,eAAepsB,SACjDukB,EAAcsH,SAElB,IAAK,MAAMjiB,KAAUvE,EAAUqK,QAAQ1P,SACnC4J,EAAOiiB,SAASxuB,GAEpB,MAAMsvB,EAAen+B,KAAKi+B,cAC1B,IAAK,MAAM5xB,KAAYrM,KAAKk8B,OAAQ,CAC5BiC,IAAiB9xB,EAASwqB,qBAC1BxqB,EAASnH,SAAS9E,GAAK+9B,EAAa/4B,MACpCiH,EAASnH,SAASpF,GAAKq+B,EAAa94B,OACpCgH,EAAS8oB,gBAAgB/0B,GAAK+9B,EAAa/4B,MAC3CiH,EAAS8oB,gBAAgBr1B,GAAKq+B,EAAa94B,QAE/CgH,EAASwqB,oBAAqB,EAC9B72B,KAAK28B,oBAAoB5J,MAAM1mB,GAC/B,IAAK,MAAM+O,KAAUpb,KAAKsrB,WAAWpK,QAAQ1P,SAAU,CACnD,GAAInF,EAASyC,UACT,MAEJsM,EAAOgjB,iBAAiB/xB,EAAUwC,EACtC,CACA,IAAK,MAAM8pB,KAAS34B,KAAK44B,OACjBD,EAAMjG,UAAUrmB,IAChBssB,EAAMvb,KAAK/Q,EAAUwC,GAGzBxC,EAASyC,UACTovB,EAAkBj9B,IAAIoL,GAG1BrM,KAAK68B,SAAStC,OAAO,IAAItB,GAAM5sB,EAAStB,cAAesB,GAC3D,CACA,GAAI6xB,EAAkB/4B,KAAM,CACxB,MAAMk5B,EAAevzB,IAAOozB,EAAkBxuB,IAAI5E,GAClD9K,KAAKk8B,OAASl8B,KAAK07B,OAAO2C,GAC1Br+B,KAAKm8B,QAAUn8B,KAAKm8B,QAAQT,OAAO2C,GACnC,IAAK,MAAMhyB,KAAY6xB,EACnBl+B,KAAK4b,QAAQsa,cAAcxlB,GAAU8rB,gBAAiB,CAClD3lB,UAAW7W,KAAKsrB,WAChB7uB,KAAM,CACF4P,cAIZrM,KAAK66B,cAAcqD,EACvB,CACAl+B,KAAK28B,oBAAoBlK,iBAAiB5jB,GAC1C,IAAK,MAAMxC,KAAYrM,KAAKk8B,OAAQ,CAChC,IAAK,MAAMzhB,KAAWza,KAAKohB,SACvB3G,EAAQ4iB,OAAOhxB,EAAUwC,GAExBxC,EAASyC,WAAczC,EAAS+S,UACjCpf,KAAK28B,oBAAoB7J,kBAAkBzmB,EAAUwC,EAE7D,CAEA,UADO7O,KAAKi+B,cACRj+B,KAAKy8B,WAAY,CACjB,MAAM6B,EAASt+B,KAAKm8B,QACpBmC,EAAO5M,MAAK,CAACja,EAAG/E,IAAMA,EAAExN,SAASnF,EAAI0X,EAAEvS,SAASnF,GAAK0X,EAAE2e,GAAK1jB,EAAE0jB,KAC9Dp2B,KAAK08B,YAAc4B,EAAOA,EAAOn+B,OrFtTsiC,GqFsT/gC+E,SAASnF,EACjEC,KAAKy8B,YAAa,CACtB,CACJ,EC/TG,MAAM8B,GACT3+B,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAK6Y,WtFGiS,EsFFtS7Y,KAAKsV,atFE0T,CsFDnU,CACA6M,OACI,MAAMtL,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cACtDhc,KAAK6Y,YAAc1N,EAAQ+lB,cAAgB7pB,KtFF2P,EsFElOC,OAAOk3B,iBAC3Ex+B,KAAKsV,atFH0T,EsFI/T,MAAMmpB,EAAQz+B,KAAK6Y,WAAYe,EAAS/C,EAAU+C,OAClD,GAAIA,EAAOnP,QAAS,CAChB,MAAMA,EAAUmP,EAAOnP,QACvBmP,EAAOzU,KAAKC,MAAQqF,EAAQuX,YAAcyc,EAC1C7kB,EAAOzU,KAAKE,OAASoF,EAAQsX,aAAe0c,CAChD,CACA,MAAMthB,EAAYhS,EAAQgS,UAAWgX,EAAchX,EAAUC,KAC7Dpd,KAAKmtB,SAAWnpB,EAAcmwB,EAAYxF,QAAQxB,UAAYsR,EAC9Dz+B,KAAK0+B,mBAAqB16B,EAAcmZ,EAAUhY,KAAK+H,UAAUyI,OAAS8oB,CAC9E,CACA3G,aAAazrB,GACT,MAAMlB,EAAUkB,EAASlB,QAASszB,EAAQz+B,KAAK6Y,WAAYsb,EAAchpB,EAAQiS,KAAMuhB,EAAexK,EAAY3vB,SAAU9G,EAAQ2O,EAASyM,OAC7Ipb,EAAMkhC,UAAY56B,EAAcmwB,EAAYzF,OAAS+P,EACrD/gC,EAAMmhC,UAAY76B,EAAcmwB,EAAYxe,OAAS8oB,EACrD/gC,EAAMghC,mBAAqB16B,EAAcmH,EAAQhG,KAAK+H,UAAUyI,OAAS8oB,EACzE,MAAM9H,EAAcj5B,EAAMi5B,YAC1BA,EAAYtrB,gBAAyC7K,IAA5Bm+B,EAAatzB,WAA2BszB,EAAatzB,WAAaozB,OAAQj+B,EACnGm2B,EAAYrrB,cAAqC9K,IAA1Bm+B,EAAarzB,SAAyBqzB,EAAarzB,SAAWmzB,OAAQj+B,EAC7F9C,EAAMyvB,SAAWnpB,EAAcmwB,EAAYxF,QAAQxB,UAAYsR,CACnE,ECtBJ,SAASK,GAAWjoB,GAChB,OAAOA,IAAcA,EAAU/H,SACnC,CAOA,SAASiwB,GAAqB1tB,EAAQwF,KAAc6Z,GAChD,MAAMvlB,EAAU,IAAIylB,GAAQvf,EAAQwF,GAEpC,OADA2Z,GAAYrlB,KAAYulB,GACjBvlB,CACX,CACO,MAAM6zB,GACTp/B,YAAYyR,EAAQ+kB,EAAIzF,GACpB3wB,KAAKi/B,qBAAuBlX,IACxB,GAAK+W,GAAW9+B,OAAUA,KAAKgc,cAAcsV,uBAG7C,IAAK,MAAM4N,KAASnX,EACZmX,EAAMlX,SAAWhoB,KAAKyjB,cAAchZ,UAGpCy0B,EAAMC,eACDn/B,KAAKslB,OAGVtlB,KAAKolB,QAEb,EAEJplB,KAAKo/B,WAAcC,IACf,IACI,IAAKr/B,KAAKs/B,cACkB9+B,IAAxBR,KAAKu/B,gBACLF,EAAYr/B,KAAKu/B,eAAiBphC,EAAwB6B,KAAKoxB,SAE/D,YADApxB,KAAK4Y,MAAK,GAGd5Y,KAAKu/B,iBAAmBF,EACxB,MAAMxwB,EAtCtB,SAAmB5K,EAAOmtB,EvFJmF,GuFI5DtG,GAAS,GACtD,MAAO,CACH7mB,QACAmD,OAAQ0jB,EvFP6F,GuFOvEsG,EvFPuE,GuFO9CntB,EAAS9F,EAExE,CAiC8BqhC,CAAUH,EAAYr/B,KAAKu/B,eAAgBv/B,KAAKoxB,SAAUpxB,KAAKs/B,SAG7E,GAFAt/B,KAAKy/B,YAAY5wB,EAAM5K,OACvBjE,KAAKu/B,eAAiBF,EAClBxwB,EAAM5K,MAAQ9F,EAEd,YADA6B,KAAK4Y,MAAK,GAId,GADA5Y,KAAKmd,UAAUvE,KAAK/J,IACf7O,KAAK0/B,QAEN,YADA1/B,KAAKiP,UAGLjP,KAAKqlB,iBACLrlB,KAAK4Y,MAAK,EAKlB,CAFA,MAAO4H,GACH7Z,KAAYN,MAAM,GAAGpI,sBAAiCuiB,EAC1D,GAEJxgB,KAAK4b,QAAUvK,EACfrR,KAAKo2B,GAAKuJ,OAAOvJ,GACjBp2B,KAAKoxB,SAAW,IAChBpxB,KAAKs/B,SAAU,EACft/B,KAAK4/B,OAAS,EACd5/B,KAAK6/B,UAAY,EACjB7/B,KAAK8/B,UAAY,EACjB9/B,KAAK+/B,aAAc,EACnB//B,KAAKuiB,SAAU,EACfviB,KAAK8O,WAAY,EACjB9O,KAAKggC,SAAU,EACfhgC,KAAKu/B,eAAiB,EACtBv/B,KAAKwxB,QAAU,IACfxxB,KAAKmlB,YAAa,EAClBnlB,KAAKigC,eAAiB,IAAI3wB,IAC1BtP,KAAKkgC,eAAiBvP,EACtB3wB,KAAKmgC,sBAAwBxP,EAC7B3wB,KAAK8Y,OAAS,IAAIylB,GAAOv+B,MACzBA,KAAK4Z,OAAS,IAAIW,GAAOva,KAAMA,KAAK4b,SACpC5b,KAAKmd,UAAY,IAAIyd,GAAU56B,KAAK4b,QAAS5b,MAC7CA,KAAK49B,eAAiB,IAAItuB,IAC1BtP,KAAKyjB,cAAgB,CACjBC,MAAO,CACHwE,UAAU,EACVpf,QAAQ,IAGhB9I,KAAKkhB,QAAU,IAAI5R,IACnBtP,KAAKqZ,cAAgB,IAAI/J,IACzBtP,KAAK2Y,aAAe,IAAIrJ,IACxBtP,KAAKogC,SAAWrB,GAAqB/+B,KAAK4b,QAAS5b,MACnDA,KAAKgc,cAAgB+iB,GAAqB/+B,KAAK4b,QAAS5b,MACxDA,KAAKqgC,gBAAkB,IAAIhd,GAAerjB,MAC1CA,KAAKsgC,sB5E9BN,SAAkCn2B,GACrC,IAAI9C,MAA2C,oBAAzBk5B,qBAGtB,OAAO,IAAIA,qBAAqBp2B,EACpC,C4EyBqCq2B,EAAyBzY,GAAW/nB,KAAKi/B,qBAAqBlX,KAC3F/nB,KAAK4b,QAAQsa,cAAcxlB,GAAU+vB,eAAgB,CAAE5pB,UAAW7W,MACtE,CACIqlB,sBACA,OAAQrlB,KAAKggC,UAAYhgC,KAAKmlB,YAAc2Z,GAAW9+B,KAC3D,CACImL,cACA,OAAOnL,KAAKogC,QAChB,CACIzP,oBACA,OAAO3wB,KAAKkgC,cAChB,CACAQ,gBAAgBv2B,GACZ,IAAK20B,GAAW9+B,MACZ,OAEJ,MAAM2gC,EAAK3gC,KAAKyjB,cAAchZ,QAC9B,IAAKk2B,EACD,OAEJ,MAAMC,EAAsB,CAACpgB,EAAGrJ,EAAKxO,KACjC,IAAKm2B,GAAW9+B,MACZ,OAEJ,MAAM+M,EAAU/M,KAAK8Y,OAAOD,WAAYgoB,EAAY,CAChDzgC,EAAG+W,EAAI/W,EAAI2M,EACXjN,EAAGqX,EAAIrX,EAAIiN,GACZoQ,EAAYnd,KAAKmd,UAAU0f,SAASpC,YAAYoG,EAAWl4B,EAASoE,GACvE5C,EAASqW,EAAGrD,EAAU,EAiD1B,IAAI2jB,GAAU,EAAOC,GAAa,EAClC/gC,KAAKigC,eAAepwB,IAAI,SAjDL2Q,IACf,IAAKse,GAAW9+B,MACZ,OAEJ,MAAMyoB,EAAajI,EAAGrJ,EAAM,CACxB/W,EAAGqoB,EAAWS,SAAWT,EAAWG,QACpC9oB,EAAG2oB,EAAWU,SAAWV,EAAWI,SAExC+X,EAAoBpgB,EAAGrJ,EvFpIgnB,EuFoI/lB,IA0C5CnX,KAAKigC,eAAepwB,IAAI,cAzCD,KACdivB,GAAW9+B,QAGhB8gC,GAAU,EACVC,GAAa,EAAK,IAqCtB/gC,KAAKigC,eAAepwB,IAAI,aApCF,KACbivB,GAAW9+B,QAGhB+gC,GAAa,EAAI,IAiCrB/gC,KAAKigC,eAAepwB,IAAI,YAhCF2Q,IAClB,GAAKse,GAAW9+B,MAAhB,CAGA,GAAI8gC,IAAYC,EAAY,CACxB,MAAM3X,EAAa5I,EACnB,IAAI6I,EAAYD,EAAWE,QAAQF,EAAWE,QAAQnpB,OvFtJumB,GuFuJ7pB,IAAKkpB,IACDA,EAAYD,EAAWK,eAAeL,EAAWK,eAAetpB,OvFxJylB,IuFyJppBkpB,GACD,OAGR,MAAM5e,EAAUzK,KAAK4Z,OAAOnP,QAASwe,EAAaxe,EAAUA,EAAQke,6BAA0BnoB,EAAW2W,EAAM,CAC3G/W,EAAGipB,EAAUT,SAAWK,EAAaA,EAAWhgB,KvF9J4nB,GuF+J5qBnJ,EAAGupB,EAAUR,SAAWI,EAAaA,EAAWjgB,IvF/J4nB,IuFiKhrB43B,EAAoBpgB,EAAGrJ,EAAK1Y,KAAK4E,IAAIgmB,EAAU2X,QAAS3X,EAAU4X,SACtE,CACAH,GAAU,EACVC,GAAa,CAjBb,CAiBkB,IAatB/gC,KAAKigC,eAAepwB,IAAI,eAZA,KACfivB,GAAW9+B,QAGhB8gC,GAAU,EACVC,GAAa,EAAK,IAQtB,IAAK,MAAOt3B,EAAKsZ,KAAY/iB,KAAKigC,eAC9BU,EAAGlkB,iBAAiBhT,EAAKsZ,EAEjC,CACA0c,YAAYx7B,GACRjE,KAAK8/B,WAAa77B,CACtB,CACA4zB,QAAQpuB,EAAKukB,EAAW2H,GAAW,GAC/B,SAAKmJ,GAAW9+B,QAAW21B,GAAY31B,KAAK49B,eAAeluB,IAAIjG,MAG/DzJ,KAAK49B,eAAe/tB,IAAIpG,EAAKukB,IACtB,EACX,CACA0R,QACI,OAAQ1/B,KAAK6/B,WAAa7/B,KAAK8/B,WAAa9/B,KAAK6/B,SACrD,CACAqB,qBACI,GAAKpC,GAAW9+B,MAAhB,CAGA,IAAK,MAAOyJ,EAAKsZ,KAAY/iB,KAAKigC,eAC9BjgC,KAAKyjB,cAAchZ,SAAS2Y,oBAAoB3Z,EAAKsZ,GAEzD/iB,KAAKigC,eAAexpB,OAJpB,CAKJ,CACAxH,QAAQiQ,GAAS,GACb,GAAK4f,GAAW9+B,MAAhB,CAGAA,KAAKif,OACLjf,KAAKkhC,qBACLlhC,KAAKmd,UAAUlO,UACfjP,KAAK4Z,OAAO3K,UACZ,IAAK,MAAMkpB,KAAgBn4B,KAAKqZ,cAAc7H,SAC1C2mB,EAAalpB,UAAUjP,MAE3B,IAAK,MAAMs4B,KAAet4B,KAAK2Y,aAAanH,SACxC8mB,EAAYrpB,UAAUjP,MAE1B,IAAK,MAAMyJ,KAAOzJ,KAAKqZ,cAAcU,OACjC/Z,KAAKqZ,cAAcuQ,OAAOngB,GAE9B,IAAK,MAAMA,KAAOzJ,KAAK2Y,aAAaoB,OAChC/Z,KAAK2Y,aAAaiR,OAAOngB,GAI7B,GAFAzJ,KAAK4b,QAAQulB,aAAanhC,MAC1BA,KAAK8O,WAAY,EACboQ,EAAQ,CACR,MAAMkiB,EAAUphC,KAAK4b,QAAQylB,MAAOx+B,EAAMu+B,EAAQE,WAAUt3B,GAAKA,IAAMhK,OACnE6C,GvFpO2tB,GuFqO3tBu+B,EAAQ7E,OAAO15B,EvFrOwrB,EuFuO/sB,CACA7C,KAAK4b,QAAQsa,cAAcxlB,GAAU6wB,mBAAoB,CAAE1qB,UAAW7W,MAzBtE,CA0BJ,CACA4Y,KAAKiS,GACD,IAAKiU,GAAW9+B,MACZ,OAEJ,IAAIwhC,EAAc3W,EAClB,MAAM4W,EAASpC,IACPmC,IACAxhC,KAAKu/B,oBAAiB/+B,EACtBghC,GAAc,GAElBxhC,KAAKo/B,WAAWC,EAAU,EnFzO/B,IAAiBjwB,EmF2OhBpP,KAAK0hC,qBnF3OWtyB,EmF2OmBiwB,GAAaoC,EAAMpC,GnF1OnD78B,EAAeC,UAAU2M,GmF2OhC,CACAtH,aAAawY,EAAMnV,EAAU,CAAC,GAC1B,IAAK,MAAMiQ,KAAUpb,KAAKkhB,QAAQ1P,SAAU,CACxC,IAAK4J,EAAOumB,OACR,SAEJ,MAAM96B,QAAYuU,EAAOumB,OAAOrhB,EAAMnV,GACtC,GAAKtE,EAAI+6B,UAGT,OAAO/6B,EAAIg7B,IACf,CACAl7B,KAAYN,MAAM,GAAGpI,+BAAyCqiB,cAClE,CACA4D,gBAAgBra,GACZ,GAAKi1B,GAAW9+B,MAAhB,CAGAA,KAAKmd,UAAU+G,gBAAgBra,GAC/B,IAAK,MAAMuR,KAAUpb,KAAKkhB,QAAQ1P,SAC9B4J,EAAO8I,kBAAkBra,EAH7B,CAKJ,CACA/B,aACI,IAAKg3B,GAAW9+B,MACZ,OAEJ,MAAM8hC,EAAU9hC,KAAK4b,QAAQmmB,sBAC7B,IAAK,MAAMzhB,KAAQwhB,EAAS,CACxB,MAAMppB,EAAS1Y,KAAK4b,QAAQwc,gBAAgB9X,GACxC5H,GACA1Y,KAAKqZ,cAAcxJ,IAAIyQ,EAAM5H,EAErC,CACA,MAAMspB,EAAShiC,KAAK4b,QAAQqmB,qBAC5B,IAAK,MAAM3hB,KAAQ0hB,EAAQ,CACvB,MAAMtpB,EAAS1Y,KAAK4b,QAAQ2c,eAAejY,GACvC5H,GACA1Y,KAAK2Y,aAAa9I,IAAIyQ,EAAM5H,EAEpC,OACM1Y,KAAKmd,UAAUuD,cACrB1gB,KAAKogC,SAAWrB,GAAqB/+B,KAAK4b,QAAS5b,KAAMA,KAAKmgC,sBAAuBngC,KAAK2wB,eAC1F3wB,KAAKgc,cAAgB+iB,GAAqB/+B,KAAK4b,QAAS5b,KAAMA,KAAKogC,UACnE,MAAM8B,QAAyBliC,KAAK4b,QAAQumB,oBAAoBniC,MAChE,IAAK,MAAOo2B,EAAIhb,KAAW8mB,EACvBliC,KAAKkhB,QAAQrR,IAAIumB,EAAIhb,GAEzBpb,KAAK8Y,OAAOqJ,aACNniB,KAAK4Z,OAAOuI,OAClBniB,KAAK0iB,sBACL1iB,KAAK4Z,OAAOwE,iBACZpe,KAAK4Z,OAAO0B,SACZ,MAAM,QAAEkW,EAAO,SAAEL,EAAQ,MAAE/jB,EAAK,SAAEgkB,EAAQ,OAAEtG,GAAW9qB,KAAKgc,cAC5Dhc,KAAKwxB,QAAUA,EACfxxB,KAAK6/B,UAAY77B,EAAcmtB,GAAYhzB,EAC3C6B,KAAK4/B,OAAS57B,EAAcoJ,GAASjP,EACrC6B,KAAK8/B,UAAY,EACjB9/B,KAAKoxB,SAAWA,EvFjT2vB,EuFiTluBA,EvFjT+sB,IuFkTxvBpxB,KAAKs/B,QAAUxU,EACf,IAAK,MAAMpS,KAAU1Y,KAAKqZ,cAAc7H,eAC9BkH,EAAOyJ,OAAOniB,OAExB,IAAK,MAAM0Y,KAAU1Y,KAAK2Y,aAAanH,eAC7BkH,EAAOyJ,OAAOniB,OAExB,IAAK,MAAMob,KAAUpb,KAAKkhB,QAAQ1P,eACxB4J,EAAO+G,UAEjBniB,KAAK4b,QAAQsa,cAAcxlB,GAAU0xB,cAAe,CAAEvrB,UAAW7W,aAC3DA,KAAKmd,UAAUgF,OACrBniB,KAAKmd,UAAUwF,aACf,IAAK,MAAMvH,KAAUpb,KAAKkhB,QAAQ1P,SAC9B4J,EAAOinB,mBAEXriC,KAAK4b,QAAQsa,cAAcxlB,GAAU2xB,eAAgB,CAAExrB,UAAW7W,MACtE,CACA8H,gBAAgB+c,GACPia,GAAW9+B,QAGhBA,KAAKsiC,cAAgBzd,QACf7kB,KAAK4iB,UACf,CACAwC,QnF7TG,IAAyBmd,EmF8TxB,GAAKzD,GAAW9+B,aAGiBQ,IAA7BR,KAAK0hC,sBnFjUea,EmFkUJviC,KAAK0hC,oBnFjU7Bl/B,EAAeI,OAAO2/B,UmFkUPviC,KAAK0hC,sBAEZ1hC,KAAKggC,SAAT,CAGA,IAAK,MAAM5kB,KAAUpb,KAAKkhB,QAAQ1P,SAC9B4J,EAAOgK,UAENplB,KAAKmlB,aACNnlB,KAAKggC,SAAU,GAEnBhgC,KAAK4b,QAAQsa,cAAcxlB,GAAU8xB,gBAAiB,CAAE3rB,UAAW7W,MAPnE,CAQJ,CACAslB,KAAKuF,GACD,IAAKiU,GAAW9+B,MACZ,OAEJ,MAAMyiC,EAAcziC,KAAKggC,SAAWnV,EACpC,IAAI7qB,KAAK+/B,aAAgB//B,KAAKgc,cAAciV,SAA5C,CAOA,GAHIjxB,KAAKggC,UACLhgC,KAAKggC,SAAU,GAEfyC,EACA,IAAK,MAAMrnB,KAAUpb,KAAKkhB,QAAQ1P,SAC1B4J,EAAOkK,MACPlK,EAAOkK,OAInBtlB,KAAK4b,QAAQsa,cAAcxlB,GAAUgyB,cAAe,CAAE7rB,UAAW7W,OACjEA,KAAK4Y,KAAK6pB,IAAe,EAZzB,MAFIziC,KAAK+/B,aAAc,CAe3B,CACAj4B,gBACI,GAAKg3B,GAAW9+B,MAIhB,OADAA,KAAKif,OACEjf,KAAK2iC,OAChB,CACA76B,YAAY6oB,GACR,GAAKmO,GAAW9+B,MAOhB,OAJAA,KAAKmgC,sBAAwBxP,EAC7B3wB,KAAKkgC,eAAiBvP,EACtB3wB,KAAKogC,SAAWrB,GAAqB/+B,KAAK4b,QAAS5b,KAAMA,KAAKmgC,sBAAuBngC,KAAK2wB,eAC1F3wB,KAAKgc,cAAgB+iB,GAAqB/+B,KAAK4b,QAAS5b,KAAMA,KAAKogC,UAC5DpgC,KAAK4iB,SAChB,CACA9a,cACSg3B,GAAW9+B,QAASA,KAAKuiB,gBAGxBviB,KAAKmiB,OACXniB,KAAKuiB,SAAU,QACT,IAAInG,SAAQC,IACd,MAAMsmB,EAAQ76B,UACV9H,KAAKqgC,gBAAgBnW,eACjBlqB,KAAKyjB,cAAchZ,mBAAmBm4B,aAAe5iC,KAAKsgC,uBAC1DtgC,KAAKsgC,sBAAsBhiB,QAAQte,KAAKyjB,cAAchZ,SAE1D,IAAK,MAAM2Q,KAAUpb,KAAKkhB,QAAQ1P,eACxB4J,EAAOunB,WAEjB3iC,KAAK4b,QAAQsa,cAAcxlB,GAAUmyB,iBAAkB,CAAEhsB,UAAW7W,OACpEA,KAAKslB,OACLjJ,GAAS,EAEbrc,KAAK8iC,cAAgB3e,YAAW,KAAWwe,GAAO,GAAE3iC,KAAK4/B,OAAO,IAExE,CACA3gB,OACI,GAAK6f,GAAW9+B,OAAUA,KAAKuiB,QAA/B,CAGIviB,KAAK8iC,gBACLrd,aAAazlB,KAAK8iC,sBACX9iC,KAAK8iC,eAEhB9iC,KAAK+/B,aAAc,EACnB//B,KAAKuiB,SAAU,EACfviB,KAAKqgC,gBAAgBlW,kBACrBnqB,KAAKolB,QACLplB,KAAKmd,UAAU1G,QACfzW,KAAK4Z,OAAOqF,OACRjf,KAAKyjB,cAAchZ,mBAAmBm4B,aAAe5iC,KAAKsgC,uBAC1DtgC,KAAKsgC,sBAAsBxY,UAAU9nB,KAAKyjB,cAAchZ,SAE5D,IAAK,MAAM2Q,KAAUpb,KAAKkhB,QAAQ1P,SAC9B4J,EAAO6D,SAEX,IAAK,MAAMxV,KAAOzJ,KAAKkhB,QAAQnH,OAC3B/Z,KAAKkhB,QAAQ0I,OAAOngB,GAExBzJ,KAAKkgC,eAAiBlgC,KAAKogC,SAC3BpgC,KAAK4b,QAAQsa,cAAcxlB,GAAUqyB,iBAAkB,CAAElsB,UAAW7W,MArBpE,CAsBJ,CACA0iB,sBACI1iB,KAAKgc,cAAcuV,WAAa,GAChC,MAAMyR,EAAchjC,KAAKgc,cAAc6V,cAAc7xB,KAAK4Z,OAAOzU,KAAKC,MAAOpF,KAAK8Y,OAAOD,WAAY7Y,KAAKogC,UAE1G,OADApgC,KAAKgc,cAAciW,SAASjyB,KAAKsiC,eAC7BtiC,KAAKijC,sBAAwBD,IAGjChjC,KAAKijC,oBAAsBD,GACpB,EACX,ECtcG,MAAME,GACTtjC,cACII,KAAKmjC,WAAa,IAAI7zB,GAC1B,CACAmN,iBAAiB6D,EAAM8iB,GACnBpjC,KAAKojB,oBAAoB9C,EAAM8iB,GAC/B,IAAIC,EAAMrjC,KAAKmjC,WAAWxzB,IAAI2Q,GACzB+iB,IACDA,EAAM,GACNrjC,KAAKmjC,WAAWtzB,IAAIyQ,EAAM+iB,IAE9BA,EAAIliB,KAAKiiB,EACb,CACAlN,cAAc5V,EAAM/Q,GACEvP,KAAKmjC,WAAWxzB,IAAI2Q,IAC3Byc,SAAQha,GAAWA,EAAQxT,IAC1C,CACA+zB,iBAAiBhjB,GACb,QAAStgB,KAAKmjC,WAAWxzB,IAAI2Q,EACjC,CACAijB,wBAAwBjjB,GACfA,EAIDtgB,KAAKmjC,WAAWvZ,OAAOtJ,GAHvBtgB,KAAKmjC,WAAa,IAAI7zB,GAK9B,CACA8T,oBAAoB9C,EAAM8iB,GACtB,MAAMC,EAAMrjC,KAAKmjC,WAAWxzB,IAAI2Q,GAChC,IAAK+iB,EACD,OAEJ,MAAMljC,EAASkjC,EAAIljC,OAAQ0C,EAAMwgC,EAAIx7B,QAAQu7B,GACzCvgC,ExF1BoiC,IAA8E,IwF6BlnC1C,EACAH,KAAKmjC,WAAWvZ,OAAOtJ,GAGvB+iB,EAAI9G,OAAO15B,ExFjCumC,GwFmC1nC,ECtCJiF,eAAe07B,GAAwB3sB,EAAWlN,EAAK85B,EAAc5Y,GAAQ,GACzE,IAAIhkB,EAAM8C,EAAIgG,IAAIkH,GAKlB,OAJKhQ,IAAOgkB,IACRhkB,QAAYuV,QAAQsnB,IAAI,IAAID,EAAajyB,UAAU7H,KAAIK,GAAKA,EAAE6M,MAC9DlN,EAAIkG,IAAIgH,EAAWhQ,IAEhBA,CACX,CAoDO,MAAM88B,GACT/jC,cACII,KAAK4jC,SAAW,IAAIt0B,IACpBtP,KAAK6jC,UAAY,GACjB7jC,KAAK8jC,iBAAmB,IAAIZ,GAC5BljC,KAAK+jC,cAAe,EACpB/jC,KAAKkhB,QAAU,GACflhB,KAAKuR,cAAgB,IAAIjC,IACzBtP,KAAKgkC,gBAAkB,IAAI10B,IAC3BtP,KAAKikC,cAAgB,CACjB1Y,YAAa,IAAIjc,IACjBspB,OAAQ,IAAItpB,IACZ8R,SAAU,IAAI9R,KAElBtP,KAAKurB,YAAc,IAAIjc,IACvBtP,KAAK44B,OAAS,IAAItpB,IAClBtP,KAAKohB,SAAW,IAAI9R,IACpBtP,KAAKkkC,QAAU,IAAI50B,IACnBtP,KAAKqZ,cAAgB,IAAI/J,IACzBtP,KAAK2Y,aAAe,IAAIrJ,IACxBtP,KAAK49B,eAAiB,IAAItuB,GAC9B,CACI60B,cACA,MAAMt9B,EAAM,CAAC,EACb,IAAK,MAAOge,EAAMuf,KAAWpkC,KAAK4jC,SAC9B/8B,EAAIge,GAAQuf,EAEhB,OAAOv9B,CACX,CACIw6B,YACA,OAAOrhC,KAAK6jC,SAChB,CACIQ,cACA,MAAO,OACX,CACAv8B,sBAAsBwJ,EAASsR,GAAU,GACrC5iB,KAAKuR,cAAc1B,IAAIyB,EAAQ7H,IAAK6H,SAC9BtR,KAAK4iB,QAAQA,EACvB,CACA0hB,UAAUF,GACN,MAAM36B,EAAM26B,EAAO36B,KAAO26B,EAAOvf,MAAQ,UACzC7kB,KAAK4jC,SAAS/zB,IAAIpG,EAAK26B,GACvBpkC,KAAK8jC,iBAAiB5N,cAAcxlB,GAAU6zB,YAAa,CAAE9nC,KAAM,CAAEooB,KAAMpb,EAAK26B,WACpF,CACAt8B,gBAAgB+c,EAAM2f,EAAQ5hB,GAAU,GAChC5iB,KAAKykC,UAAU5f,KAGnB7kB,KAAKgkC,gBAAgBn0B,IAAIgV,EAAM2f,SACzBxkC,KAAK4iB,QAAQA,GACvB,CACA9a,gBAAgBsR,EAAQV,EAAQkK,GAAU,GACtCxY,GAA0BgP,GAAQkH,IACzBtgB,KAAKo4B,gBAAgB9X,IACtBtgB,KAAKqZ,cAAcxJ,IAAIyQ,EAAM5H,EACjC,UAEE1Y,KAAK4iB,QAAQA,EACvB,CACAnG,iBAAiB6D,EAAM8iB,GACnBpjC,KAAK8jC,iBAAiBrnB,iBAAiB6D,EAAM8iB,EACjD,CACAt7B,oBAAoB+c,EAAM6f,EAAuB9hB,GAAU,GACvD5iB,KAAKikC,cAAc1Y,YAAY1b,IAAIgV,EAAM6f,SACnC1kC,KAAK4iB,QAAQA,EACvB,CACA9a,eAAe+c,EAAM8f,EAAkB/hB,GAAU,GAC7C5iB,KAAKikC,cAAcrL,OAAO/oB,IAAIgV,EAAM8f,SAC9B3kC,KAAK4iB,QAAQA,EACvB,CACA9a,yBAAyB+c,EAAM+f,EAAoBhiB,GAAU,GACzD5iB,KAAKikC,cAAc7iB,SAASvR,IAAIgV,EAAM+f,SAChC5kC,KAAK4iB,QAAQA,EACvB,CACA9a,uBAAuB+c,EAAMmJ,EAAWpL,GAAU,GACzC5iB,KAAK43B,iBAAiB/S,IACvB7kB,KAAK49B,eAAe/tB,IAAIgV,EAAMmJ,SAE5BhuB,KAAK4iB,QAAQA,EACvB,CACA9a,gBAAgBsT,EAAQwH,GAAU,GACzB5iB,KAAK6kC,UAAUzpB,EAAOgb,KACvBp2B,KAAKkhB,QAAQC,KAAK/F,SAEhBpb,KAAK4iB,QAAQA,EACvB,CACA9a,gBAAgBipB,EAAQ5lB,EAASwqB,GAAW,EAAO/S,GAAU,IACrD+S,GAAa31B,KAAKgxB,UAAUD,IAC5B/wB,KAAKkkC,QAAQr0B,IAAIkhB,EAAQ5lB,SAEvBnL,KAAK4iB,QAAQA,EACvB,CACA9a,eAAe4Q,EAAQkK,GAAU,GAC7B,IAAK,MAAMkiB,KAAapsB,EAAOqsB,WACvB/kC,KAAKu4B,eAAeuM,IAGxB9kC,KAAK2Y,aAAa9I,IAAIi1B,EAAWpsB,SAE/B1Y,KAAK4iB,QAAQA,EACvB,CACAoiB,aAAaC,GACT,GAAIjlC,KAAKqkC,UAAYY,EAGrB,MAAM,IAAIxkC,MAAM,yFAAyFT,KAAKqkC,4BAA4BY,IAC9I,CACA9D,aAAatqB,GACT7W,KAAKohB,SAASwI,OAAO/S,GACrB7W,KAAK44B,OAAOhP,OAAO/S,GACnB7W,KAAKurB,YAAY3B,OAAO/S,EAC5B,CACAqf,cAAc5V,EAAM/Q,GAChBvP,KAAK8jC,iBAAiB5N,cAAc5V,EAAM/Q,EAC9C,CACA21B,MACI,OAAOllC,KAAKqhC,KAChB,CACA8D,QAAQ78B,GACJ,OAAOtI,KAAK2M,KAAKrE,EACrB,CACAR,0BAA0B+O,GACtB,MAAMhQ,EAAM,IAAIyI,IAChB,IAAK,MAAM8L,KAAUpb,KAAKkhB,QAClB9F,EAAOgqB,YAAYvuB,EAAUmF,gBAC7BnV,EAAIgJ,IAAIuL,EAAOgb,SAAUhb,EAAOypB,UAAUhuB,IAGlD,OAAOhQ,CACX,CACA49B,UAAU5f,GACN,OAAO7kB,KAAKgkC,gBAAgBr0B,IAAIkV,IAAS,CAAE5gB,GAAUA,EACzD,CACAm0B,gBAAgB9X,GACZ,OAAOtgB,KAAKqZ,cAAc1J,IAAI2Q,EAClC,CACAxY,qBAAqB+O,EAAWgU,GAAQ,GACpC,OAAO2Y,GAAwB3sB,EAAW7W,KAAKurB,YAAavrB,KAAKikC,cAAc1Y,YAAaV,EAChG,CACA/iB,gBAAgB+O,EAAWgU,GAAQ,GAC/B,OAAO2Y,GAAwB3sB,EAAW7W,KAAK44B,OAAQ54B,KAAKikC,cAAcrL,OAAQ/N,EACtF,CACA+M,iBAAiBtX,GACb,OAAOtgB,KAAK49B,eAAejuB,IAAI2Q,EACnC,CACAukB,UAAUzpB,GACN,OAAOpb,KAAKkhB,QAAQrU,MAAK7C,GAAKA,EAAEosB,KAAOhb,GAC3C,CACA4V,UAAUD,GACN,OAAO/wB,KAAKkkC,QAAQv0B,IAAIohB,EAC5B,CACAwH,eAAejY,GACX,OAAOtgB,KAAK2Y,aAAahJ,IAAI2Q,EACjC,CACAyhB,sBACI,OAAO/hC,KAAKqZ,cAAcU,MAC9B,CACAkoB,qBACI,OAAOjiC,KAAK2Y,aAAaoB,MAC7B,CACAjS,kBAAkB+O,EAAWgU,GAAQ,GACjC,OAAO2Y,GAAwB3sB,EAAW7W,KAAKohB,SAAUphB,KAAKikC,cAAc7iB,SAAUyJ,EAC1F,CACA1I,OACQniB,KAAK+jC,eAGT/jC,KAAK+jC,cAAe,EACxB,CACAp3B,KAAKrE,GACD,MAAM,MAAE+4B,GAAUrhC,KAAM2M,EAAO00B,EAAM/4B,GACrC,GAAKqE,IAAQA,EAAKmC,UAIlB,OAAOnC,EAHH00B,EAAM9E,OAAOj0B,EzFpO8rB,EyFwOntB,CACAR,WAAWu9B,GACP,MAAMjP,EAAKiP,EAAOjP,IAAMiP,EAAO56B,SAAS2rB,IAAM,cAAc33B,KAAKkF,MzF1OsvB,IyF0OhvBZ,QAAmC,MAAEuF,EAAK,IAAEg9B,GAAQD,EAAQl6B,EAAUm6B,QArOrJx9B,eAA8BrL,GAC1B,MAAM6oC,EAAM14B,GAAyBnQ,EAAK6oC,IAAK7oC,EAAK6L,OACpD,IAAKg9B,EACD,OAAO7oC,EAAK8oC,SAEhB,MAAMC,QAAiBC,MAAMH,GAC7B,OAAIE,EAASE,SACKF,EAASG,QAE3Bh/B,KAAYN,MAAM,GAAGpI,KAAeunC,EAAS73B,uCACtClR,EAAK8oC,SAChB,CA0NiKK,CAAe,CAAEL,SAAUF,EAAOl6B,QAASm6B,MAAKh9B,UAAW+8B,EAAOl6B,QACrN06B,EAAiBj5B,GAAyBzB,EAAS7C,IAAQ,MAAE+4B,GAAUrhC,KAAM8lC,EAAWzE,EAAMC,WAAUpgC,GAAKA,EAAEk1B,GAAG74B,cAAgB64B,IAAK2P,EAAU,IAAI/G,GAAUh/B,KAAMo2B,EAAIyP,GAC/K,GAAIC,GzF5Oy0B,EyF4O/yB,CAC1B,MAAME,EAAMhmC,KAAK2M,KAAKm5B,GAAWG,EAAcD,EzF7OmyB,EAAU,EyF8Ox1BA,IAAQA,EAAIl3B,WACZk3B,EAAI/2B,SAAQ,GAEhBoyB,EAAM9E,OAAOuJ,EAAUG,EAAaF,EACxC,MAEI1E,EAAMlgB,KAAK4kB,GAEf,MAAMG,EAzMO,EAAC9P,EAAIp1B,KACtB,IAAIklC,EAAellC,GAAUuG,SAAS4+B,eAAe/P,GACrD,OAAI8P,IAGJA,EAAe3+B,SAAS0I,cAAc,OACtCi2B,EAAa9P,GAAKA,EAClB8P,EAAa5kB,QAAQzjB,GAAsBc,EAC3C4I,SAAS6+B,KAAKC,OAAOH,GACdA,EAAY,EAgMMI,CAAgBlQ,EAAIiP,EAAO56B,SAAUyb,EArOnC,CAACggB,IAC5B,IAAIhgB,EACJ,GAAIggB,aAAwBK,mBAAqBL,EAAaM,QAAQC,gBAAkB5nC,EACpFqnB,EAAWggB,EACNhgB,EAAS5E,QAAQzjB,KAClBqoB,EAAS5E,QAAQzjB,GAAsBe,OAG1C,CACD,MAAM8nC,EAAmBR,EAAaS,qBAAqB9nC,GACvD6nC,EAAiBvmC,QACjB+lB,EAAWwgB,EzF5BkxB,GyF6B7xBxgB,EAAS5E,QAAQzjB,GAAsBe,IAGvCsnB,EAAW3e,SAAS0I,cAAcpR,GAClCqnB,EAAS5E,QAAQzjB,GAAsBc,EACvCunC,EAAaU,YAAY1gB,GAEjC,CACA,MAAM2gB,EAAc,OAOpB,OANK3gB,EAAShW,MAAM9K,QAChB8gB,EAAShW,MAAM9K,MAAQyhC,GAEtB3gB,EAAShW,MAAM7K,SAChB6gB,EAAShW,MAAM7K,OAASwhC,GAErB3gB,CAAQ,EA0M0D4gB,CAAuBZ,GAG5F,OAFAH,EAAQnsB,OAAOyH,WAAW6E,SACpB6f,EAAQpD,QACPoD,CACX,CACAvV,YAAYrlB,EAASwlB,GACjB3wB,KAAKkhB,QAAQ6b,SAAQ3hB,GAAUA,EAAOoV,cAAcrlB,EAASwlB,IACjE,CACAF,qBAAqB5Z,EAAW1L,KAAYwlB,GACxC,MAAMvP,EAAWphB,KAAKohB,SAASzR,IAAIkH,GAC9BuK,GAGLA,EAAS2b,SAAQtiB,GAAWA,EAAQ+V,cAAcrlB,KAAYwlB,IAClE,CACA7oB,cAAc8a,GAAU,GACfA,SAGCxG,QAAQsnB,IAAI1jC,KAAKqhC,MAAM13B,KAAIK,GAAKA,EAAE4Y,YAC5C,CACAQ,oBAAoB9C,EAAM8iB,GACtBpjC,KAAK8jC,iBAAiB1gB,oBAAoB9C,EAAM8iB,EACpD,CACA2D,kBAAkB58B,GACd,MAAM,MAAEk3B,GAAUrhC,KAClB,IAAKqhC,EAAMlhC,OACP,MAAM,IAAIM,MAAM,GAAGxC,kEAEvBojC,EAAMtE,SAAQpwB,GAAQA,EAAK+zB,gBAAgBv2B,IAC/C,EC5RG,MAAM68B,GACTpnC,YAAYiX,GACR7W,KAAKsgB,KAAOrP,GAAe4hB,SAC3B7yB,KAAK6W,UAAYA,CACrB,ECJG,MAAMowB,GACTrnC,YAAYiX,GACR7W,KAAKsgB,KAAOrP,GAAekM,UAC3Bnd,KAAK6W,UAAYA,CACrB,ECLG,IAAIqwB,GCAAC,GCAAC,IFCX,SAAWF,GACPA,EAA2B,UAAI,YAC/BA,EAAkC,iBAAI,oBACtCA,EAAwB,OAAI,QAC/B,CAJD,CAIGA,KAAoBA,GAAkB,CAAC,ICJ1C,SAAWC,GACPA,EAAqB,OAAI,SACzBA,EAAqB,OAAI,SACzBA,EAAqB,OAAI,QAC5B,CAJD,CAIGA,KAAiBA,GAAe,CAAC,ICJpC,SAAWC,GACPA,EAAuB,WAAI,eAC3BA,EAAuB,WAAI,eAC3BA,EAAwB,YAAI,gBAC5BA,EAAyB,aAAI,iBAC7BA,EAAuB,WAAI,eAC3BA,EAAwB,YAAI,gBAC5BA,EAAwB,YAAI,gBAC5BA,EAAuB,WAAI,eAC3BA,EAAuB,WAAI,eAC3BA,EAAwB,YAAI,gBAC5BA,EAAwB,YAAI,gBAC5BA,EAAyB,aAAI,iBAC7BA,EAA0B,cAAI,kBAC9BA,EAAwB,YAAI,gBAC5BA,EAAyB,aAAI,iBAC7BA,EAAyB,aAAI,iBAC7BA,EAAwB,YAAI,gBAC5BA,EAAwB,YAAI,gBAC5BA,EAA0B,cAAI,mBAC9BA,EAA0B,cAAI,mBAC9BA,EAA2B,eAAI,oBAC/BA,EAA4B,gBAAI,qBAChCA,EAA0B,cAAI,mBAC9BA,EAA2B,eAAI,oBAC/BA,EAA2B,eAAI,oBAC/BA,EAA0B,cAAI,mBAC9BA,EAA0B,cAAI,kBACjC,CA5BD,CA4BGA,KAAeA,GAAa,CAAC,IC3BhC,MAAMC,GCDC,WACH,MAAMh2B,EAAS,IAAIsyB,GAEnB,OADAtyB,EAAO8Q,OACA9Q,CACX,CDHoB8Q,GACf9a,OACDC,OAAO+/B,YAAcA,I,eEDzB,MAAMC,GAAKt9B,IACT,MAAMkwB,EAAIlwB,EAAEosB,IAAM,cAClB,OAAO,gBAAE,KACP,IAAI5V,EACJ,OAAO,QAAO,CAAE4V,GAAI8D,EAAGoL,IAAKt7B,EAAEs7B,IAAKn6B,QAASnB,EAAEmB,UAAWo8B,MAAM30B,IAC7D,IAAI6E,EACJ+I,EAAI5N,EAA8B,OAA1B6E,EAAIzN,EAAEw9B,kBAA4B/vB,EAAE2C,KAAKpQ,EAAG4I,EAAE,IACpD,KACG,MAAL4N,GAAaA,EAAEvR,SAAS,CACzB,GACA,CAACirB,EAAGlwB,EAAGA,EAAEs7B,IAAKt7B,EAAEmB,WAA2B,UAAE,MAAO,CAAEirB,GAAI8D,EAAGuN,UAAWz9B,EAAEy9B,WAAY,ECZpF,MAAMC,GACT9nC,cACII,KAAK2I,OAAS,EACd3I,KAAKiL,KAAO,CAChB,CACA9C,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKwO,OACLjL,KAAKiL,KAAOxO,EAAKwO,WAEDzK,IAAhB/D,EAAKkM,SACL3I,KAAK2I,OAASlM,EAAKkM,QAE3B,ECdG,MAAMg/B,WAAqB/a,GAC9BhtB,cACIyC,QACArC,KAAKuvB,QAAU,EACfvvB,KAAKiE,MAAQ,GACbjE,KAAKwvB,MAAQ,IAAIkY,EACrB,CACAv/B,KAAK1L,GACGiD,EAAOjD,KAGX4F,MAAM8F,KAAK1L,QACU+D,IAAjB/D,EAAK8yB,UACLvvB,KAAKuvB,QAAU9yB,EAAK8yB,SAEpBjwB,EAAS7C,EAAK+yB,OACdxvB,KAAKwvB,MAAM7mB,OAASlM,EAAK+yB,MAGzBxvB,KAAKwvB,MAAMrnB,KAAK1L,EAAK+yB,OAE7B,ECrBG,MAAMoY,GACThoC,cACII,KAAK6R,MAAQ,IAAIuY,GACjBpqB,KAAK6R,MAAM5N,MAAQ,UACnBjE,KAAK6nC,WAAY,EACjB7nC,KAAKgU,QAAU,EACfhU,KAAKiP,SAAU,EACfjP,KAAK8nC,QAAS,EACd9nC,KAAKmF,KAAO,IAAIwiC,EACpB,CACAx/B,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAE/BrR,IAAnB/D,EAAKorC,YACL7nC,KAAK6nC,UAAYprC,EAAKorC,WAE1B7nC,KAAK6kB,KAAOpoB,EAAKooB,UACIrkB,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,cAEFxT,IAAlB/D,EAAKyI,WACLlF,KAAKkF,SAAW,CAAC,OACO1E,IAApB/D,EAAKyI,SAAS9E,IACdJ,KAAKkF,SAAS9E,EAAI8D,EAAczH,EAAKyI,SAAS9E,SAE1BI,IAApB/D,EAAKyI,SAASpF,IACdE,KAAKkF,SAASpF,EAAIoE,EAAczH,EAAKyI,SAASpF,UAGpCU,IAAd/D,EAAK0I,MACLnF,KAAKmF,KAAKgD,KAAK1L,EAAK0I,WAEH3E,IAAjB/D,EAAKwS,UACLjP,KAAKiP,QAAUxS,EAAKwS,cAEJzO,IAAhB/D,EAAKqrC,SACL9nC,KAAK8nC,OAASrrC,EAAKqrC,QAE3B,EC5CG,IAAIC,IACX,SAAWA,GACPA,EAA4B,SAAI,UACnC,CAFD,CAEGA,KAAsBA,GAAoB,CAAC,ICD9C,MAAqHC,GAAH,EAAcvpC,KAAKC,GAC9H,MAAMupC,GACTroC,YAAYsoC,EAAWrxB,EAAWxF,EAAQlG,EAASjG,GAC/ClF,KAAKwzB,cAAgB,KACjB,MAAMI,EAAgBtuB,GAAmC,CACrDH,KAAMnF,KAAKsrB,WAAW1R,OAAOzU,KAC7BD,SAAUlF,KAAKmL,QAAQjG,WAE3B,OAAO9C,EAAOzB,OAAOizB,EAAcxzB,EAAGwzB,EAAc9zB,EAAE,EAE1DE,KAAKmoC,wBAA0B,CAAC97B,EAAUnL,KACtC,GAAImL,EAASyC,UACT,OAEJ,MAAM+H,EAAY7W,KAAKsrB,WAAYjd,EAAawI,EAAU+C,OAAOzU,KACjE,GAAIkH,EAAS+7B,iBAAkB,CAC3B,MAAMC,EAAcpjC,EAA6B,CAAEE,KAAMkJ,IACzDhC,EAASnH,SAASlD,MAAMqmC,GACxBh8B,EAASlF,SAASnF,MAAMqK,EAAS0rB,iBACjC1rB,EAASi8B,mBAAgB9nC,EACzB6L,EAAS+7B,kBAAmB,CAChC,CACA,GAAIpoC,KAAKmL,QAAQ28B,OAAQ,CAMrB,QAL+BtnC,IAA3B6L,EAASi8B,gBACTj8B,EAASi8B,cAAgBlmC,EAAO1B,OAChC2L,EAASi8B,cAAcnoC,OAASsE,EAAY4H,EAAStB,cAAe/K,KAAKkF,UACzEmH,EAASi8B,cAAcpoC,MAAQ6C,IAAcilC,IAE7C37B,EAASi8B,cAAcnoC,QAAUH,KAAKmF,OAASnF,KAAKmL,QAAQ8D,QAAS,CACrE,MAAMs5B,EAAU9pC,KAAK2E,IAAIiL,EAAWjJ,MAAOiJ,EAAWhJ,QAASqD,EAAS,EAAG8/B,EAAe,GAAKC,EAAe,GAC9Gp8B,EAASi8B,cAAcnoC,OAASooC,GAAW7/B,GAAU3F,IAAc0lC,EAAeD,GACtF,MACwChoC,IAApC6L,EAASq8B,yBACTr8B,EAASq8B,uBACLr8B,EAASlF,SAAS/G,GAlCsH,EAkCnG8mC,GAAgByB,UAAYzB,GAAgB0B,kBAEzF,MAAMC,EAAcx8B,EAASi8B,cAAcnoC,OAAQ2oC,EAAaz8B,EAASi8B,cAAcpoC,MAAO6oC,EAAiB18B,EAASq8B,uBACxHr8B,EAASlF,SAASnF,MAAMI,EAAO1B,QAC/B,MAAMsoC,EAAa,CACf5oC,EAAG2oC,IAAmB7B,GAAgByB,UAAYlqC,KAAK4B,IAAM5B,KAAK6B,IAClER,EAAGipC,IAAmB7B,GAAgByB,UAAYlqC,KAAK6B,IAAM7B,KAAK4B,KAEtEgM,EAASnH,SAAS9E,EAAIJ,KAAKkF,SAAS9E,EAAIyoC,EAAcG,EAAW5oC,EAAE0oC,GACnEz8B,EAASnH,SAASpF,EAAIE,KAAKkF,SAASpF,EAAI+oC,EAAcG,EAAWlpC,EAAEgpC,GACnEz8B,EAASi8B,cAAcnoC,QAAUe,EAAEf,OACnCkM,EAASi8B,cAAcpoC,QAChBmM,EAASyM,OAAO+lB,WA9CyH,GA8C7FhoB,EAAUiC,OAAOD,WAAc,EAC1EhC,EAAUiC,OAAOxD,YAC7B,KACK,CACD,MAAM2zB,EAAO7mC,EAAO1B,OACpBuoC,EAAK9oC,OAASe,EAAEf,OAChB8oC,EAAK/oC,MAAQgB,EAAEhB,MACfmM,EAASlF,SAAShG,MAAM8nC,EAC5B,GAEJjpC,KAAKkpC,WAAahB,EAClBloC,KAAKsrB,WAAazU,EAClB7W,KAAK4b,QAAUvK,EACfrR,KAAKm1B,gBAAkBjwB,EAAW9C,EAAOzB,OAAOuE,EAAS9E,EAAG8E,EAASpF,QAAKU,EACtE2K,aAAmBy8B,GACnB5nC,KAAKmL,QAAUA,GAGfnL,KAAKmL,QAAU,IAAIy8B,GACnB5nC,KAAKmL,QAAQhD,KAAKgD,IAEtBnL,KAAKmpC,UAAW,EAChBnpC,KAAK6kB,KAAO7kB,KAAKmL,QAAQ0Z,KACzB7kB,KAAKgU,QAAUhU,KAAKmL,QAAQ6I,QAC5BhU,KAAKmF,KAAOnB,EAAchE,KAAKmL,QAAQhG,KAAKlB,OAAS4S,EAAUiC,OAAOD,WACtE7Y,KAAKiL,KAAOjL,KAAKmF,KAAOnF,KAAKmL,QAAQhG,KAAKoqB,QAAU1Y,EAAUiC,OAAOxD,aACrE,MAAMka,EAAQxvB,KAAKmL,QAAQhG,KAAKqqB,MAChCxvB,KAAKwvB,MAAQ,CACT7mB,OAAQ6mB,EAAM7mB,OAASkO,EAAUiC,OAAOD,WAAahC,EAAUiC,OAAOxD,aACtErK,KAAMukB,EAAMvkB,MAEhBjL,KAAK6R,MAAQD,GAAgB5R,KAAK4b,QAAS5b,KAAKmL,QAAQ0G,QAAU,CAC9Da,EAAG,EACHF,EAAG,EACH3O,EAAG,GAEP7D,KAAKkF,SAAWlF,KAAKm1B,iBAAiB/zB,QAAUpB,KAAKwzB,eACzD,CACAjF,QAAQliB,GACJ,MAAMwK,EAAY7W,KAAKsrB,WAAYngB,EAAUnL,KAAKmL,QAClD,GAAIA,EAAQ08B,UAAW,CACnB,MAAMnkB,EAAQ7M,EAAU4M,cAAcC,MACtC,GAAIA,EAAMwE,UAAYxE,EAAMyE,aAAc,CACpB1jB,EAAYzE,KAAKkF,SAAUwe,EAAMyE,eAClCnoB,KAAKmF,OAClBnF,KAAKmpC,UAAW,EAExB,MAEInpC,KAAKmpC,UAAW,EAEhBnpC,KAAKmpC,UAAYzlB,EAAMxe,WACvBlF,KAAKkF,SAAS9E,EAAIsjB,EAAMxe,SAAS9E,EACjCJ,KAAKkF,SAASpF,EAAI4jB,EAAMxe,SAASpF,EAEzC,CACA,MAAMqX,EAAM9K,EAAStB,eAAe,GAAEzG,EAAE,GAAEC,EAAE,SAAEC,GAAaL,EAAanE,KAAKkF,SAAUiS,GAAMjW,EAAIkB,EAAOzB,OAAO2D,EAAIC,GAEnH,GADArD,EAAEf,OAAUH,KAAKiL,KAAOxM,KAAKk7B,IAAIn1B,EAvGvB,GAuG+CqS,EAAUiC,OAAOxD,aACtE9Q,EAAWxE,KAAKmF,KAAOkH,EAASrB,YAAa,CAC7C,MAAMo+B,EAzGkB,KAyGL/8B,EAASrB,YAA6B6L,EAAUiC,OAAOD,WACrE7Y,KAAKmF,KAAOkH,EAASrB,aAAexG,EAAWxE,KAAKmF,KAAOkH,EAASrB,kBACzCxK,IAA3B6L,EAASi8B,eAA+Bj8B,EAASi8B,cAAcnoC,OA3GpB,EA4GxCgL,EAAQ8D,QACR5C,EAAS4C,WAGT5C,EAAS+7B,kBAAmB,EAC5BpoC,KAAKmoC,wBAAwB97B,EAAUnL,KAIvCiK,EAAQ8D,UACR5C,EAASlH,KAAKlB,OAASmlC,GAE3BppC,KAAKmoC,wBAAwB97B,EAAUnL,KAEvClB,KAAKwvB,MAAM7mB,QA1HgD,GA0HzB3I,KAAKmF,KAAOnF,KAAKwvB,MAAM7mB,UACzD3I,KAAKmF,MAAQikC,IAEbppC,KAAKwvB,MAAMvkB,MA7H6D,GA6H1CjL,KAAKiL,KAAOjL,KAAKwvB,MAAMvkB,QACrDjL,KAAKiL,MAAQm+B,EAAappC,KAAKmL,QAAQhG,KAAKoqB,QAAU1Y,EAAUiC,OAAOxD,aAE/E,MAEItV,KAAKmoC,wBAAwB97B,EAAUnL,EAE/C,CACA0X,KAAK1C,GACDA,EAAQmzB,UAAUrpC,KAAKkF,SAAS9E,EAAGJ,KAAKkF,SAASpF,GACjDoW,EAAQG,YACRH,EAAQozB,IAAIlrC,EAAeA,EAAe4B,KAAKmF,KAxI+C,EAwI/B6iC,IAAU,GACzE9xB,EAAQM,YACRN,EAAQiC,UAAYpE,GAAgB/T,KAAK6R,MAAO7R,KAAKgU,SACrDkC,EAAQgC,MACZ,CACAoD,SACI,MAAM6Z,EAAkBn1B,KAAKm1B,gBAC7Bn1B,KAAKkF,SACDiwB,GAAmB3sB,GAAc2sB,EAAiBn1B,KAAKsrB,WAAW1R,OAAOzU,KAAM/C,EAAO1B,QAChFy0B,EACAn1B,KAAKwzB,eACnB,ECjJG,MAAM+V,GACT3pC,YAAYiX,EAAWxF,GACnBrR,KAAKsrB,WAAazU,EAClB7W,KAAK4b,QAAUvK,EACfrR,KAAK4H,MAAQ,GACb5H,KAAKkoC,UAAY,GACjBloC,KAAKwpC,uBAAyB,GAC9B3yB,EAAU4yB,YAAeC,QAA4BlpC,IAAdkpC,GAA2BpqC,EAASoqC,GACrE1pC,KAAK4H,MAAM8hC,GATJ,GAUP1pC,KAAK4H,MAAMiF,MAAK7C,GAAKA,EAAE6a,OAAS6kB,IACtC7yB,EAAU8yB,YAAc7hC,MAAOqD,EAASjG,IAAalF,KAAK2pC,YAAYx+B,EAASjG,EACnF,CACA4C,kBAAkBqD,EAASjG,GACvB,MAAM0kC,EAAW,IAAI3B,GAAiBjoC,KAAMA,KAAKsrB,WAAYtrB,KAAK4b,QAASzQ,EAASjG,GAEpF,OADAlF,KAAK4H,MAAMuZ,KAAKyoB,GACTxtB,QAAQC,QAAQutB,EAC3B,CACAhxB,KAAK1C,GACD,IAAK,MAAM0zB,KAAY5pC,KAAK4H,MACxBgiC,EAAShxB,KAAK1C,EAEtB,CACAgO,gBAAgBra,GACZ,MAAMggC,EAAkB7pC,KAAKkoC,UAAW4B,EAAgB9pC,KAAKwpC,uBAC7D,GAAI3/B,IAASk+B,GAAkB6B,SAAU,CACrC,MAAsEG,EAAzCn9B,GAAyBk9B,IAA2Dl9B,GAAyBi9B,GAAkBG,EAAYhqC,KAAKsrB,WAAW7H,cAAcC,MAAME,cACvM5jB,KAAK2pC,YAAYI,EAAkBC,EAC5C,CACJ,CACAliC,aACI9H,KAAKkoC,UAAYloC,KAAKsrB,WAAWtP,cAAcksB,UAC/CloC,KAAKwpC,uBAAyBxpC,KAAKsrB,WAAWtP,cAAcyH,cAAckI,MAAMuc,UAChF,MAAM+B,EAAW7/B,GAA0BpK,KAAKkoC,WAAWpgC,MAAO8hC,UACxD5pC,KAAK2pC,YAAYC,EAAS,IAEhCK,aAAoBxqC,YACd2c,QAAQsnB,IAAIuG,SAGZA,CAEd,CACA7L,eAAe/xB,GACX,IAAK,MAAMu9B,KAAY5pC,KAAK4H,MAExB,GADAgiC,EAASrb,QAAQliB,GACbA,EAASyC,UACT,KAGZ,CACAo7B,eAAeN,GACX,MAAMthC,EAAQtI,KAAK4H,MAAMC,QAAQ+hC,GAC7BthC,GArDS,GAsDTtI,KAAK4H,MAAM20B,OAAOj0B,EAFoC,EAI9D,CACAgT,SACI,IAAK,MAAMsuB,KAAY5pC,KAAK4H,MACxBgiC,EAAStuB,QAEjB,CACA2D,OACIjf,KAAK4H,MAAQ,EACjB,EC/DG,MAAMuiC,GACTvqC,YAAYyR,GACRrR,KAAKo2B,GAAK,YACVp2B,KAAK4b,QAAUvK,CACnB,CACAvJ,gBAAgB+O,GACZ,OAAOuF,QAAQC,QAAQ,IAAIktB,GAAU1yB,EAAW7W,KAAK4b,SACzD,CACA4U,YAAYrlB,EAASnK,IACZhB,KAAKolC,YAAYj6B,IAAanL,KAAKolC,YAAYpkC,MAGhDA,GAAQknC,YACR/8B,EAAQ+8B,UAAY99B,GAA0BpJ,EAAOknC,WAAW0B,IAC5D,MAAMxe,EAAM,IAAIwc,GAEhB,OADAxc,EAAIjjB,KAAKyhC,GACFxe,CAAG,KAGlBjgB,EAAQsY,cAAckI,MAAMuc,UAAY99B,GAA0BpJ,GAAQyiB,eAAekI,OAAOuc,WAAW0B,IACvG,MAAMxe,EAAM,IAAIwc,GAEhB,OADAxc,EAAIjjB,KAAKyhC,GACFxe,CAAG,IAElB,CACAga,YAAYj6B,GACR,IAAKA,EACD,OAAO,EAEX,MAAM+8B,EAAY/8B,EAAQ+8B,UAC1B,OAAI1oC,EAAQ0oC,KACCA,EAAU/nC,SAEd+nC,MAGA/8B,EAAQsY,eAAeO,QAAQC,SAASpa,OAC7ClC,GAAUogC,GAAkB6B,SAAUz+B,EAAQsY,cAAcO,OAAOC,QAAQpa,MAInF,EC5CG,MAAMugC,GACTjiC,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKsM,SACL/I,KAAK+I,OAAS7E,EAAczH,EAAKsM,cAEnBvI,IAAd/D,EAAKwM,OACLjJ,KAAKiJ,KAAO/E,EAAczH,EAAKwM,YAEhBzI,IAAf/D,EAAKyM,QACLlJ,KAAKkJ,MAAQhF,EAAczH,EAAKyM,aAEnB1I,IAAb/D,EAAKuM,MACLhJ,KAAKgJ,IAAM9E,EAAczH,EAAKuM,MAEtC,EClBG,IAAIqhC,IACX,SAAWA,GACPA,EAAkB,KAAI,OACtBA,EAAmB,MAAI,OAC1B,CAHD,CAGGA,KAAgBA,GAAc,CAAC,ICH3B,MAAMC,WAAoB1d,GAC7BhtB,cACIyC,QACArC,KAAKiE,MAAQ,CACjB,ECJG,MAAMsmC,WAAkB3d,GAC3BhtB,cACIyC,QACArC,KAAKiE,MAAQ,CAAEb,IAAK,EAAGC,IAAK,EAChC,ECFG,MAAMmnC,GACT5qC,cACII,KAAKuN,MAAQ,EACbvN,KAAKoH,OAAS,IAAIkjC,GAClBtqC,KAAKyqC,KAAO,IAAIF,GAChBvqC,KAAK0qC,YAAa,CACtB,CACAviC,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEnCrR,IAAf/D,EAAK8Q,QACLvN,KAAKuN,MAAQ9Q,EAAK8Q,OAEtBvN,KAAKoH,OAAOe,KAAK1L,EAAK2K,QACtBpH,KAAKyqC,KAAKtiC,KAAK1L,EAAKguC,MACpBzqC,KAAKmd,UAAY/S,GAA0B3N,EAAK0gB,WAAWA,GAChD9T,GAAW,CAAC,EAAG8T,UAEF3c,IAApB/D,EAAKiuC,aACL1qC,KAAK0qC,WAAajuC,EAAKiuC,YAEvBjuC,EAAKkuC,cACL3qC,KAAK2qC,YAAc3qC,KAAK2qC,aAAe,CAAC,OACbnqC,IAAvB/D,EAAKkuC,YAAYh4B,IACjB3S,KAAK2qC,YAAYh4B,EAAIlW,EAAKkuC,YAAYh4B,QAEfnS,IAAvB/D,EAAKkuC,YAAY93B,IACjB7S,KAAK2qC,YAAY93B,EAAIpW,EAAKkuC,YAAY93B,QAEfrS,IAAvB/D,EAAKkuC,YAAY/3B,IACjB5S,KAAK2qC,YAAY/3B,EAAInW,EAAKkuC,YAAY/3B,IAGlD,ECpCG,MAAMg4B,GACThrC,cACII,KAAK6I,OAAS,IAAIuhC,GAClBpqC,KAAK6J,KAAOwgC,GAAY5b,KACxBzuB,KAAK6qC,MAAQ,IAAIL,EACrB,CACAriC,KAAK1L,GACGiD,EAAOjD,KAGPA,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,MAEjBpN,EAAKoM,QACL7I,KAAK6I,OAAOV,KAAK1L,EAAKoM,QAE1B7I,KAAK6qC,MAAM1iC,KAAK1L,EAAKouC,OACzB,ECnBJ,SAASC,GAAiBz5B,EAAQwF,EAAWoQ,EAAQ8jB,GACjD,MAAMC,EAAiB/jB,EAAO9b,QAAQ8D,QACtC,IAAK+7B,EACD,OAEJ,MAAMC,EAAeD,EAAeH,MAAO1/B,EAAUslB,GAAqBpf,EAAQwF,EAAWoQ,EAAO9b,SAAU/D,EAASpD,EAAcinC,EAAa7jC,OAAOnD,OAAQinC,EAAcjkB,EAAOrS,eAClLq2B,EAAap5B,MACb1G,EAAQ0G,MAAM1J,KAAK8iC,EAAap5B,OAE3Bo5B,EAAaN,aAAeO,EACjC//B,EAAQ0G,MAAM1J,KAAK,CACflE,MAAO,CACH8O,IAAK,CACDJ,EAAGu4B,EAAYv4B,EAAI3O,EAAcinC,EAAaN,YAAYh4B,GAdxD,GAeFE,EAAGq4B,EAAYr4B,EAAI7O,EAAcinC,EAAaN,YAAY93B,GAfxD,GAgBFD,EAAGs4B,EAAYt4B,EAAI5O,EAAcinC,EAAaN,YAAY/3B,GAhBxD,OAsBdzH,EAAQ0G,MAAM1J,KAAK,CACflE,MAAO,CACH8O,IAAKkU,EAAOrS,kBAIxBzJ,EAAQiS,KAAKjV,KAAK,CACdqmB,OAAQ,CACJpuB,EAAG6mB,EAAO/hB,SAAS9E,EACnBN,EAAGmnB,EAAO/hB,SAASpF,EACnB+J,KAAM7D,GAAUmlC,WAGpB7rC,EAAS6L,EAAQhG,KAAKlB,OACtBkH,EAAQhG,KAAKlB,OAASmD,GAGtB+D,EAAQhG,KAAKlB,MAAMb,KAAOgE,EAC1B+D,EAAQhG,KAAKlB,MAAMZ,KAAO+D,GAE9B+D,EAAQhD,KAAK4iC,GACb,MAAMriC,EAASuiC,EAAaP,WAAaxmC,GAAe+iB,EAAO9hB,KAAKlB,MAAOgjB,EAAO9hB,KAAKlB,OA3CrE,EA2C6FiB,EAAW,CACtH9E,EAAG6mB,EAAO/hB,SAAS9E,EAAIwD,EAAc8E,GACrC5I,EAAGmnB,EAAO/hB,SAASpF,EAAI8D,EAAc8E,IAEzC,OAAOmO,EAAUsG,UAAU6f,YAAY93B,EAAUiG,EAAS8b,EAAOoJ,OAAQhkB,KACjEA,EAASlH,KAAKlB,MAhDgB,MAmDlCoI,EAASlF,SAAShH,OAASyD,EAAcM,EAAc+iB,EAAO9f,SAAShH,OAAQkM,EAASlF,SAAShH,SACjGkM,EAAS++B,YAAcnkB,EAAOmkB,YApD6B,GAAe,EAqD1E/+B,EAASupB,aAAc,EACvBzR,YAAW,KACP9X,EAASupB,aAAc,CAAK,GAvD+D,MAyDxF,IAEf,CCxDO,MAAMyV,GACTzrC,YAAYyR,EAAQwF,GAChB7W,KAAK6W,UAAYA,EACjB7W,KAAKqR,OAASA,CAClB,CACA8Q,KAAK9V,GACD,MAAMwK,EAAY7W,KAAK6W,UAAgDm0B,EAAlB3+B,EAASlB,QAA2C8D,QACzG,IAAK+7B,EACD,OAEJ3+B,EAAS++B,WAAa,EACtB,MAAME,EAAuBN,EAAeniC,OACvCwD,EAASk/B,gBACVl/B,EAASk/B,cAAgB,CAAC,GAE9B,MAAM,OAAExiC,EAAM,KAAEE,EAAI,MAAEC,EAAK,IAAEF,GAAQsiC,GAAsB,cAAEC,GAAkBl/B,EAAUgC,EAAawI,EAAU+C,OAAOzU,KACnH4D,IACAwiC,EAAcxiC,OAAU/E,EAAc+E,GAAUsF,EAAWhJ,OAAU,GAErE4D,IACAsiC,EAActiC,KAAQjF,EAAciF,GAAQoF,EAAWjJ,MAAS,GAEhE8D,IACAqiC,EAAcriC,MAASlF,EAAckF,GAASmF,EAAWjJ,MAAS,GAElE4D,IACAuiC,EAAcviC,IAAOhF,EAAcgF,GAAOqF,EAAWhJ,OAAU,EAEvE,CACAqtB,UAAUrmB,GACN,OAAQA,EAASyC,SACrB,CACA0hB,YAAYrlB,KAAY5B,GACf4B,EAAQ8D,UACT9D,EAAQ8D,QAAU,IAAI27B,IAE1B,IAAK,MAAM5pC,KAAUuI,EACjB4B,EAAQ8D,QAAQ9G,KAAKnH,GAAQiO,QAErC,CACAgnB,kBAAkB5pB,EAAUspB,GACxB,GAAIA,EACA,OAEJ,MAAMqV,EAAiB3+B,EAASlB,QAAQ8D,QACpC+7B,GAAkBA,EAAenhC,OAASwgC,GAAYQ,ODY3D,SAAex5B,EAAQwF,EAAWxK,GACrC,MAAM2+B,EAAiB3+B,EAASlB,QAAQ8D,QACxC,IAAK+7B,EACD,OAEJ,MAAMC,EAAeD,EAAeH,MACpC,GAAII,EAAa19B,OAlEuG,SAmE3F/M,IAAxB6L,EAAS++B,YAA4B/+B,EAAS++B,aAAeH,EAAa19B,OAC3E,OAEJ,MAAMk9B,EAAOzmC,EAAcinC,EAAaR,KAAKxmC,OAAQunC,EAAwB5+B,GAAyBq+B,EAAa9tB,WACnH,IAAK,IAAI+c,EAAI,EAAGA,EAAIuQ,EAAMvQ,IACtB4Q,GAAiBz5B,EAAQwF,EAAWxK,EAAUm/B,EAEtD,CCzBYX,CAAM7qC,KAAKqR,OAAQrR,KAAK6W,UAAWxK,EAE3C,CACAgxB,OAAOhxB,GACH,IAAKrM,KAAK0yB,UAAUrmB,GAChB,OAEJ,MAAMnH,EAAWmH,EAAStB,cAAelC,EAASwD,EAASk/B,cACtD1iC,SAGkBrI,IAAlBqI,EAAOE,QAAwB7D,EAASpF,GAAK+I,EAAOE,aACpCvI,IAAhBqI,EAAOI,MAAsB/D,EAAS9E,GAAKyI,EAAOI,WACjCzI,IAAjBqI,EAAOK,OAAuBhE,EAAS9E,GAAKyI,EAAOK,YACpC1I,IAAfqI,EAAOG,KAAqB9D,EAASpF,GAAK+I,EAAOG,MAClDqD,EAAS4C,SAEjB,EClEG,MAAMw8B,GACT7rC,cACII,KAAKo9B,MAAO,CAChB,CACAj1B,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAK8Q,QACLvN,KAAKuN,MAAQ9Q,EAAK8Q,YAEH/M,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQlJ,EAAczH,EAAK2Q,aAEd5M,IAAlB/D,EAAK00B,WACLnxB,KAAKmxB,SAAWjtB,EAAczH,EAAK00B,gBAErB3wB,IAAd/D,EAAK2gC,OACLp9B,KAAKo9B,KAAO3gC,EAAK2gC,MAEzB,ECpBG,MAAMsO,GACT9rC,cACII,KAAK+9B,SAAW,EAChB/9B,KAAKoN,MAAQ,EACjB,CACAjF,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAKshC,WACL/9B,KAAK+9B,SAAW75B,EAAczH,EAAKshC,gBAEpBv9B,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQlJ,EAAczH,EAAK2Q,QAExC,ECfG,MAAMu+B,GACT/rC,cACII,KAAK6R,OAAQ,EACb7R,KAAKgU,SAAU,CACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQpV,EAAKoV,YAEDrR,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAE5B,ECdG,MAAM43B,GACThsC,cACII,KAAKmL,QAAU,CAAC,EAChBnL,KAAK6rC,QAAU,IAAIF,GACnB3rC,KAAKsgB,KAAO,QAChB,CACAnY,KAAK1L,GACGiD,EAAOjD,UAGU+D,IAAjB/D,EAAK0O,UACLnL,KAAKmL,QAAU9B,GAAW,CAAC,EAAG5M,EAAK0O,SAAW,CAAC,IAEnDnL,KAAK6rC,QAAQ1jC,KAAK1L,EAAKovC,cACLrrC,IAAd/D,EAAK6jB,OACLtgB,KAAKsgB,KAAO7jB,EAAK6jB,MAEzB,EClBG,MAAMwrB,GACTlsC,cACII,KAAK6J,KAAO7D,GAAUsI,QACtBtO,KAAKqF,OAAS,EACdrF,KAAKoF,MAAQ,CACjB,CACA+C,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEDrJ,IAAhB/D,EAAK4I,SACLrF,KAAKqF,OAAS5I,EAAK4I,aAEJ7E,IAAf/D,EAAK2I,QACLpF,KAAKoF,MAAQ3I,EAAK2I,OAE1B,ECfG,MAAM2mC,GACTnsC,cACII,KAAKixB,UAAW,EAChBjxB,KAAKkY,MAAO,EACZlY,KAAKgsC,KAAO,IAAIP,GAChBzrC,KAAKyqC,KAAO,IAAIiB,GAChB1rC,KAAKyY,MAAQ,IAAImzB,GACjB5rC,KAAKisC,WAAa,CACtB,CACA9jC,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAKw0B,WACLjxB,KAAKixB,SAAWx0B,EAAKw0B,eAEPzwB,IAAd/D,EAAK0I,OACAnF,KAAKmF,OACNnF,KAAKmF,KAAO,IAAI2mC,IAEpB9rC,KAAKmF,KAAKgD,KAAK1L,EAAK0I,YAED3E,IAAnB/D,EAAKmM,YACL5I,KAAK4I,UAAYnM,EAAKmM,WAE1B5I,KAAKksC,MAAQzvC,EAAKyvC,WACA1rC,IAAd/D,EAAKyb,OACLlY,KAAKkY,KAAOzb,EAAKyb,MAErBlY,KAAKgsC,KAAK7jC,KAAK1L,EAAKuvC,MACpBhsC,KAAK6kB,KAAOpoB,EAAKooB,KACjB7kB,KAAKmd,UAAY/S,GAA0B3N,EAAK0gB,WAAWA,GAChD9T,GAAW,CAAC,EAAG8T,KAE1Bnd,KAAKyqC,KAAKtiC,KAAK1L,EAAKguC,MACpBzqC,KAAKyY,MAAMtQ,KAAK1L,EAAKgc,YACCjY,IAAlB/D,EAAKyI,WACLlF,KAAKkF,SAAW,CAAC,OACO1E,IAApB/D,EAAKyI,SAAS9E,IACdJ,KAAKkF,SAAS9E,EAAI8D,EAAczH,EAAKyI,SAAS9E,SAE1BI,IAApB/D,EAAKyI,SAASpF,IACdE,KAAKkF,SAASpF,EAAIoE,EAAczH,EAAKyI,SAASpF,UAG9BU,IAApB/D,EAAK0vC,kBACmB3rC,IAApBR,KAAKmsC,aACLnsC,KAAKmsC,WAAa,IAAI3f,IAE1BxsB,KAAKmsC,WAAWhkC,KAAK1L,EAAK0vC,kBAEN3rC,IAApB/D,EAAKwvC,aACLjsC,KAAKisC,WAAaxvC,EAAKwvC,YAE/B,EC3DG,IAAIG,IACX,SAAWA,GACPA,EAA0B,QAAI,SACjC,CAFD,CAEGA,KAAqBA,GAAmB,CAAC,ICC5C,SAASC,GAAyBtV,EAAkBllB,GAC5CklB,EAAiBllB,MACjBklB,EAAiBllB,MAAM5N,MAAQ4N,EAG/BklB,EAAiBllB,MAAQ,CACrB5N,MAAO4N,EAGnB,CACO,MAAMy6B,GACT1sC,YAAYyR,EAAQk7B,EAAU11B,EAAW1L,EAASjG,GAC9ClF,KAAKusC,SAAWA,EAChBvsC,KAAK6W,UAAYA,EACjB7W,KAAKwsC,SAAW,KACZxsC,KAAK0e,mBAAmBP,aACxBne,KAAK0e,uBAAoBle,EACzBR,KAAK6nB,iBAAiB1J,aACtBne,KAAK6nB,qBAAkBrnB,EACvBR,KAAKusC,SAASE,cAAczsC,MAC5BA,KAAK4b,QAAQsa,cAAc,mBAAoB,CAC3Crf,UAAW7W,KAAK6W,UAChBpa,KAAM,CACFiwC,QAAS1sC,OAEf,EAENA,KAAK2sC,cAAgB,KACjB,GAAI3sC,KAAKggC,QACL,OAEJ,MAAM7O,OAA2C3wB,IAAhCR,KAAKmL,QAAQ6gC,MAAM7a,SAAyBntB,EAAchE,KAAKmL,QAAQ6gC,KAAK7a,eAAY3wB,EACrGR,KAAK6W,UAAUiC,OAAOxD,eACrBtV,KAAK4sC,WAF0I,GAE7G5sC,KAAK6sC,iBAC3BrsC,IAAb2wB,GACAA,EAJ8H,IAK9HnxB,KAAK6/B,UAAY1O,EAAWhzB,EAChC,EAEJ6B,KAAK8sC,mBAAqB,CAAC5/B,EAAW6/B,EAAW/9B,EAAU5H,EAxCyF,KAyChJ,MAAMyP,EAAY7W,KAAK6W,UACvB,IAAK3J,EAAUjD,OACX,OAAO8iC,EAEX,MAAMpC,EAAc/mC,EAAcsJ,EAAUxE,QAAyDskC,EAAxChpC,EAAchE,KAAKmL,QAAQs/B,KAAKr9B,OAA8BjP,EAAyB0Y,EAAUiC,OAAOxD,aACrK,OAAQy3B,EAD+M/oC,EAAckJ,EAAUyI,OAAxC,GACrKkB,EAAUua,SAAY4b,EAAarC,EAAcvjC,GAAU4H,CAAQ,EAEzGhP,KAAK4b,QAAUvK,EACfrR,KAAKitC,iBAAmB,EACxBjtC,KAAKktC,kBAAoB,EACzBltC,KAAKmtC,mBAAqB,EAC1BntC,KAAKotC,iBAAmBloC,EACpBiG,aAAmB4gC,GACnB/rC,KAAKmL,QAAUA,GAGfnL,KAAKmL,QAAU,IAAI4gC,GACnB/rC,KAAKmL,QAAQhD,KAAKgD,IAEtBnL,KAAKqtC,YACArpC,EAAchE,KAAKmL,QAAQ6gC,KAAK5+B,OA7DR,GA6DqCjP,EAC1D6B,KAAK6W,UAAUiC,OAAOxD,aAC9BtV,KAAKkF,SAAWlF,KAAKotC,kBAAoBptC,KAAKwzB,gBAC9CxzB,KAAK6kB,KAAO7kB,KAAKmL,QAAQ0Z,KACzB7kB,KAAKkY,KAAOlY,KAAKmL,QAAQ+M,KACzBlY,KAAKstC,aAAettC,KAAKmL,QAAQ6gC,KAAK5O,KACtCp9B,KAAKutC,sBAAuB,EAC5B,IAAIxW,EAAmB1tB,GAAW,CAAC,EAAGrJ,KAAKmL,QAAQgS,WAanD,GAZA4Z,IAAqB,CAAC,EACtBA,EAAiB3Z,OAAS,CAAC,EAC3B2Z,EAAiB3Z,KAAKxU,YAAc5I,KAAKmL,QAAQvC,UAC7C5I,KAAKmL,QAAQghC,aACbnsC,KAAKmsC,WAAah6B,GAAgBnS,KAAK4b,QAAS5b,KAAKmL,QAAQghC,aAEjEnsC,KAAKggC,SAAWhgC,KAAKmL,QAAQ8lB,SAC7BjxB,KAAKwtC,kBAAoBzW,EACzB/2B,KAAKytC,MAAQztC,KAAK0tC,YAClB1tC,KAAKmF,KAAOsJ,GAAQzO,KAAKytC,MAAOztC,KAAK6W,UAAU+C,OAAOzU,MACtDnF,KAAK4sC,WAAa5sC,KAAKmL,QAAQ6gC,KAAKz+B,QA/E8E,EAgFlHvN,KAAK6sC,UAAY7sC,KAAK4sC,YAhFyB,EAiF3C5sC,KAAKmL,QAAQ+gC,MAAO,CACpB,MAAMzhC,EAAUlD,SAAS4+B,eAAenmC,KAAKmL,QAAQ+gC,OACjDzhC,IACAzK,KAAK0e,kBAAoB,IAAIwB,kBAAiB,KAC1ClgB,KAAKsb,QAAQ,IAEjBtb,KAAK6nB,gBAAkB,IAAID,gBAAe,KACtC5nB,KAAKsb,QAAQ,IAEjBtb,KAAK0e,kBAAkBJ,QAAQ7T,EAAS,CACpC8T,YAAY,EACZovB,gBAAiB,CAAC,QAAS,QAAS,YAExC3tC,KAAK6nB,gBAAgBvJ,QAAQ7T,GAErC,CACA,MAAM0sB,EAAen3B,KAAKmL,QAAQsN,MAAOm1B,EAAiB5tC,KAAK4b,QAAQiyB,qBAAqBC,kBAAkB3W,EAAa7W,MACvHstB,IACA5tC,KAAK+tC,OAASH,EAAeI,SAAShuC,KAAKkF,SAAUlF,KAAKmF,KAAMnF,KAAKkY,KAAMif,EAAahsB,UAE5FnL,KAAK4b,QAAQsa,cAAc,iBAAkB,CACzCrf,YACApa,KAAM,CACFiwC,QAAS1sC,QAGjBA,KAAKslB,MACT,CACA2oB,gBACIjuC,KAAKggC,SAAU,EACfhgC,KAAKolB,OACT,CACA8oB,eACIluC,KAAKggC,SAAU,EACfhgC,KAAKslB,MACT,CACAxd,mBACU9H,KAAK+tC,QAAQ5rB,OACvB,CACAiD,QACQplB,KAAKggC,gBAGFhgC,KAAKmuC,UAChB,CACA7oB,OACI,IAAItlB,KAAKggC,SAGHhgC,KAAK6W,UAAUiC,OAAOxD,eACvBtV,KAAK4sC,WAnIqC,GAmIR5sC,KAAK6sC,YAAc7sC,KAAKmL,QAAQ6gC,KAAKz+B,SACvEvN,KAAKstC,aAAettC,KAAKmtC,qBAAuBntC,KAAKqtC,aApIY,IAkItE,CAKA,QAAwB7sC,IAApBR,KAAKmuC,WAA0B,CAC/B,MAAM/gC,EAAQpJ,EAAchE,KAAKmL,QAAQs/B,KAAKr9B,OAC9CpN,KAAKmuC,WAAc/gC,EAAQjP,EAAyB6B,KAAK6W,UAAUiC,OAAOxD,YAC9E,EACItV,KAAK4sC,WA3IsC,GA2IT5sC,KAAK6sC,YACvC7sC,KAAK2sC,eANT,CAQJ,CACArxB,SACI,MAAM6Z,EAAkBn1B,KAAKotC,iBAC7BptC,KAAKkF,SACDiwB,GAAmB3sB,GAAc2sB,EAAiBn1B,KAAK6W,UAAU+C,OAAOzU,KAAM/C,EAAO1B,QAC/Ey0B,EACAn1B,KAAKwzB,gBACfxzB,KAAKytC,MAAQztC,KAAK0tC,YAClB1tC,KAAKmF,KAAOsJ,GAAQzO,KAAKytC,MAAOztC,KAAK6W,UAAU+C,OAAOzU,MACtDnF,KAAK+tC,QAAQzyB,OAAOtb,KAAKkF,SAAUlF,KAAKmF,KAC5C,CACAk4B,OAAOxuB,GACC7O,KAAKggC,UAGLhgC,KAAKstC,cACLttC,KAAKstC,aAAc,EACnBttC,KAAKmtC,mBAAqBntC,KAAKqtC,aA/JmC,EAgKlErtC,KAAKktC,kBAAoBltC,KAAKmuC,YAhK0D,GAkKvFnuC,KAAKutC,uBACNvtC,KAAKutC,sBAAuB,EAC5BvtC,KAAKouC,eAAepuC,KAAKmL,QAAQ8gC,kBAEdzrC,IAAnBR,KAAK6/B,YACL7/B,KAAKitC,kBAAoBp+B,EAAM5K,MAC3BjE,KAAKitC,kBAAoBjtC,KAAK6/B,YAC9B7/B,KAAKolB,aACoB5kB,IAArBR,KAAKqtC,oBACErtC,KAAKqtC,YAEXrtC,KAAK6sC,WACN7sC,KAAK4sC,aAEL5sC,KAAK4sC,WAhL8B,GAgLD5sC,KAAK6sC,WACvC7sC,KAAKkF,SAAWlF,KAAKwzB,gBACrBxzB,KAAK+tC,QAAQzyB,OAAOtb,KAAKkF,SAAUlF,KAAKmF,MACxCnF,KAAKqtC,YACArpC,EAAchE,KAAKmL,QAAQ6gC,KAAK5+B,OApLpB,GAoLiDjP,EAC1D6B,KAAK6W,UAAUiC,OAAOxD,cAG9BtV,KAAKwsC,WAETxsC,KAAKitC,kBAAoBjtC,KAAK6/B,iBACvB7/B,KAAK6/B,iBAGKr/B,IAArBR,KAAKqtC,cACLrtC,KAAKmtC,oBAAsBt+B,EAAM5K,MAC7BjE,KAAKmtC,oBAAsBntC,KAAKqtC,cAChCrtC,KAAK4b,QAAQsa,cAAc,cAAe,CACtCrf,UAAW7W,KAAK6W,YAEpB7W,KAAKslB,OACLtlB,KAAKmtC,oBAAsBntC,KAAKmtC,0BACzBntC,KAAKqtC,mBAGI7sC,IAApBR,KAAKmuC,aACLnuC,KAAKktC,mBAAqBr+B,EAAM5K,MAC5BjE,KAAKktC,mBAAqBltC,KAAKmuC,aAC/BnuC,KAAKquC,QACLruC,KAAKktC,mBAAqBltC,KAAKmuC,aAG3C,CACA3a,gBACI,GAAIxzB,KAAKmL,QAAQ+gC,MAAO,CACpB,MAAMzhC,EAAUlD,SAAS4+B,eAAenmC,KAAKmL,QAAQ+gC,OACrD,GAAIzhC,EAAS,CACT,MAAM6jC,EAAS7jC,EAAQke,wBAAyB5b,EAAU/M,KAAK6W,UAAUiC,OAAOD,WAChF,MAAO,CACHzY,GAAIkuC,EAAOluC,EAvNlB,GAuNsBkuC,EAAOlpC,OAAgB2H,EACtCjN,GAAIwuC,EAAOxuC,EAxNlB,GAwNsBwuC,EAAOjpC,QAAiB0H,EAE/C,CACJ,CACA,OAAOzH,GAAmC,CACtCH,KAAMnF,KAAK6W,UAAU+C,OAAOzU,KAC5BD,SAAUlF,KAAKmL,QAAQjG,UAE/B,CACAwoC,YACI,MAAM72B,EAAY7W,KAAK6W,UACvB,GAAI7W,KAAKmL,QAAQ+gC,MAAO,CACpB,MAAMzhC,EAAUlD,SAAS4+B,eAAenmC,KAAKmL,QAAQ+gC,OACrD,GAAIzhC,EAAS,CACT,MAAM6jC,EAAS7jC,EAAQke,wBACvB,MAAO,CACHvjB,MAAOkpC,EAAOlpC,MAAQyR,EAAUiC,OAAOD,WACvCxT,OAAQipC,EAAOjpC,OAASwR,EAAUiC,OAAOD,WACzChP,KAAM7D,GAAUmlC,QAExB,CACJ,CACA,OAAQnrC,KAAKmL,QAAQhG,MACjB,MACI,MAAMA,EAAO,IAAI2mC,GAMjB,OALA3mC,EAAKgD,KAAK,CACN9C,OAAQ,EACRwE,KAAM7D,GAAUsI,QAChBlJ,MAAO,IAEJD,CACV,EARD,EASR,CACAkpC,QACI,GAAIruC,KAAKggC,QACL,OAEJ,MAAMjC,EAAW/5B,EAAchE,KAAKmL,QAAQs/B,KAAK1M,UACjD/9B,KAAKouC,eAAerQ,EACxB,CACAqQ,eAAerQ,GACX,MAAMwQ,EAAyB3hC,GAAyB5M,KAAKwtC,mBAC7D,IAAK,IAAItT,EAAI,EAAGA,EAAI6D,EAAU7D,IAAK,CAC/B,MAAMnD,EAAmB1tB,GAAW,CAAC,EAAGklC,GACxC,GAAIvuC,KAAKmsC,WAAY,CACjB,MAAMqC,EAAexuC,KAAKmL,QAAQghC,YAAYj/B,UAC9C,GAAIshC,EAAc,CACd,MAAMC,EAAY,CACd97B,EAAG,IACHE,EAAG,IACHD,EAAG,KACJ87B,EAAc,IACjB1uC,KAAKmsC,WAAWx5B,EAAI3S,KAAK8sC,mBAAmB0B,EAAa77B,EAAG3S,KAAKmsC,WAAWx5B,EAAG87B,EAAU97B,EAAG+7B,GAC5F1uC,KAAKmsC,WAAWt5B,EAAI7S,KAAK8sC,mBAAmB0B,EAAa37B,EAAG7S,KAAKmsC,WAAWt5B,EAAG47B,EAAU57B,GACzF7S,KAAKmsC,WAAWv5B,EAAI5S,KAAK8sC,mBAAmB0B,EAAa57B,EAAG5S,KAAKmsC,WAAWv5B,EAAG67B,EAAU77B,EAC7F,CACAy5B,GAAyBtV,EAAkB/2B,KAAKmsC,WACpD,CACA,MAAMhV,EAAen3B,KAAKmL,QAAQsN,MAClC,IAAIvT,EAAWlF,KAAKkF,SACpB,GAAIlF,KAAK+tC,OAAQ,CACb,MAAMY,EAAe3uC,KAAK+tC,OAAOa,iBACjC,GAAID,EAAc,CACdzpC,EAAWypC,EAAazpC,SACxB,MAAM2pC,EAAc1X,EAAa0U,QAC7BgD,EAAYh9B,OAAS88B,EAAa98B,OAClCw6B,GAAyBtV,EAAkB4X,EAAa98B,OAExDg9B,EAAY76B,UACR+iB,EAAiB/iB,QACjB+iB,EAAiB/iB,QAAQ/P,MAAQ0qC,EAAa36B,QAG9C+iB,EAAiB/iB,QAAU,CACvB/P,MAAO0qC,EAAa36B,SAIpC,MAEI9O,EAAW,IAEnB,CACIA,GACAlF,KAAK6W,UAAUsG,UAAU6f,YAAY93B,EAAU6xB,EAEvD,CACJ,EC9SG,MAAM+X,GACTlvC,YAAYyR,EAAQwF,GAChB7W,KAAK6W,UAAYA,EACjB7W,KAAK4b,QAAUvK,EACfrR,KAAK4H,MAAQ,GACb5H,KAAKusC,SAAW,GAChBvsC,KAAK+uC,sBAAwB,CACzBxsC,OAAQ,CACJgL,MAAO,EACPtD,QAAQ,GAEZhG,MAAO,IAGX4S,EAAUm4B,WAActF,QAA4BlpC,IAAdkpC,GAA2BpqC,EAASoqC,GACpE1pC,KAAK4H,MAAM8hC,GAFI,GAGf1pC,KAAK4H,MAAMiF,MAAK7C,GAAKA,EAAE6a,OAAS6kB,IACtC7yB,EAAUo4B,WAAannC,MAAOqD,EAASjG,IAAalF,KAAKivC,WAAW9jC,EAASjG,GAC7E2R,EAAU41B,cAAiB/C,IACvB,MAAMgD,EAAU71B,EAAUm4B,WAAWtF,GACjCgD,GACA1sC,KAAKysC,cAAcC,EACvB,EAEJ71B,EAAUq4B,YAAexF,IACrB,MAAMgD,EAAU71B,EAAUm4B,WAAWtF,GACjCgD,GACAA,EAAQwB,cACZ,EAEJr3B,EAAUs4B,aAAgBzF,IACtB,MAAMgD,EAAU71B,EAAUm4B,WAAWtF,GACjCgD,GACAA,EAAQuB,eACZ,CAER,CACAnmC,iBAAiBqD,EAASjG,GACtB,MAAMkqC,EAAiB,IAAIrD,GAC3BqD,EAAejnC,KAAKgD,GACpB,MAAMuhC,EAAU,IAAIJ,GAAgBtsC,KAAK4b,QAAS5b,KAAMA,KAAK6W,UAAWu4B,EAAgBlqC,GAGxF,aAFMwnC,EAAQvqB,OACdniB,KAAK4H,MAAMuZ,KAAKurB,GACTA,CACX,CACAxoB,gBAAgBra,GACZ,MAAMulC,EAAiBpvC,KAAKusC,SAAU8C,EAAervC,KAAK+uC,sBAC1D,GAAIllC,IAASuiC,GAAiBM,QAC1B,OAEJ,IAAI4C,EACJ,GAAID,GAAgB7vC,EAAQ6vC,EAAaprC,OAAQ,CAC7C,MAAMsrC,EAAY,EAClB,GAAIF,EAAaprC,MAAM9D,OAASovC,GAAaF,EAAa9sC,OAAO0H,OAAQ,CACrEqlC,EAAsB,GACtB,MAAME,EAAc,GACpB,IAAK,IAAItV,EAAI,EAAGA,EAAImV,EAAa9sC,OAAOgL,MAAO2sB,IAAK,CAChD,MAAMr3B,EAAMuF,GAAiBinC,EAAaprC,OACtCurC,EAAYC,SAAS5sC,IAAQ2sC,EAAYrvC,OAASkvC,EAAaprC,MAAM9D,OACrE+5B,KAGJsV,EAAYruB,KAAKte,GACjBysC,EAAoBnuB,KAAK9Y,GAAcgnC,EAAaprC,MAAOpB,IAC/D,CACJ,MAEIysC,EAAsBD,EAAaprC,KAE3C,MAEIqrC,EAAsBD,GAAcprC,MAExC,MAAMyrC,EAAkBJ,GAAuBF,EAAgBO,EAAY3vC,KAAK6W,UAAU4M,cAAcC,MAAME,cACzGxZ,GAA0BslC,GAAiB5nC,MAAO4kC,UAC7C1sC,KAAKivC,WAAWvC,EAASiD,EAAU,GAEjD,CACA7nC,aAGI,GAFA9H,KAAKusC,SAAWvsC,KAAK6W,UAAUmF,cAAcuwB,SAC7CvsC,KAAK+uC,sBAAwB/uC,KAAK6W,UAAUmF,cAAcyH,cAAckI,MAAM4gB,SACzEvsC,KAAKusC,SAGV,GAAI/sC,EAAQQ,KAAKusC,UACb,IAAK,MAAM6C,KAAkBpvC,KAAKusC,eACxBvsC,KAAKivC,WAAWG,cAIpBpvC,KAAKivC,WAAWjvC,KAAKusC,SAEnC,CACAnnB,QACI,IAAK,MAAMsnB,KAAW1sC,KAAK4H,MACvB8kC,EAAQtnB,OAEhB,CACAE,OACI,IAAK,MAAMonB,KAAW1sC,KAAK4H,MACvB8kC,EAAQpnB,MAEhB,CACAmnB,cAAcC,GACV,MAAMpkC,EAAQtI,KAAK4H,MAAMC,QAAQ6kC,GAC7BpkC,GADkD,GAElDtI,KAAK4H,MAAM20B,OAAOj0B,EAFiD,EAI3E,CACAgT,SACI,IAAK,MAAMoxB,KAAW1sC,KAAK4H,MACvB8kC,EAAQpxB,QAEhB,CACA2D,OACIjf,KAAK4H,MAAQ,EACjB,CACAy1B,OAAOxuB,GACH,IAAK,MAAM69B,KAAW1sC,KAAK4H,MACvB8kC,EAAQrP,OAAOxuB,EAEvB,ECzHG,MAAM+gC,GACThwC,YAAYyR,GACRrR,KAAK4b,QAAUvK,EACfrR,KAAKo2B,GAAK,UACd,CACAyO,UAAUhuB,GACN,OAAOuF,QAAQC,QAAQ,IAAIyyB,GAAS9uC,KAAK4b,QAAS/E,GACtD,CACA2Z,YAAYrlB,EAASnK,GACjB,IAAKhB,KAAKolC,YAAYj6B,KAAanL,KAAKolC,YAAYpkC,GAChD,OAEAA,GAAQurC,WACRphC,EAAQohC,SAAWniC,GAA0BpJ,EAAOurC,UAAUG,IAC1D,MAAMthB,EAAM,IAAI2gB,GAEhB,OADA3gB,EAAIjjB,KAAKukC,GACFthB,CAAG,KAGlB,MAAM2jB,EAAwB/tC,GAAQyiB,eAAekI,OAAO4gB,SAC5D,GAAIwC,EACA,GAAIvvC,EAAQuvC,GACR5jC,EAAQsY,cAAckI,MAAM4gB,SAAW,CACnChqC,OAAQ,CACJgL,MAAO,EACPtD,QAAQ,GAEZhG,MAAO8qC,EAAsBplC,KAAIkJ,IAC7B,MAAMuY,EAAM,IAAI2gB,GAEhB,OADA3gB,EAAIjjB,KAAK0K,GACFuY,CAAG,SAIjB,CACD,MAAMykB,EAAcd,EACpB,QAA0BvuC,IAAtBqvC,EAAY5rC,MAAqB,CACjC,MAAM6rC,EAAe,EACrB,GAAItwC,EAAQqwC,EAAY5rC,OACpBkH,EAAQsY,cAAckI,MAAM4gB,SAAW,CACnChqC,OAAQ,CACJgL,MAAOsiC,EAAYttC,OAAOgL,OAASuiC,EACnC7lC,OAAQ4lC,EAAYttC,OAAO0H,SAAU,GAEzChG,MAAO4rC,EAAY5rC,MAAM0F,KAAIkJ,IACzB,MAAMuY,EAAM,IAAI2gB,GAEhB,OADA3gB,EAAIjjB,KAAK0K,GACFuY,CAAG,SAIjB,CACD,MAAMA,EAAM,IAAI2gB,GAChB3gB,EAAIjjB,KAAK0nC,EAAY5rC,OACrBkH,EAAQsY,cAAckI,MAAM4gB,SAAW,CACnChqC,OAAQ,CACJgL,MAAOsiC,EAAYttC,OAAOgL,OAASuiC,EACnC7lC,OAAQ4lC,EAAYttC,OAAO0H,SAAU,GAEzChG,MAAOmnB,EAEf,CACJ,KACK,EACuBjgB,EAAQsY,cAAckI,MAAM4gB,SAAW,CAC3DhqC,OAAQ,CACJgL,MAAO,EACPtD,QAAQ,GAEZhG,MAAO,IAAI8nC,KAEA9nC,MAAMkE,KAAK4mC,EAC9B,CACJ,CAER,CACA3J,YAAYj6B,GACR,IAAKA,EACD,OAAO,EAEX,MAAMohC,EAAWphC,EAAQohC,SACzB,OAAS/sC,EAAQ+sC,MAAeA,EAASpsC,aACxBK,IAAb+rC,KACGphC,EAAQsY,eAAeO,QAAQC,SAASpa,MACvClC,GAAUykC,GAAiBM,QAASvhC,EAAQsY,cAAcO,OAAOC,QAAQpa,KACrF,ECzFJ,MAAMkmC,GAAmB,IAAIzgC,IACtB,MAAM0gC,GACTpwC,YAAYyR,GACRrR,KAAK4b,QAAUvK,CACnB,CACA4+B,kBAAkBprB,EAAMmJ,GACfhuB,KAAK8tC,kBAAkBjpB,IACxBkrB,GAAiBlgC,IAAIgV,EAAMmJ,EAEnC,CACA8f,kBAAkBjpB,GACd,OAAOkrB,GAAiBpgC,IAAIkV,EAChC,CACAqrB,8BACI,OAAOH,GAAiBh2B,MAC5B,ECfG,MAAMo2B,GACTvwC,YAAYsF,EAAUC,EAAM+S,EAAM/M,GAC9BnL,KAAKkF,SAAWA,EAChBlF,KAAKmF,KAAOA,EACZnF,KAAKkY,KAAOA,EACZlY,KAAKmL,QAAUA,CACnB,CACAmQ,OAAOpW,EAAUC,GACbnF,KAAKkF,SAAWA,EAChBlF,KAAKmF,KAAOA,CAChB,ECRJ,MAAM,GAAU,IAAkB,GAAH,EAAc1G,KAAKC,GAC3C,MAAM0xC,WAA4BD,GACrCvwC,YAAYsF,EAAUC,EAAM+S,EAAM/M,GAC9B9I,MAAM6C,EAAUC,EAAM+S,EAAM/M,EAChC,CACArD,aACA,CACA8mC,iBACI,MAAMzpC,EAAOnF,KAAKmF,KAAM+S,EAAOlY,KAAKkY,KAAMhT,EAAWlF,KAAKkF,UAckEuS,EAAG/E,GAAK,CAtBvD,GAsBwDvN,EAAKC,MAtB7D,GAsB2ED,EAAKE,QAAgBgrC,EAdzF,EAACjwC,EAAGN,KACpF,MAAMwwC,EAAIvtC,IAAc,GAASwtC,EAAQ9xC,KAAK+xC,KAAM1wC,EAAIM,EAAK3B,KAAKgyC,IAAI,GAAWH,IAAKpvC,EAAI6B,IAC1F,OAAI7B,EAAI,GACGqvC,EAEFrvC,EAAI,GACFzC,KAAKC,GAAK6xC,EAEZrvC,EAAI,IACFzC,KAAKC,GAAK6xC,GAGTA,CACZ,EACuLG,CAAcj5B,EAAG/E,GAAIi+B,GAA7LJ,EAAsNF,GAA5NjwC,EAAsNqX,IAAnN3X,EAAsN4S,GAA/LjU,KAAKoC,MAAMf,EAAIrB,KAAK4B,IAAIkwC,KAtBI,GAsBoBnwC,EAAI3B,KAAK6B,IAAIiwC,KAtBjC,IAsBoLK,EAAe14B,EAAOy4B,EAAYlyC,KAAKoC,KAAKkC,KAAe4tC,EAAtS,IAACvwC,EAAGN,EAAGywC,EACnB,MAAO,CACHrrC,SAAU,CACN9E,EAAG8E,EAAS9E,EAAIwwC,EAAenyC,KAAK4B,IAAIgwC,GACxCvwC,EAAGoF,EAASpF,EAAI8wC,EAAenyC,KAAK6B,IAAI+vC,IAGpD,EC9BG,MAAMQ,GACT7C,SAAS9oC,EAAUC,EAAM+S,EAAM/M,GAC3B,OAAO,IAAIilC,GAAoBlrC,EAAUC,EAAM+S,EAAM/M,EACzD,ECDJ,IAAI2lC,GAOJ,SAASC,GAAuB7rC,EAAUwD,GACtC,OAAOxD,EAAWwD,GAAU3F,IAAc7E,EAC9C,EARA,SAAW4yC,GACPA,EAAMA,EAAe,QAAI,GAAK,UAC9BA,EAAMA,EAAgB,SAAI,GAAK,WAC/BA,EAAMA,EAAmB,YAAI,GAAK,cAClCA,EAAMA,EAAkB,WAAI,GAAK,YACpC,CALD,CAKGA,KAAUA,GAAQ,CAAC,IAIf,MAAME,WAA4Bb,GACrCvwC,YAAYsF,EAAUC,EAAM+S,EAAM/M,GAC9B9I,MAAM6C,EAAUC,EAAM+S,EAAM/M,EAChC,CACArD,aACA,CACA8mC,iBACI,MAAM12B,EAAOlY,KAAKkY,KAAMhT,EAAWlF,KAAKkF,SAAUC,EAAOnF,KAAKmF,KAC9D,GAAI+S,EACA,MAAO,CACHhT,SAAU,CACN9E,EAAG2wC,GAAuB7rC,EAAS9E,EAAG+E,EAAKC,OAC3CtF,EAAGixC,GAAuB7rC,EAASpF,EAAGqF,EAAKE,UAIlD,CACD,MAAM4rC,EAAQ9rC,EAAKC,MAAQlH,EAAMgzC,EAAQ/rC,EAAKE,OAASnH,EAAMizC,EAAO1yC,KAAKkF,MA5BvE,EA4B6EZ,KAAsB7B,E/HrBjD,G+HqBsD6B,IAAc7E,GACxH,OAAQizC,GACJ,KAAKL,GAAMM,QACP,MAAO,CACHlsC,SAAU,CACN9E,EAAG8E,EAAS9E,EAAIc,EAAI+vC,EACpBnxC,EAAGoF,EAASpF,EAAIoxC,IAG5B,KAAKJ,GAAMO,SACP,MAAO,CACHnsC,SAAU,CACN9E,EAAG8E,EAAS9E,EAAI6wC,EAChBnxC,EAAGoF,EAASpF,EAAIoB,EAAIgwC,IAGhC,KAAKJ,GAAMQ,YACP,MAAO,CACHpsC,SAAU,CACN9E,EAAG8E,EAAS9E,EAAIc,EAAI+vC,EACpBnxC,EAAGoF,EAASpF,EAAIoxC,IAG5B,KAAKJ,GAAMS,WACX,QACI,MAAO,CACHrsC,SAAU,CACN9E,EAAG8E,EAAS9E,EAAI6wC,EAChBnxC,EAAGoF,EAASpF,EAAIoB,EAAIgwC,IAIxC,CACJ,EC9DG,MAAMM,GACTxD,SAAS9oC,EAAUC,EAAM+S,EAAM/M,GAC3B,OAAO,IAAI6lC,GAAoB9rC,EAAUC,EAAM+S,EAAM/M,EACzD,ECHG,MAAMsmC,GACT7xC,cACII,KAAKoN,MAAQ,EACbpN,KAAK0xC,aAAc,EACnB1xC,KAAK+9B,SAAW,CACpB,CACA51B,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAK2Q,QACLpN,KAAKoN,MAAQ3Q,EAAK2Q,YAEA5M,IAAlB/D,EAAKshC,WACL/9B,KAAK+9B,SAAWthC,EAAKshC,eAEFv9B,IAAnB/D,EAAK0gB,YACLnd,KAAKmd,UAAY9T,GAAW,CAAC,EAAG5M,EAAK0gB,iBAEhB3c,IAArB/D,EAAKi1C,cACL1xC,KAAK0xC,YAAcj1C,EAAKi1C,aAEhC,ECrBJ,MAAMC,GAAY,QACX,MAAMC,WAAmB5K,GAC5BpnC,YAAYiX,GACRxU,MAAMwU,GACN7W,KAAK4/B,OAAS,CAClB,CACAnpB,QACA,CACA0L,OACA,CACAwQ,SAAS9jB,GACL,MAAMgI,EAAY7W,KAAK6W,WAAW,cAAE4M,GAAkB5M,EACtD,IAAKA,EAAUiC,OAAOxD,aAClB,OAEJ,MAAyCu8B,EAAzBh7B,EAAUmF,cAAsCyH,cAAckI,MAAMzO,MACpF,IAAK20B,EACD,OAEJ,MAAMC,EAAYD,EAAazkC,MAAQjP,EAAyB6B,KAAK6W,UAAUiC,OAAOxD,aAItF,GAHItV,KAAK4/B,OAASkS,IACd9xC,KAAK4/B,QAAU/wB,EAAM5K,OAErBjE,KAAK4/B,OAASkS,EACd,OAEJ,MAAMC,IAAYF,EAAaH,cAC1BjuB,EAAcC,MAAMxe,WAAalF,KAAKgyC,eAClCvuB,EAAcC,MAAMxe,UAAU9E,IAAMJ,KAAKgyC,eAAe5xC,GACrDqjB,EAAcC,MAAMxe,UAAUpF,IAAME,KAAKgyC,eAAelyC,IAC9D6jB,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAC3Cye,EACA3jB,KAAKgyC,cAAgB,IAAKruB,UAGnB3jB,KAAKgyC,cAEZD,GACAl7B,EAAUsG,UAAUgE,KAAK0wB,EAAa9T,SAAUlnB,EAAU4M,cAAcC,MAAOmuB,EAAa10B,WAEhGnd,KAAK4/B,QAAUkS,CACnB,CACApf,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe0H,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiBtY,EAAQsY,eAAeO,OACxK,OAASN,EAAMwE,UAAYxE,EAAM5a,UAAY4a,EAAMxe,UAAYyC,GAAUgqC,GAAW3tB,EAAOC,QAAQpa,OAC9F6Z,EAAM5a,UAAY4a,EAAMxe,UAAYyC,GAAUgqC,GAAW3tB,EAAOoC,QAAQvc,KACjF,CACA4hB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQ+R,QACT/R,EAAQ+R,MAAQ,IAAIu0B,IAExB,IAAK,MAAMzwC,KAAUuI,EACjB4B,EAAQ+R,MAAM/U,KAAKnH,GAAQkc,MAEnC,CACA6V,QACA,EC1DG,IAAIkf,IACX,SAAWA,GACPA,EAAe,KAAI,OACnBA,EAAqB,WAAI,aACzBA,EAAmB,SAAI,UAC1B,CAJD,CAIGA,KAAaA,GAAW,CAAC,ICH5B,MAAkB,GAAH,EAAcxzC,KAAKC,GCD3B,MAAMwzC,GACTtyC,cACII,KAAKiK,QAAS,EACdjK,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKwH,QACLjE,KAAKiE,MAAQC,EAAczH,EAAKwH,QAExC,ECbG,MAAMkuC,GACTvyC,cACII,KAAK+0B,OAAS,IAAImd,GAClBlyC,KAAKiK,QAAS,EACdjK,KAAKoyC,UAAY,IAAIF,GACrBlyC,KAAK6J,KAAOooC,GAAS3mC,SACrBtL,KAAK2V,MAAQ,EACjB,CACAxN,KAAK1L,GACGiD,EAAOjD,UAGY+D,IAAnB/D,EAAKk4B,YACL30B,KAAK20B,UAAYvK,GAAazpB,OAAOX,KAAK20B,UAAWl4B,EAAKk4B,YAE9D30B,KAAK+0B,OAAO5sB,KAAK1L,EAAKs4B,aACFv0B,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAEvBjK,KAAKoyC,UAAUjqC,KAAK1L,EAAK21C,gBACP5xC,IAAd/D,EAAKoN,OACL7J,KAAK6J,KAAOpN,EAAKoN,WAEFrJ,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQzR,EAAczH,EAAKkZ,QAExC,EC3BG,MAAM08B,GACTzyC,YAAYyR,GACRrR,KAAK4b,QAAUvK,CACnB,CACA2J,mBAAmB3O,GACf,MAAMqoB,EAAOroB,EAASqoB,MAAMzqB,QAAUoC,EAASqoB,KAAM4d,EAAiB5d,GAAQA,EAAKrpB,WAAYknC,EAAe7d,GAAQA,EAAKppB,SAC3H,MAAO,CACHmM,EAAG66B,EAAiB7zC,KAAK4B,IAAIq0B,EAAKx0B,YAASM,EAC3CkX,EAAG66B,EAAe9zC,KAAK6B,IAAIo0B,EAAKx0B,YAASM,EAEjD,CACA2hB,KAAK9V,IHVF,SAAsBgF,EAAQhF,GACjC,MAAMmmC,EAAUnmC,EAASlB,QAAQupB,KACjC,GAAK8d,GAASvoC,OAiBd,GAPAoC,EAASqoB,KAAO,CACZzqB,OAAQuoC,EAAQvoC,OAChBoB,WAAYmnC,EAAQ3oC,OAASooC,GAAS5mC,YAAcmnC,EAAQ3oC,OAASooC,GAASQ,KAC9EnnC,SAAUknC,EAAQ3oC,OAASooC,GAAS3mC,UAAYknC,EAAQ3oC,OAASooC,GAASQ,KAC1EvyC,MAAO6C,IAAc,GACrB4S,MAAO3R,EAAcwuC,EAAQ78B,OAlBqB,KAoBlD68B,EAAQ7d,UACRtoB,EAASsoB,UAAYxiB,GAAgBd,EAAQmhC,EAAQ7d,gBAEpD,GAAI6d,EAAQzd,OAAO9qB,QAAUuoC,EAAQJ,UAAUnoC,OAAQ,CACxD,MAAMyoC,EAAY3vC,KAAe7E,EAAOsS,GAAUukB,OAASvkB,GAAU4hC,UACrE/lC,EAASqoB,KAAKE,MAAQ,CAClBtU,KAAMoyB,EACNzuC,MAAOD,EAAc0uC,IAAcliC,GAAUukB,OAASyd,EAAQzd,OAAO9wB,MAAQuuC,EAAQJ,UAAUnuC,OAEvG,MACSuuC,EAAQzd,OAAO9qB,OACpBoC,EAASqoB,KAAKE,MAAQ,CAClBtU,KAAM9P,GAAUukB,OAChB9wB,MAAOD,EAAcwuC,EAAQzd,OAAO9wB,QAGnCuuC,EAAQJ,UAAUnoC,SACvBoC,EAASqoB,KAAKE,MAAQ,CAClBtU,KAAM9P,GAAU4hC,UAChBnuC,MAAOD,EAAcwuC,EAAQJ,UAAUnuC,cAnC3CoI,EAASqoB,KAAO,CACZzqB,QAAQ,EACRoB,YAAY,EACZC,UAAU,EACVpL,MAAO,EACPyV,MAAO,EAiCnB,CG9BQmiB,CAAa93B,KAAK4b,QAASvP,EAC/B,CACAqmB,UAAUrmB,GACN,MAAMqoB,EAAOroB,EAASlB,QAAQupB,KAC9B,OAAQroB,EAASyC,YAAczC,EAAS+S,YAAcsV,GAAMzqB,MAChE,CACAumB,YAAYrlB,KAAY5B,GACf4B,EAAQupB,OACTvpB,EAAQupB,KAAO,IAAIyd,IAEvB,IAAK,MAAMnxC,KAAUuI,EACjB4B,EAAQupB,KAAKvsB,KAAKnH,GAAQ0zB,KAElC,CACA2I,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IHgBrB,SAAoBA,EAAUwC,GACjC,MAAM6lB,EAAOroB,EAASlB,QAAQupB,KAAMj4B,EAAO4P,EAASqoB,KACpD,IAAKj4B,IAASi4B,GAAMzqB,OAChB,OAEJ,MAAM0L,EAAQlZ,EAAKkZ,MAAQ9G,EAAMzH,OAAQ/D,EAAM,GAC/C5G,EAAKyD,OAASyV,EACVlZ,EAAKyD,MAAQmD,IACb5G,EAAKyD,OAASmD,EAEtB,CGvBQsvC,CAAWtmC,EAAUwC,EACzB,EChCJ,MAAyH,GAA9F,EAAyGpQ,KAAKC,GA+BlI,SAAS0e,GAAK/Q,EAAU8nB,EAAa0K,EAAW1R,EAAUyR,EAAW/vB,IAsDrE,SAAmBxC,EAAUwC,GAChC,MAAMkoB,EAAmB1qB,EAASlB,QAASusB,EAAcX,EAAiB3Z,KAAKwR,KAC/E,IADmG8I,EAAYztB,OAE3G,OAEJ,GAAIoC,EAASmqB,cAAgBnqB,EAASsrB,UAElC,YADAtrB,EAASmqB,cAAgB3nB,EAAM5K,OAGnC,MAAM2qB,EAAOviB,EAAS0pB,eAAeiY,SAAS3hC,EAAUwC,GACpD+f,GACAviB,EAASlF,SAAShG,MAAMytB,GAExB8I,EAAY10B,QACZqJ,EAASlF,SAAS/G,EAAI4C,EAAMqJ,EAASlF,SAAS/G,GAnGI,KAoGlDiM,EAASlF,SAASrH,EAAIkD,EAAMqJ,EAASlF,SAASrH,GApGI,MAsGtDuM,EAASmqB,cAAgBnqB,EAASsrB,SACtC,CAvEIib,CAAUvmC,EAAUwC,GACpB,MAAMgkC,EAAiBxmC,EAASsiB,QAASmkB,EAAgBD,GAAgB5oC,QAAU4oC,EAAe/kB,SAjC5C,IAkClD8Q,GAAaC,IACbxyB,EAASlF,SAAS/G,GAAMw+B,EAAY/vB,EAAMzH,QAnC6B,GAmCAy3B,IAEvEgU,GAAgB5oC,QAAU40B,IAC1BxyB,EAASlF,SAASrH,GACbgzC,GAAiBD,EAAehlB,aAAehf,EAAMzH,SAvCa,GAuCiBy3B,IAE5F,MAAMpxB,EAAQpB,EAAS2rB,UACvB3rB,EAASlF,SAAStF,OAAO4L,GACzB,MAAMtG,EAAWkF,EAASlF,SAASvF,KAAKi9B,GACpCgU,GAAgB5oC,QAChBkjB,EA7CoC,KA8CjC0lB,EAAe/kB,SAAW3mB,EAASrH,GA9CF,GA8CsBqH,EAASrH,GAAKqtB,GACnE0lB,EAAe/kB,SAAW3mB,EAASrH,GA/CJ,GA+CwBqH,EAASrH,IAAMqtB,KAC3EhmB,EAASrH,EAAIgzC,EAAgB3lB,EACzB0R,IACAxyB,EAASlF,SAASrH,EAAIqH,EAASrH,EAAI++B,IAG3C,MAAMtf,EAAgBlT,EAASlB,QAAQ4E,OAAQgjC,GArDO,EAqDuB1mC,EAASmT,eAAiBD,EAAcwQ,aACrH5oB,EAAStF,OAAOkxC,GAChB,MAAM,SAAE7tC,GAAamH,EACrBnH,EAAS/D,MAAMgG,GACXgtB,EAAYnF,UACZ9pB,EAAS9E,GAAK3B,KAAK6B,IAAI4E,EAAS9E,EAAI3B,KAAK4B,IAAI6E,EAASpF,IACtDoF,EAASpF,GAAKrB,KAAK4B,IAAI6E,EAASpF,EAAIrB,KAAK6B,IAAI4E,EAAS9E,IAE9D,CC3DO,MAAM4yC,GACT7wB,KAAK9V,GACD,MAAkCwmC,EAAlBxmC,EAASlB,QAAkCiS,KAAKuR,QAChEtiB,EAASsiB,QAAU,CACf1kB,OAAQ4oC,EAAe5oC,OACvB4jB,aAAc7pB,EAAc6uC,EAAehlB,cAC3CC,QAAS+kB,EAAe/kB,SDmG7B,SAAkBzhB,GACrB,MAAMwK,EAAYxK,EAASwK,UAAuCo8B,EAAlB5mC,EAASlB,QAA+BiS,KAAK0R,KAC7F,IAAKmkB,EAAYhpC,OACb,OAEJ,MAAMipC,EAAUD,EAAY/tC,UAAY,CAAE9E,EAAG,GAAIN,EAAG,IAAyBqzC,EAAa,CACtF/yC,EADmE,IAChE8yC,EAAQ9yC,EAAiByW,EAAU+C,OAAOzU,KAAKC,MAClDtF,EAFmE,IAEhEozC,EAAQpzC,EAAiB+W,EAAU+C,OAAOzU,KAAKE,QACrBb,EAAWC,EAAnC4H,EAAStB,cAA2CooC,GAAaC,EAAmBpvC,EAAcivC,EAAYplB,cACvHxhB,EAASyM,OAAOs6B,iBAAmBA,EAAmBv8B,EAAUiC,OAAOD,WACvExM,EAASyiB,KAAO,CACZN,OAAQ2kB,EACRvqC,UAAWyD,EAASlF,SAAS/G,GAvHO,EAuHY8mC,GAAgByB,UAAYzB,GAAgB0B,iBAC5F1oC,MAAO6C,IAAc,GACrB4F,OAAQnE,EACRqpB,aAAcxhB,EAASyM,OAAOs6B,iBAEtC,CClHQC,CAAShnC,EACb,CACAqmB,UAAUrmB,GACN,OAAQA,EAASyC,WAAazC,EAASlB,QAAQiS,KAAKnT,MACxD,CACAmT,KAAK/Q,EAAUwC,GACX,MAAMykC,EAAkBjnC,EAASlB,QAASgpB,EAAcmf,EAAgBl2B,KACxE,IAAK+W,EAAYlqB,OACb,OAEJ,MAAM4M,EAAYxK,EAASwK,UAAW9J,EAAU8J,EAAUiC,OAAOD,WACjExM,EAASyM,OAAO+lB,YAAc76B,EAAcmwB,EAAYxe,OAAS5I,EACjEV,EAASyM,OAAO8lB,YAAc56B,EAAcqI,EAASlB,QAAQiS,KAAKsR,OAAS3hB,EAC3E,MAAMwmC,EDiFP,SAAiClnC,GACpC,OAAOA,EAASypB,KAAKD,QAAUxpB,EAASypB,KAAK1uB,OAzGS,CA0G1D,CCnF2BosC,CAAwBnnC,GAAWonC,EAAYpnC,EAASyM,OAAO+lB,UAAYhoB,EAAUiC,OAAOxD,aAAcspB,EAAYvyB,EAASyM,OAAO8lB,UAAW8U,EAAU5vC,EAAYwvC,EAAgBnuC,KAAKlB,OAAS8I,EAA+I8xB,EAAa4U,GAAtItf,EAAYhvB,KAAOkH,EAASrB,YAAc0oC,EAtBtP,GAsB2WH,GAA1E1kC,EAAMzH,QAtB/Q,GAA/C,EAsB0a+lB,EAAW9gB,EAASyM,OAAOqU,UAAYtW,EAAUiC,OAAOqU,SACzegH,EAAYrF,KAAK7kB,ODsCtB,SAAcoC,EAAUwyB,GAC3B,MAAMhoB,EAAYxK,EAASwK,UAC3B,IAAKxK,EAASyiB,KACV,OAEJ,MAAM6kB,EAAgBtnC,EAASyiB,KAAKlmB,YAAcs+B,GAAgByB,UAAWK,EAAa,CACtF5oC,EAAGuzC,EAAgBl1C,KAAK4B,IAAM5B,KAAK6B,IACnCR,EAAG6zC,EAAgBl1C,KAAK6B,IAAM7B,KAAK4B,KAEvCgM,EAASnH,SAAS9E,EAAIiM,EAASyiB,KAAKN,OAAOpuB,EAAIiM,EAASyiB,KAAKnmB,OAASqgC,EAAW5oC,EAAEiM,EAASyiB,KAAK5uB,OACjGmM,EAASnH,SAASpF,EAAIuM,EAASyiB,KAAKN,OAAO1uB,EAAIuM,EAASyiB,KAAKnmB,OAASqgC,EAAWlpC,EAAEuM,EAASyiB,KAAK5uB,OACjGmM,EAASyiB,KAAKnmB,QAAU0D,EAASyiB,KAAKjB,aACtC,MAAM+lB,EAAgBn1C,KAAK4E,IAAIwT,EAAU+C,OAAOzU,KAAKC,MAAOyR,EAAU+C,OAAOzU,KAAKE,QAASwuC,EA1ElF,GA0EgGD,EACrGvnC,EAASyiB,KAAKnmB,OAASkrC,GACvBxnC,EAASyiB,KAAKnmB,OAASkrC,EACvBxnC,EAASyiB,KAAKjB,eA7EoC,GA+E7CxhB,EAASyiB,KAAKnmB,OA/EwE,IAgF3F0D,EAASyiB,KAAKnmB,OAhF6E,EAiF3F0D,EAASyiB,KAAKjB,eAjFoC,GAmFtDxhB,EAASyiB,KAAK5uB,OAnFiG,IAmFxF2+B,GAnF+B,EAmFMxyB,EAASyiB,KAAKnmB,OAASirC,EACvF,CC3DY9kB,CAAKziB,EAAUwyB,GAGfzhB,GAAK/Q,EAAU8nB,EAAa0K,EAAW1R,EAAUyR,EAAW/vB,GD3BjE,SAAuBxC,GAC1B,MAAM8oB,EAAkB9oB,EAAS8oB,iBAAiB,GAAE7wB,EAAE,GAAEC,GAAOJ,EAAagxB,EAAiB9oB,EAASnH,UAAW4uC,EAAUr1C,KAAK86B,IAAIj1B,GAAKyvC,EAAUt1C,KAAK86B,IAAIh1B,IAAK,YAAEoyB,GAAgBtqB,EAASyM,OAAQk7B,EAAYrd,EAAYtrB,WAAY4oC,EAAYtd,EAAYrrB,SAChQ,IAAK0oC,IAAcC,EACf,OAGJ,IADsBD,GAAaF,GAAWE,GAAqCC,GAAaF,GAAWE,KACpE5nC,EAASqqB,UAC5CrqB,EAASqqB,YAAesd,GAAaF,EAAUE,KAAiBC,GAAaF,EAAUE,EACnFD,IACA3nC,EAASlF,SAAS/G,EAVjB,GAUqBiM,EAASlF,SAASrH,EAAWuM,EAASlF,SAAS/G,GAErE6zC,IACA5nC,EAASlF,SAASrH,EAbjB,GAaqBuM,EAASlF,SAAS/G,EAAWiM,EAASlF,SAASrH,QAGxE,KAAMk0C,GAAaF,EAAUE,MAAgBC,GAAaF,EAAUE,IAAc5nC,EAASqqB,UAC5FrqB,EAASqqB,WAAY,OAEpB,GAAIrqB,EAASqqB,UAAW,CACzB,MAAMvf,EAAM9K,EAASnH,SAAUgvC,EAAM7nC,EAASlF,SAC1C6sC,IACE78B,EAAI/W,EAAI+0B,EAAgB/0B,GAAK8zC,EAAI9zC,EAtBH,GAsBwB+W,EAAI/W,EAAI+0B,EAAgB/0B,GAAK8zC,EAAI9zC,EAtBzD,KAuBhC8zC,EAAI9zC,IAAM2C,KAEVkxC,IACE98B,EAAIrX,EAAIq1B,EAAgBr1B,GAAKo0C,EAAIp0C,EA1BH,GA0BwBqX,EAAIrX,EAAIq1B,EAAgBr1B,GAAKo0C,EAAIp0C,EA1BzD,KA2BhCo0C,EAAIp0C,IAAMiD,IAElB,CACJ,CCAQoxC,CAAc9nC,EAClB,EChCJ,MAAkB,GAAH,EAAc5N,KAAKC,GAA2BgC,GAAc,EAAdA,GAAoB,ECG1E,MAAM0zC,GACTx0C,cACII,KAAK+kC,WAAa,CAAC,SACvB,CACAnsB,KAAKnc,IDNF,SAAoBA,GACvB,MAAM,QAAEyZ,EAAO,SAAE7J,EAAQ,OAAE1D,GAAWlM,EACjC4P,EAASgoC,cACVhoC,EAASgoC,YAAc,CAAEjxC,IAJyB,EAIVC,IAAK,KAEjD,MAAMgxC,EAAchoC,EAASgoC,YAC7Bn+B,EAAQozB,IAAI5oC,GAAUA,GAAUiI,EAAQ0rC,EAAYjxC,IAAKixC,EAAYhxC,KAAK,EAC9E,CCAQixC,CAAW73C,EACf,CACAi8B,gBACI,OATM,EAUV,CACAG,aAAahiB,EAAWxK,GACpB,MAAsCnM,EAApBmM,EAASmrB,WAA8Bt3B,OAAS,CAC9DmD,IAbiB,IAcjBD,IAdiC,GAgBrCiJ,EAASgoC,YAAe90C,EAASW,GAK3B,CAAEkD,IAAKsB,EAASxE,EAAMkD,KAAMC,IAAKqB,EAASxE,EAAMmD,MAJhD,CACED,IAlB6B,EAmB7BC,IAAKqB,EAASxE,GAG1B,ECvBG,MAAMq0C,GACT30C,YAAYiX,EAAWxF,GACnBrR,KAAKsrB,WAAazU,EAClB7W,KAAK4b,QAAUvK,CACnB,CACA8Q,KAAK9V,GACD,MAAM0I,EAAW5C,GAAgBnS,KAAK4b,QAASvP,EAASlB,QAAQ0G,MAAOxF,EAAS+pB,GAAI/pB,EAASlB,QAAQilB,kBACjGrb,IACA1I,EAASwF,MAAQwD,GAAuBN,EAAU1I,EAASlB,QAAQ0G,MAAM3E,UAAWlN,KAAKsrB,WAAWxS,OAAOxD,cAEnH,CACAod,UAAUrmB,GACN,MAAQsG,EAAG6hC,EAAY3hC,EAAG4hC,EAAY7hC,EAAG8hC,GAAeroC,EAASlB,QAAQ0G,MAAM3E,WAAW,MAAE2E,GAAUxF,EACtG,OAASA,EAASyC,YACbzC,EAAS+S,gBACW5e,IAAnBqR,GAAOc,EAAE1O,OAAuBuwC,EAAWvqC,aACrBzJ,IAAnBqR,GAAOgB,EAAE5O,OAAuBwwC,EAAWxqC,aACxBzJ,IAAnBqR,GAAOe,EAAE3O,OAAuBywC,EAAWzqC,OACxD,CACAozB,OAAOhxB,EAAUwC,GACbkH,GAAY1J,EAASwF,MAAOhD,EAChC,ECtBJ,IAAI8lC,IACJ,SAAWA,GACPA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,GACrC,CALD,CAKGA,KAAeA,GAAa,CAAC,IAChC,MAAMC,GAAoB,6CAA8CC,GAAW,yDAC5E,MAAMC,GACTl1C,cACII,KAAKyJ,IAAM,MACXzJ,KAAK0R,aAAe,GACxB,CACAQ,YAAYL,GACR,OAAO7R,KAAK+0C,aAAaljC,EAAM5N,MACnC,CACA8N,iBAAiBF,GACb,OAAO7R,KAAK+0C,aAAaljC,EAAM5N,MACnC,CACA0N,YAAYlM,GACR,OAAOzF,KAAK+0C,aAAatvC,EAC7B,CACAsvC,aAAaC,GACT,GAAwB,iBAAbA,EACP,OAEJ,IAAKA,GAAUvjC,WAAWzR,KAAK0R,cAC3B,OAEJ,MAAMujC,EAAWD,EAASnJ,QAAQ+I,IAAmB,CAACrmC,EAAG1K,EAAG2O,EAAGE,EAAG+E,IACvD5T,EAAIA,EAAI2O,EAAIA,EAAIE,EAAIA,QAAWlS,IAANiX,EAAkBA,EAAIA,EAAI,MAC1D7H,EAASilC,GAASK,KAAKD,GAC3B,OAAOrlC,EACD,CACE6H,OAA4BjX,IAAzBoP,EAAO+kC,GAAWl9B,GACf09B,SAASvlC,EAAO+kC,GAAWl9B,GA5BuG,IAAoC,IAAjB,EA8B3J/E,EAAGyiC,SAASvlC,EAAO+kC,GAAWjiC,GA9B0G,IA+BxIF,EAAG2iC,SAASvlC,EAAO+kC,GAAWniC,GA/B0G,IAgCxI3O,EAAGsxC,SAASvlC,EAAO+kC,GAAW9wC,GAhC0G,UAkC1IrD,CACV,ECzCJ,IAAI40C,IACJ,SAAWA,GACPA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,GACrC,CALD,CAKGA,KAAeA,GAAa,CAAC,IACzB,MAAMC,GACTz1C,cACII,KAAKyJ,IAAM,MACXzJ,KAAK0R,aAAe,KACxB,CACAQ,YAAYL,GACR,MAAgCkD,EAAblD,EAAM5N,MAA6B8O,KAAOlB,EAAM5N,MACnE,QAAmBzD,IAAfuU,EAASpC,QAAkCnS,IAAfuU,EAASlC,QAAkCrS,IAAfuU,EAASnC,EACjE,OAAOE,GAASiC,EAExB,CACAhD,iBAAiBF,GACb,MAAgCkD,EAAblD,EAAM5N,MAA6B8O,KAAOlB,EAAM5N,MACnE,QAAmBzD,IAAfuU,EAASpC,QAAkCnS,IAAfuU,EAASnC,EACrC,OAAOE,GAAS,CACZH,EAAG3O,EAAc+Q,EAASpC,GAC1BC,EAAG5O,EAAc+Q,EAASnC,GAC1BC,EAAG7O,EAAc+Q,EAASlC,IAGtC,CACAlB,YAAYlM,GACR,IAAKA,EAAMgM,WAAW,OAClB,OAEJ,MAA+G7B,EAAjG,gGAAgHslC,KAAKzvC,GACnI,OAAOmK,EtHyFR,SAAoB0lC,GACvB,MAAMC,EAAYziC,GAASwiC,GAC3B,MAAO,CACH79B,EAAG69B,EAAK79B,EACR/E,EAAG6iC,EAAU7iC,EACbF,EAAG+iC,EAAU/iC,EACb3O,EAAG0xC,EAAU1xC,EAErB,CsHhGc2xC,CAAW,CACT/9B,EAAG7H,EAAOzP,OAHqI,EAGhHqF,GAAWoK,EAAOwlC,GAAW39B,IAHqG,EAIjK9E,EAAGwiC,SAASvlC,EAAOwlC,GAAWziC,GAJ8I,IAK5KC,EAAGuiC,SAASvlC,EAAOwlC,GAAWxiC,GAL8I,IAM5KC,EAAGsiC,SAASvlC,EAAOwlC,GAAWviC,GAN8I,WAQ9KrS,CACV,ECzCG,MAAMi1C,GACT71C,YAAYiX,GACR7W,KAAK6W,UAAYA,CACrB,CACAsL,KAAK9V,GACD,MAAMqpC,EAAiBrpC,EAASlB,QAAQ6I,QACxC3H,EAAS2H,QAAUlH,GAAkC4oC,EADM,GAE3D,MAAMC,EAAmBD,EAAexoC,UACpCyoC,EAAiB1rC,SACjBoC,EAAS2H,QAAQ7M,SACZnD,EAAc2xC,EAAiBhgC,OAAS,EAAsB3V,KAAK6W,UAAUiC,OAAOxD,aACpFqgC,EAAiB//B,OAClBvJ,EAAS2H,QAAQ7M,UAAYpE,KAGzC,CACA2vB,UAAUrmB,GAEN,OAASA,EAASyC,YACbzC,EAAS+S,YACR/S,EAAS2H,SACX3H,EAAS2H,QAAQ/J,UACfoC,EAAS2H,QAAQ1G,UALV,QAMHjB,EAAS2H,QAAQ1G,UANd,OAOAjB,EAAS2H,QAAQ3G,OAPjB,IAOmChB,EAAS2H,QAAQ1G,UAPpD,GAQjB,CACAylB,MAAM1mB,GACEA,EAAS2H,UACT3H,EAAS2H,QAAQxG,KAAO,EACxBnB,EAAS2H,QAAQ3G,MAAQ,EAEjC,CACAgwB,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IAAcA,EAAS2H,SAG3CtF,GAAgBrC,EAAUA,EAAS2H,SAAS,EAAM3H,EAASlB,QAAQ6I,QAAQ9G,UAAU+B,QAASJ,EAClG,ECpCG,MAAM+mC,GACTh2C,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAK2rB,MAAQ,CACT5a,GAAQ3F,OACR2F,GAAQ85B,MAEhB,CACAxN,OAAOhxB,EAAUzD,EAAWiG,EAAOokB,GAC/B,IAAKjzB,KAAK2rB,MAAM8jB,SAASxc,GACrB,OAEJ,MAAMpc,EAAY7W,KAAK6W,UACvB,IAAIwR,GAAU,EACd,IAAK,MAAMjN,KAAUvE,EAAUqK,QAAQ1P,SAInC,QAH8BhR,IAA1B4a,EAAOy6B,iBACPxtB,EAAUjN,EAAOy6B,eAAexpC,EAAUwC,EAAOjG,IAEjDyf,EACA,MAGR,GAAIA,EACA,OAEJ,MAAMlR,EAAM9K,EAAStB,cAAerC,EAAS2D,EAAS3D,OAAQvD,EAAOkH,EAASrB,YAAanC,EAASO,GAAgB+N,EAAKhS,GAAOkJ,EAAawI,EAAU+C,OAAOzU,MCzB/J,SAA0B1I,GAC7B,GAAKA,EAAKw2B,UAAYliB,GAAQ3F,QAAU3O,EAAKw2B,UAAYliB,GAAQ85B,OAC5DpuC,EAAKmM,YAAc7C,GAAiBkD,MAAQxM,EAAKmM,YAAc7C,GAAiBmD,MACjF,OAEAzM,EAAKoM,OAAOK,MANe,GAMMzM,EAAKmM,YAAc7C,GAAiBkD,KACrExM,EAAK4P,SAASnH,SAAS9E,EAAI3D,EAAK0I,KAAO1I,EAAKiM,OAAOtI,EAE9C3D,EAAKoM,OAAOI,KAAOxM,EAAK4R,WAAWjJ,OAAS3I,EAAKmM,YAAc7C,GAAiBmD,QACrFzM,EAAK4P,SAASnH,SAAS9E,EAAI3D,EAAK4R,WAAWjJ,MAAQ3I,EAAK0I,KAAO1I,EAAKiM,OAAOtI,GAE/E,MAAM+G,EAAW1K,EAAK4P,SAASlF,SAAS/G,EACxC,IAAI0G,GAAU,EACd,GAAKrK,EAAKmM,YAAc7C,GAAiBmD,OACrCzM,EAAKoM,OAAOK,OAASzM,EAAK4R,WAAWjJ,OACrC+B,EAhBY,GAiBX1K,EAAKmM,YAAc7C,GAAiBkD,MAAQxM,EAAKoM,OAAOI,MAjB9B,GAiBmD9B,EAjBlE,EAiB2F,CACvG,MAAM2uC,EAAc9xC,EAAcvH,EAAK4P,SAASlB,QAAQC,OAAOC,WAAWpH,OAC1ExH,EAAK4P,SAASlF,SAAS/G,IAAM01C,EAC7BhvC,GAAU,CACd,CACA,IAAKA,EACD,OAEJ,MAAMivC,EAASt5C,EAAKiM,OAAOtI,EAAI3D,EAAK0I,KAChC1I,EAAKoM,OAAOK,OAASzM,EAAK4R,WAAWjJ,OAAS3I,EAAKmM,YAAc7C,GAAiBmD,MAClFzM,EAAK4P,SAASnH,SAAS9E,EAAI3D,EAAK4R,WAAWjJ,MAAQ2wC,EAE9Ct5C,EAAKoM,OAAOI,MA7BU,GA6BWxM,EAAKmM,YAAc7C,GAAiBkD,OAC1ExM,EAAK4P,SAASnH,SAAS9E,EAAI21C,GAE3Bt5C,EAAKw2B,UAAYliB,GAAQ85B,OACzBpuC,EAAK4P,SAAS4C,SAEtB,CDRQ+mC,CAAiB,CAAE3pC,WAAU4mB,UAASrqB,YAAWC,SAAQwF,aAAY3F,SAAQvD,SCS9E,SAAwB1I,GAC3B,GAAKA,EAAKw2B,UAAYliB,GAAQ3F,QAAU3O,EAAKw2B,UAAYliB,GAAQ85B,OAC5DpuC,EAAKmM,YAAc7C,GAAiBgD,QAAUtM,EAAKmM,YAAc7C,GAAiBiD,IACnF,OAEAvM,EAAKoM,OAAOE,OAzCe,GAyCOtM,EAAKmM,YAAc7C,GAAiBiD,IACtEvM,EAAK4P,SAASnH,SAASpF,EAAIrD,EAAK0I,KAAO1I,EAAKiM,OAAO5I,EAE9CrD,EAAKoM,OAAOG,IAAMvM,EAAK4R,WAAWhJ,QAAU5I,EAAKmM,YAAc7C,GAAiBgD,SACrFtM,EAAK4P,SAASnH,SAASpF,EAAIrD,EAAK4R,WAAWhJ,OAAS5I,EAAK0I,KAAO1I,EAAKiM,OAAO5I,GAEhF,MAAMqH,EAAW1K,EAAK4P,SAASlF,SAASrH,EACxC,IAAIgH,GAAU,EACd,GAAKrK,EAAKmM,YAAc7C,GAAiBgD,QACrCtM,EAAKoM,OAAOE,QAAUtM,EAAK4R,WAAWhJ,QACtC8B,EAnDY,GAoDX1K,EAAKmM,YAAc7C,GAAiBiD,KAAOvM,EAAKoM,OAAOG,KApD7B,GAoDiD7B,EApDhE,EAoDyF,CACrG,MAAM2uC,EAAc9xC,EAAcvH,EAAK4P,SAASlB,QAAQC,OAAOE,SAASrH,OACxExH,EAAK4P,SAASlF,SAASrH,IAAMg2C,EAC7BhvC,GAAU,CACd,CACA,IAAKA,EACD,OAEJ,MAAMivC,EAASt5C,EAAKiM,OAAO5I,EAAIrD,EAAK0I,KAChC1I,EAAKoM,OAAOE,QAAUtM,EAAK4R,WAAWhJ,QAAU5I,EAAKmM,YAAc7C,GAAiBgD,OACpFtM,EAAK4P,SAASnH,SAASpF,EAAIrD,EAAK4R,WAAWhJ,OAAS0wC,EAE/Ct5C,EAAKoM,OAAOG,KAhEU,GAgEUvM,EAAKmM,YAAc7C,GAAiBiD,MACzEvM,EAAK4P,SAASnH,SAASpF,EAAIi2C,GAE3Bt5C,EAAKw2B,UAAYliB,GAAQ85B,OACzBpuC,EAAK4P,SAAS4C,SAEtB,CD1CQgnC,CAAe,CAAE5pC,WAAU4mB,UAASrqB,YAAWC,SAAQwF,aAAY3F,SAAQvD,QAC/E,EE5BG,MAAM+wC,GACTt2C,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAK2rB,MAAQ,CAAC5a,GAAQ9B,QAC1B,CACAouB,OAAOhxB,EAAUzD,EAAWutC,EAAQljB,GAChC,IAAKjzB,KAAK2rB,MAAM8jB,SAASxc,GACrB,OAEJ,MAAMpc,EAAY7W,KAAK6W,UACvB,OAAQxK,EAASqpB,SACb,KAAKxkB,GAAgB0lB,OACrB,KAAK1lB,GAAgBkjB,QACjB,GAAI5rB,GAAc6D,EAASnH,SAAU2R,EAAU+C,OAAOzU,KAAM/C,EAAO1B,OAAQ2L,EAASrB,YAAapC,GAC7F,OAEJ,MACJ,KAAKsI,GAAgBpI,OAAQ,CACzB,MAAM,GAAExE,EAAE,GAAEC,GAAOJ,EAAakI,EAASnH,SAAUmH,EAAS+oB,aAAeh1B,EAAGg2C,EAAIt2C,EAAGu2C,GAAOhqC,EAASlF,SACrG,GAAKivC,EApBD,GAoBqB9xC,EAAK+H,EAAS+oB,WAAWzsB,QAC7C0tC,EArBD,GAqBqB9xC,EAAK8H,EAAS+oB,WAAWzsB,QAC7CytC,GAtBD,GAsBsB9xC,GAAM+H,EAAS+oB,WAAWzsB,QAC/C0tC,GAvBD,GAuBsB9xC,GAAM8H,EAAS+oB,WAAWzsB,OAChD,OAEJ,KACJ,EAEJkO,EAAUsG,UAAU+B,OAAO7S,EAAUA,EAASgkB,OAAO,EACzD,EC7BG,MAAMimB,GACT12C,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAK2rB,MAAQ,CAAC5a,GAAQ0d,KAC1B,CACA4O,OAAOhxB,EAAUzD,EAAWiG,EAAOokB,GAC/B,IAAKjzB,KAAK2rB,MAAM8jB,SAASxc,GACrB,OAEJ,IAAK5mB,EAASlB,QAAQiS,KAAK5Y,SAAS6G,aAC/BzC,IAAc7C,GAAiBkD,MAAQL,IAAc7C,GAAiBmD,UACtEmD,EAASlB,QAAQiS,KAAK5Y,SAAS8G,WAC3B1C,IAAc7C,GAAiBiD,KAAOJ,IAAc7C,GAAiBgD,SAC1E,OAEJ,MAAM8pC,EAAiBxmC,EAASlB,QAAQiS,KAAKuR,QAAS9X,EAAY7W,KAAK6W,UAAWxI,EAAawI,EAAU+C,OAAOzU,KAAMoxC,EAAUlqC,EAASrB,YACzI,GAAK6nC,EAAe5oC,OAWf,CACD,MAAM/E,EAAWmH,EAASnH,WACpB2tC,EAAe/kB,SACjB5oB,EAASpF,EAAIuO,EAAWhJ,OAASkxC,GACjC3tC,IAAc7C,GAAiBgD,QAC9B8pC,EAAe/kB,SAAW5oB,EAASpF,GAAKy2C,GAAW3tC,IAAc7C,GAAiBiD,MACnF6N,EAAUsG,UAAU+B,OAAO7S,EAEnC,KAnB4B,CACxB,GAAKA,EAASlF,SAASrH,EAlBf,GAkBkCuM,EAASnH,SAASpF,GAAKuO,EAAWhJ,OAASkxC,GAChFlqC,EAASlF,SAASrH,EAnBf,GAmBkCuM,EAASnH,SAASpF,IAAMy2C,GAC7DlqC,EAASlF,SAAS/G,EApBf,GAoBkCiM,EAASnH,SAAS9E,GAAKiO,EAAWjJ,MAAQmxC,GAC/ElqC,EAASlF,SAAS/G,EArBf,GAqBkCiM,EAASnH,SAAS9E,IAAMm2C,EAC9D,OAEC/tC,GAAc6D,EAASnH,SAAU2R,EAAU+C,OAAOzU,KAAM/C,EAAO1B,OAAQ61C,EAAS3tC,IACjFiO,EAAUsG,UAAU+B,OAAO7S,EAEnC,CAUJ,ECpCG,MAAMmqC,GACT52C,YAAYiX,GACR7W,KAAK6W,UAAYA,EACjB7W,KAAK2rB,MAAQ,CAAC5a,GAAQqd,IAC1B,CACAiP,OAAOhxB,EAAUzD,EAAWiG,EAAOokB,GAC/B,IAAKjzB,KAAK2rB,MAAM8jB,SAASxc,GACrB,OAEJ,MAAMpc,EAAY7W,KAAK6W,UACvB,OAAQxK,EAASqpB,SACb,KAAKxkB,GAAgBpI,OAAQ,CACzB,MAAQ1I,EAAGg2C,EAAIt2C,EAAGu2C,GAAOhqC,EAASlF,SAC5BsvC,EAAUr0C,EAAO1B,OACvB+1C,EAAQt2C,OAASkM,EAAS+oB,WAAWzsB,OACrC8tC,EAAQv2C,MAAQmM,EAASlF,SAASjH,MAAQzB,KAAKC,GAC/C+3C,EAAQt1C,MAAMiB,EAAOzB,OAAO0L,EAAS+oB,aACrC,MAAM,GAAE9wB,EAAE,GAAEC,GAAOJ,EAAakI,EAASnH,SAAUuxC,GACnD,GAAKL,GAnBD,GAmBsB9xC,GAnBL,GAoBhB+xC,GApBD,GAoBsB9xC,GApBL,GAqBhB6xC,GArBD,GAqBsB9xC,GArBL,GAsBhB+xC,GAtBD,GAsBsB9xC,GAtBL,EAuBjB,OAEJ8H,EAASnH,SAAS9E,EAAI3B,KAAKkF,MAAMC,EAAc,CAC3CR,IAAK,EACLC,IAAKwT,EAAU+C,OAAOzU,KAAKC,SAE/BiH,EAASnH,SAASpF,EAAIrB,KAAKkF,MAAMC,EAAc,CAC3CR,IAAK,EACLC,IAAKwT,EAAU+C,OAAOzU,KAAKE,UAE/B,MAAQf,GAAIoyC,EAAOnyC,GAAIoyC,GAAUxyC,EAAakI,EAASnH,SAAUmH,EAAS+oB,YAC1E/oB,EAASzD,UAAYnK,KAAKmC,OAAO+1C,GAAQD,GACzCrqC,EAASlF,SAASjH,MAAQmM,EAASzD,UACnC,KACJ,CACA,QACI,GAAIJ,GAAc6D,EAASnH,SAAU2R,EAAU+C,OAAOzU,KAAM/C,EAAO1B,OAAQ2L,EAASrB,YAAapC,GAC7F,OAEJ,OAAQyD,EAASqpB,SACb,KAAKxkB,GAAgBkjB,QAAS,CAC1B/nB,EAASnH,SAAS9E,EACd3B,KAAKkF,MAAMC,EAAc,CACrBR,KAAMiJ,EAAS+oB,WAAWzsB,OAC1BtF,IAAKgJ,EAAS+oB,WAAWzsB,UACvB0D,EAAS+oB,WAAWh1B,EAC9BiM,EAASnH,SAASpF,EACdrB,KAAKkF,MAAMC,EAAc,CACrBR,KAAMiJ,EAAS+oB,WAAWzsB,OAC1BtF,IAAKgJ,EAAS+oB,WAAWzsB,UACvB0D,EAAS+oB,WAAWt1B,EAC9B,MAAM,GAAEwE,EAAE,GAAEC,GAAOJ,EAAakI,EAASnH,SAAUmH,EAAS+oB,YACxD/oB,EAAS+oB,WAAWzsB,SACpB0D,EAASzD,UAAYnK,KAAKmC,MAAM2D,EAAID,GACpC+H,EAASlF,SAASjH,MAAQmM,EAASzD,WAEvC,KACJ,CACA,KAAKsI,GAAgB0lB,OAAQ,CACzB,MAAM3H,EAAO5iB,EAASlB,QAAQiS,KAAK6R,KAAM5gB,EAAawI,EAAU+C,OAAOzU,KAAMyxC,EAAS,CAClF7tC,OAAQsF,EAAWhJ,OAASgH,EAASrB,YAAcqB,EAAS3D,OAAO5I,EACnEmJ,MAAOoD,EAASrB,YAAcqB,EAAS3D,OAAOtI,EAC9C8I,MAAOmF,EAAWjJ,MAAQiH,EAASrB,YAAcqB,EAAS3D,OAAOtI,EACjE4I,KAAMqD,EAASrB,YAAcqB,EAAS3D,OAAO5I,GAC9C+2C,EAAYxqC,EAASrB,YAAa8rC,EAAa1tC,GAAgBiD,EAASnH,SAAU2xC,GACjFjuC,IAAc7C,GAAiBmD,OAC/B4tC,EAAW7tC,KAAOoF,EAAWjJ,MAAQiH,EAAS3D,OAAOtI,GACrDiM,EAASnH,SAAS9E,EAAIw2C,EAAO3tC,KAC7BoD,EAAS8oB,gBAAgB/0B,EAAIiM,EAASnH,SAAS9E,EAC1C6uB,IACD5iB,EAASnH,SAASpF,EAAIiD,IAAcsL,EAAWhJ,OAC/CgH,EAAS8oB,gBAAgBr1B,EAAIuM,EAASnH,SAASpF,IAG9C8I,IAAc7C,GAAiBkD,MAAQ6tC,EAAW5tC,OAASmD,EAAS3D,OAAOtI,IAChFiM,EAASnH,SAAS9E,EAAIw2C,EAAO1tC,MAC7BmD,EAAS8oB,gBAAgB/0B,EAAIiM,EAASnH,SAAS9E,EAC1C6uB,IACD5iB,EAASnH,SAASpF,EAAIiD,IAAcsL,EAAWhJ,OAC/CgH,EAAS8oB,gBAAgBr1B,EAAIuM,EAASnH,SAASpF,IAGnD8I,IAAc7C,GAAiBgD,QAC/B+tC,EAAW9tC,IAAMqF,EAAWhJ,OAASgH,EAAS3D,OAAO5I,GAChDmvB,IACD5iB,EAASnH,SAAS9E,EAAI2C,IAAcsL,EAAWjJ,MAC/CiH,EAAS8oB,gBAAgB/0B,EAAIiM,EAASnH,SAAS9E,GAEnDiM,EAASnH,SAASpF,EAAI82C,EAAO5tC,IAC7BqD,EAAS8oB,gBAAgBr1B,EAAIuM,EAASnH,SAASpF,GAE1C8I,IAAc7C,GAAiBiD,KAAO8tC,EAAW/tC,QAAUsD,EAAS3D,OAAO5I,IAC3EmvB,IACD5iB,EAASnH,SAAS9E,EAAI2C,IAAcsL,EAAWjJ,MAC/CiH,EAAS8oB,gBAAgB/0B,EAAIiM,EAASnH,SAAS9E,GAEnDiM,EAASnH,SAASpF,EAAI82C,EAAO7tC,OAC7BsD,EAAS8oB,gBAAgBr1B,EAAIuM,EAASnH,SAASpF,GAEnD,KACJ,GAKhB,ECjGG,MAAMi3C,GACTn3C,YAAYiX,GACR7W,KAAKg3C,qBAAuB,CAAC3qC,EAAU4mB,EAASgkB,KAC5C,MAAMpoB,EAAWxiB,EAASlB,QAAQiS,KAAKyR,UAClC7uB,KAAKohB,SAAS1R,IAAIujB,IAXd,EAACpE,EAAUoE,IACpBpE,EAAS/J,UAAYmO,GACzBpE,EAAS9lB,SAAWkqB,GACpBpE,EAAS5lB,OAASgqB,GAClBpE,EAAS3lB,QAAU+pB,GACnBpE,EAAS7lB,MAAQiqB,EAMsBikB,CAAaroB,EAAUoE,IACtDjzB,KAAKohB,SAASvR,IAAIojB,EAASgkB,EAAWj3C,KAAK6W,WAC/C,EAEJ7W,KAAKm3C,eAAiB,CAAC9qC,EAAUwC,EAAOokB,EAASrqB,KAC7C,IAAK,MAAM6R,KAAWza,KAAKohB,SAAS5P,SAChCiJ,EAAQ4iB,OAAOhxB,EAAUzD,EAAWiG,EAAOokB,EAC/C,EAEJjzB,KAAK6W,UAAYA,EACjB7W,KAAKohB,SAAW,IAAI9R,GACxB,CACA6S,KAAK9V,GACDrM,KAAKg3C,qBAAqB3qC,EAAU0E,GAAQ3F,QAAQyL,GAAa,IAAI++B,GAAc/+B,KACnF7W,KAAKg3C,qBAAqB3qC,EAAU0E,GAAQqd,KAAKvX,GAAa,IAAI2/B,GAAW3/B,KAC7E7W,KAAKg3C,qBAAqB3qC,EAAU0E,GAAQ9B,SAAS4H,GAAa,IAAIq/B,GAAer/B,KACrF7W,KAAKg3C,qBAAqB3qC,EAAU0E,GAAQ0d,MAAM5X,GAAa,IAAIy/B,GAAYz/B,IACnF,CACA6b,UAAUrmB,GACN,OAAQA,EAASyC,YAAczC,EAAS+S,QAC5C,CACAie,OAAOhxB,EAAUwC,GACb,MAAMggB,EAAWxiB,EAASlB,QAAQiS,KAAKyR,SACvC7uB,KAAKm3C,eAAe9qC,EAAUwC,EAAOggB,EAAS9lB,QAAU8lB,EAAS/J,QAAS/e,GAAiBgD,QAC3F/I,KAAKm3C,eAAe9qC,EAAUwC,EAAOggB,EAAS5lB,MAAQ4lB,EAAS/J,QAAS/e,GAAiBkD,MACzFjJ,KAAKm3C,eAAe9qC,EAAUwC,EAAOggB,EAAS3lB,OAAS2lB,EAAS/J,QAAS/e,GAAiBmD,OAC1FlJ,KAAKm3C,eAAe9qC,EAAUwC,EAAOggB,EAAS7lB,KAAO6lB,EAAS/J,QAAS/e,GAAiBiD,IAC5F,EC1CJ,IAAI,IACJ,SAAW2rC,GACPA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,IAClCA,EAAWA,EAAc,EAAI,GAAK,GACrC,CALD,CAKG,KAAe,GAAa,CAAC,IACzB,MAAMyC,GACTx3C,cACII,KAAKyJ,IAAM,MACXzJ,KAAK0R,aAAe,KACxB,CACAQ,YAAYL,GACR,MAAgCwlC,EAAbxlC,EAAM5N,MAA6BmO,KAAOP,EAAM5N,MACnE,QAAmBzD,IAAf62C,EAASxzC,EACT,OAAOwzC,CAEf,CACAtlC,iBAAiBF,GACb,MAAgCwlC,EAAbxlC,EAAM5N,MAA6BmO,KAAOP,EAAM5N,MACnE,QAAmBzD,IAAf62C,EAASxzC,EACT,MAAO,CACHA,EAAGG,EAAcqzC,EAASxzC,GAC1B2O,EAAGxO,EAAcqzC,EAAS7kC,GAC1BE,EAAG1O,EAAcqzC,EAAS3kC,GAGtC,CACAf,YAAYlM,GACR,IAAKA,EAAMgM,WAAWzR,KAAK0R,cACvB,OAEJ,MAAyH9B,EAA3G,0GAA0HslC,KAAKzvC,GAC7I,OAAOmK,EACD,CACE6H,EAAG7H,EAAOzP,OAH2J,EAGtIqF,GAAWoK,EAAO,GAAW6H,IAH2H,EAIvL/E,EAAGyiC,SAASvlC,EAAO,GAAW8C,GAJuH,IAKrJF,EAAG2iC,SAASvlC,EAAO,GAAW4C,GALuH,IAMrJ3O,EAAGsxC,SAASvlC,EAAO,GAAW/L,GANuH,UAQvJrD,CACV,ECxCG,MAAM82C,GACTn1B,KAAK9V,GACD,MAAMwK,EAAYxK,EAASwK,UAAgD0gC,EAAvBlrC,EAASlB,QAAQhG,KAAkC+H,UACnGqqC,EAActtC,SACdoC,EAASlH,KAAKgC,UACRkF,EAASyM,OAAO4lB,oBAAsB7nB,EAAUiC,OAAO4lB,oBAAsB,EAC3E7nB,EAAUiC,OAAOxD,aACpBiiC,EAAc3hC,OACfvJ,EAASlH,KAAKgC,UAAYpE,KAGtC,CACA2vB,UAAUrmB,GACN,OAASA,EAASyC,YACbzC,EAAS+S,UACV/S,EAASlH,KAAK8E,UACZoC,EAASlH,KAAKmI,UAjBX,QAkBCjB,EAASlH,KAAKmI,UAlBf,OAmBIjB,EAASlH,KAAKkI,OAnBlB,IAmBwChB,EAASlH,KAAKmI,UAnBtD,GAoBb,CACAylB,MAAM1mB,GACFA,EAASlH,KAAKkI,MAtBL,CAuBb,CACAgwB,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IAGpBqC,GAAgBrC,EAAUA,EAASlH,MAAM,EAAMkH,EAASlB,QAAQhG,KAAK+H,UAAU+B,QAASJ,EAC5F,ECrBG/G,eAAe0vC,GAAUnmC,EAAQuR,GAAU,GAC9CvR,EAAO2zB,aAAa,eCTjBl9B,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAOomC,gBAAgB,IAAI3C,GAAmBlyB,EACxD,CDOU80B,CAAmBrmC,GAAQ,SEV9BvJ,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAOomC,gBAAgB,IAAIpC,GAAmBzyB,EACxD,CFQU+0B,CAAmBtmC,GAAQ,SGX9BvJ,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAOomC,gBAAgB,IAAIL,GAAmBx0B,EACxD,CHSUg1B,CAAmBvmC,GAAQ,SIZ9BvJ,eAA6BuJ,EAAQuR,GAAU,GAClDvR,EAAO2zB,aAAa,eACd3zB,EAAOwmC,SAAS,QAAQ,IACnBz7B,QAAQC,QAAQ,IAAI22B,KAC5BpwB,EACP,CJQUk1B,CAAczmC,GAAQ,SKbzBvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAI3D,GAAgBxxB,EAC9C,CLWUo1B,CAAgB3mC,GAAQ,SMd3BvJ,eAAgCuJ,EAAQuR,GAAU,GACrDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,SAASphC,GAC9BuF,QAAQC,QAAQ,IAAIk4B,GAAa19B,EAAWxF,KACpDuR,EACP,CNUUs1B,CAAiB7mC,GAAQ,SOf5BvJ,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,WAAWphC,GAChCuF,QAAQC,QAAQ,IAAIo5B,GAAe5+B,KAC3C+L,EACP,CPWUu1B,CAAmB9mC,GAAQ,SQhB9BvJ,eAAmCuJ,EAAQuR,GAAU,GACxDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,YAAYphC,GACjCuF,QAAQC,QAAQ,IAAI06B,GAAmBlgC,KAC/C+L,EACP,CRYUw1B,CAAoB/mC,GAAQ,SSjB/BvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,QAAQ,IAC7B77B,QAAQC,QAAQ,IAAIi7B,KAC5B10B,EACP,CTaUy1B,CAAgBhnC,GAAQ,SACxBA,EAAOuR,QAAQA,EACzB,CUnBA,MAAM01B,GAAc,+FACb,MAAMC,GACT34C,cACII,KAAK+kC,WAAa,CAAC,SACnB/kC,KAAKw4C,gBAAkB,IAAIlpC,GAC/B,CACAL,UACI,IAAK,MAAOxF,EAAKhN,KAASuD,KAAKw4C,gBACvB/7C,aAAgBg8C,aAChBh8C,GAAM6wB,QAEVttB,KAAKw4C,gBAAgB5uB,OAAOngB,EAEpC,CACAmP,KAAKnc,GACD,MAAMgN,EAAMhN,EAAK4P,SAASqsC,aAC1B,IAAKjvC,EACD,OAEJ,MAAM8S,EAAQvc,KAAKw4C,gBAAgB7oC,IAAIlG,GAClC8S,GCtBN,SAAmB9f,EAAM8f,GAC5B,MAAM,QAAErG,EAAO,QAAElC,GAAYvX,EAAkBk8C,EAAgBziC,EAAQ2H,YACvE,IAAKtB,EACD,OAEJ,MAAM4W,EAAW5W,EAAMnX,MAAOuD,EAJY,GAIHwqB,EACvCjd,EAAQ2H,YAAc7J,EACtBkC,EAAQ4H,UAAUvB,GAAQ5T,GAASA,EAAQwqB,EAAUA,GACrDjd,EAAQ2H,YAAc86B,CAC1B,CDgBQC,CAAUn8C,EAAM8f,EACpB,CACAzU,WAAW+O,GACP,MAAM1L,EAAU0L,EAAUmF,eAAe,WAAE+oB,GAAe/kC,KAC1D,IAAK+kC,EAAWl4B,MAAK7C,GAAKrC,GAAUqC,EAAGmB,EAAQgS,UAAU1E,MAAM6H,QAC3D,OAEJ,MAAM2pB,EAAW,CAACliC,GAASuwC,KAAenhB,EAAe4N,EACpDp7B,KAAIK,GAAKmB,EAAQgS,UAAU1E,MAAMtN,QAAQnB,KACzC6C,MAAK7C,KAAOA,IACbmtB,GACA/sB,GAA0B+sB,GAAc1e,IAChCA,EAAMzQ,MACNiiC,EAAS9oB,KAAKpZ,GAAS0Q,EAAMzQ,MACjC,UAGFoU,QAAQsnB,IAAIuG,EACtB,CACAjU,gBAAgB3pB,GACZA,EAASqsC,kBAAel4C,CAC5B,CACAq4B,aAAavN,EAAYjf,GACrB,MAAkBmrB,EAAYnrB,EAASmrB,UACvC,IAAKA,GAAWvzB,MACZ,OAEJ,MAAM40C,EAAQjsC,GAAyB4qB,EAAUvzB,MAAOoI,EAASysC,iBACjE,IAAKD,EACD,OAEJ,MAAME,EAAgC,iBAAVF,EACtB,CACE7wC,KAAMwvB,EAAUxvB,MAAQswC,GACxBloC,QAASonB,EAAUpnB,SAzD6F,EA0DhHnM,MAAO40C,GAET,CACE7wC,KAAMswC,GACNloC,QA9DgH,KA+D7GonB,KACAqhB,GACJ7wC,EAAO+wC,EAAa/wC,KAAM/D,EAAQ80C,EAAa90C,MAChDwF,EAAM,GAAGxF,KAAS+D,IACxB,GAAIhI,KAAKw4C,gBAAgB9oC,IAAIjG,GAEzB,YADA4C,EAASqsC,aAAejvC,GAG5B,MAAM2G,EAzBS,EAyBC2oC,EAAa3oC,QAAkBsjC,EAAU5vC,EAAYuI,EAASlH,KAAKlB,OAAQ+0C,EAAWtF,EAAUtjC,EAAS/B,EAzB1G,EAyBuH2qC,EACtI,IAAIz8B,EACJ,GAA+B,oBAApB08B,gBAAiC,CACxC,MAAMr/B,EAAS,IAAIq/B,gBAAgB5qC,EAAYA,GAAa6H,EAAU0D,EAAOsI,WAAW,MACxF,IAAKhM,EACD,OAEJA,EAAQlO,KAAO,OAhCJ,EAgCW0rC,OAAsB1rC,IAC5CkO,EAAQgjC,aAAe,SACvBhjC,EAAQijC,UAAY,SACpBjjC,EAAQkjC,SAASn1C,EAAO+0C,EAAUA,GAClCz8B,EAAQ3C,EAAOy/B,uBACnB,KACK,CACD,MAAMz/B,EAASrS,SAAS0I,cAAc,UACtC2J,EAAOxU,MAAQiJ,EACfuL,EAAOvU,OAASgJ,EAChB,MAAM6H,EAAU0D,EAAOsI,WAAW,MAClC,IAAKhM,EACD,OAEJA,EAAQlO,KAAO,OA9CJ,EA8CW0rC,OAAsB1rC,IAC5CkO,EAAQgjC,aAAe,SACvBhjC,EAAQijC,UAAY,SACpBjjC,EAAQkjC,SAASn1C,EAAO+0C,EAAUA,GAClCz8B,EAAQ3C,CACZ,CACA5Z,KAAKw4C,gBAAgB3oC,IAAIpG,EAAK8S,GAC9BlQ,EAASqsC,aAAejvC,CAC5B,EEpGJ,SAAS6vC,GAAejoC,EAAQwF,EAAW3R,EAAUq0C,EAAeC,EAAMC,GACtE,MAAMC,EAAiB7iC,EAAUmF,cAAcyH,cAAckI,MAAM4C,QACnE,IAAKmrB,EACD,OAEJ,MAAMjyC,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAM+xC,EAAMC,GACvD,IAAK,MAAMptC,KAAY5E,EAAO,CAC1B,MAAM,GAAEnD,EAAE,GAAEC,EAAE,SAAEC,GAAaL,EAAakI,EAASnH,SAAUA,GAAWiC,EAAWuyC,EAAe/jC,MAAQ+jC,EAAetyC,OAAQuyC,EAAgB32C,EAAMqO,EAAOozB,UAAUiV,EAAelV,OAAhCnzB,CAR/H,EAQkL7M,EAAW+0C,GAAiBpyC,EAR5N,EAQiPuyC,EAAevsB,UAAWysB,EAAUx3C,EAAOzB,OAAQ6D,EAAuBF,EAAKE,EAAYm1C,EAA7BxyC,EAA6C3C,EAAuBD,EAAKC,EAAYm1C,EAA7BxyC,GACjXkF,EAASnH,SAAS/C,QAAQy3C,EAC9B,CACJ,CCXO,MAAMC,GACTj6C,cACII,KAAKwE,SAAW,IAChBxE,KAAKmxB,SAAW,GAChBnxB,KAAKwkC,OAAS4C,GAAW0S,YACzB95C,KAAKoH,OAAS,EACdpH,KAAKmtB,SAAW,GAChBntB,KAAK2V,MAAQ,CACjB,CACAxN,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,eAEHhE,IAAlB/D,EAAK00B,WACLnxB,KAAKmxB,SAAW10B,EAAK00B,eAEL3wB,IAAhB/D,EAAK+nC,SACLxkC,KAAKwkC,OAAS/nC,EAAK+nC,aAEHhkC,IAAhB/D,EAAK2K,SACLpH,KAAKoH,OAAS3K,EAAK2K,aAED5G,IAAlB/D,EAAK0wB,WACLntB,KAAKmtB,SAAW1wB,EAAK0wB,eAEN3sB,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQlZ,EAAKkZ,OAE1B,EC7BJ,MAAMokC,GAAc,UACb,MAAMC,WAAkBhT,GAC3BpnC,YAAYyR,EAAQwF,GAChBxU,MAAMwU,GACN7W,KAAK4b,QAAUvK,EACVwF,EAAU0X,UACX1X,EAAU0X,QAAU,CAAEpR,UAAW,KAErCnd,KAAKkkB,gBAAmBra,IACpB,MAA8C0kB,EAA9BvuB,KAAK6W,UAAUmF,cAAiCyH,cAAckI,MAAM4C,QACpF,GAAKA,GAAW1kB,IAASkwC,GAAzB,CAGKljC,EAAU0X,UACX1X,EAAU0X,QAAU,CAAEpR,UAAW,KAErCtG,EAAU0X,QAAQrG,UAAW,EAC7BrR,EAAU0X,QAAQhhB,MAAQ,EAC1B,IAAK,MAAMlB,KAAYwK,EAAU0X,QAAQpR,UAChCnd,KAAK0yB,UAAUrmB,IAGpBA,EAASlF,SAASnF,MAAMqK,EAAS0rB,iBAErClhB,EAAU0X,QAAQpR,UAAY,GAC9BtG,EAAU0X,QAAQ0rB,QAAS,EAC3B91B,YAAW,KACHtN,EAAU/H,YAGT+H,EAAU0X,UACX1X,EAAU0X,QAAU,CAAEpR,UAAW,KAErCtG,EAAU0X,QAAQrG,UAAW,EAAK,GACnCqG,EAAQ4C,SAAWhzB,EAtBtB,CAsB4C,CAEpD,CACAsY,QACA,CACA0L,OACI,MAAMtL,EAAY7W,KAAK6W,UAAW0X,EAAU1X,EAAUmF,cAAcyH,cAAckI,MAAM4C,QACnFA,IAGL1X,EAAUiC,OAAOohC,oBAAsB3rB,EAAQ/pB,SAAWqS,EAAUiC,OAAOD,WAC/E,CACA8Z,WACI,MAAM9b,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAem+B,EAAkBtjC,EAAU4M,cAAc9V,SAAW5P,EAAgBimB,EAAS7Y,EAAQsY,cAAcO,QAAU/Z,OAAQmwC,EAAcvwC,KAAMwwC,GAAcr2B,EAAOoC,SAAWnc,OAAQqwC,EAAczwC,KAAM0wC,GAAcv2B,EAAOC,QAC5Rk2B,GAAmBC,GAAgBzyC,GAAUoyC,GAAaM,GFb/D,SAAsBhpC,EAAQwF,EAAW2jC,GAC5C,MAAM72B,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAAUq0C,EAAgB1iC,EAAUiC,OAAOohC,qBACrFX,GAAiBA,EAvCqB,IAuCS51B,GAGpD21B,GAAejoC,EAAQwF,EAAW8M,EAAU41B,EAAe,IAAIpgB,GAAOxV,EAASvjB,EAAGujB,EAAS7jB,EAAGy5C,IAAiBzuC,GAAM0vC,EAAU1vC,IACnI,CEQY2vC,CAAaz6C,KAAK4b,QAAS5b,KAAK6W,WAAW/L,GAAK9K,KAAK0yB,UAAU5nB,KAE1DwvC,GAAgB3yC,GAAUoyC,GAAaQ,IFzCjD,SAAsBlpC,EAAQwF,EAAW2jC,GACvC3jC,EAAU0X,UACX1X,EAAU0X,QAAU,CAAEpR,UAAW,KAErC,MAAM,QAAEoR,GAAY1X,EAUpB,GATK0X,EAAQ0rB,SACJ1rB,EAAQhhB,QACTghB,EAAQhhB,MAAQ,GAEpBghB,EAAQhhB,QACJghB,EAAQhhB,QAAUsJ,EAAUsG,UAAU5P,QACtCghB,EAAQ0rB,QAAS,IAGrB1rB,EAAQrG,SAAU,CAClB,MAAMvE,EAAW9M,EAAU4M,cAAcC,MAAME,cAAe21B,EAAgB1iC,EAAUiC,OAAOohC,oBAC/F,IAAKX,GAAiBA,EA5BiB,IA4Ba51B,EAChD,OAEJ21B,GAAejoC,EAAQwF,EAAW8M,EAAU41B,EAAe,IAAIpgB,GAAOxV,EAASvjB,EAAGujB,EAAS7jB,EAAGy5C,IAAiBzuC,GAAM0vC,EAAU1vC,IACnI,MAC8B,IAArByjB,EAAQrG,WACbqG,EAAQpR,UAAY,GAE5B,CEkBYu9B,CAAa16C,KAAK4b,QAAS5b,KAAK6W,WAAW/L,GAAK9K,KAAK0yB,UAAU5nB,IAEvE,CACA4nB,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe0H,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiBtY,EAAQsY,eAAeO,OACxK,KAAMN,EAAMxe,UAAa8e,EAAOoC,QAAQnc,QAAayZ,EAAME,eAAkBI,EAAOC,QAAQha,QACxF,OAAO,EAEX,MAAMowC,EAAYr2B,EAAOoC,QAAQvc,KAAM0wC,EAAYv2B,EAAOC,QAAQpa,KAClE,OAAOlC,GAAUoyC,GAAaM,IAAc1yC,GAAUoyC,GAAaQ,EACvE,CACA9uB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQojB,UACTpjB,EAAQojB,QAAU,IAAIsrB,IAE1B,IAAK,MAAM74C,KAAUuI,EACjB4B,EAAQojB,QAAQpmB,KAAKnH,GAAQutB,QAErC,CACAwE,QACA,EC1EJ,MAAqB,GAAO,GAAK4nB,GAASl8C,KAAKC,GAAK,GACpD,SAASk8C,GAAc/jC,EAAW3R,EAAUyD,EAAQ6wC,EAAMgB,GACtD,MAAM/yC,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAM+xC,EAAMgB,GACvD,IAAK,MAAMnuC,KAAY5E,EACf+xC,aAAgBrgB,GAChB5tB,GAAaV,GAA6BwB,GAAW,CACjDnH,WACAyD,SACAsC,KAAMtC,GARJ,EAQ0BgyC,GAC5BxzC,SAAU/E,EAAO1B,OACjB0G,OAAQhF,EAAO1B,SAGd84C,aAAgBhgB,IACrBptB,GAAWC,EAAUjD,GAAgBlE,EAAUyD,GAG3D,CAgBO,SAASkyC,GAAUhkC,EAAW/M,EAAMgxC,EAAYN,GACnDtwC,GAAe4wC,EAAYhxC,GAAM,CAACS,EAAU9I,IAhBhD,SAA8BoV,EAAWtM,EAAU9I,EAAKs5C,GACpD,MAAMtzC,EAAQF,SAASyzC,iBAAiBzwC,GACnC9C,EAAMtH,QAGXsH,EAAMs1B,SAAQpwB,IACV,MAAMsuC,EAAOtuC,EAAMI,EAAU8J,EAAUiC,OAAOD,WAAY1B,EAAM,CAC5D/W,GAAI66C,EAAKC,WAAaD,EAAKj5B,YAAc,IAAQjV,EACjDjN,GAAIm7C,EAAKE,UAAYF,EAAKl5B,aAAe,IAAQhV,GAClDpE,EAASsyC,EAAKj5B,YAAc,GAAOjV,EAASquC,EA3BiC,GA2BHruC,EAASysC,EAAO/3C,EAAI6e,OAAS3P,GAAQga,OAC5G,IAAIwO,GAAOhiB,EAAI/W,EAAG+W,EAAIrX,EAAG6I,EAASyyC,GAClC,IAAI5hB,GAAUyhB,EAAKC,WAAanuC,EAAUquC,EAAWH,EAAKE,UAAYpuC,EAAUquC,EAAWH,EAAKj5B,YAAcjV,EA7BzD,EA6BmEquC,EAAoBH,EAAKl5B,aAAehV,EA7B3G,EA6BqHquC,GAChLL,EAAS5jC,EAAKxO,EAAQ6wC,EAAK,GAEnC,CAEwD6B,CAAqBxkC,EAAWtM,EAAU9I,GAAK,CAAC0V,EAAKxO,EAAQ6wC,IAASoB,GAAc/jC,EAAWM,EAAKxO,EAAQ6wC,EAAMgB,MAC1K,CCnCO,MAAMc,GACT17C,cACII,KAAKwE,SAAW,GACpB,CACA2D,KAAK1L,GACGiD,EAAOjD,SAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,SAE7B,ECTJ,MAAMs2C,GAAa,SACZ,MAAMS,WAAgBvU,GACzBpnC,YAAYiX,GACRxU,MAAMwU,EACV,CACAJ,QACA,CACA0L,OACI,MAAMtL,EAAY7W,KAAK6W,UAAWzL,EAASyL,EAAUmF,cAAcyH,cAAckI,MAAMvgB,OAClFA,IAGLyL,EAAUiC,OAAO0iC,mBAAqBpwC,EAAO5G,SAAWqS,EAAUiC,OAAOD,WAC7E,CACA8Z,WACI,MAAM9b,EAAY7W,KAAK6W,UAA8CmN,EAAzBnN,EAAUmF,cAAgCyH,cAAcO,OAAQm2B,EAAkBtjC,EAAU4M,cAAc9V,SAAW5P,EAAgBq8C,EAAep2B,EAAOoC,QAAQnc,OAAQowC,EAAYr2B,EAAOoC,QAAQvc,KAAMC,EAAOka,EAAOmH,MAClQgvB,GAAmBC,GAAgBzyC,GAAUmzC,GAAYT,GFkB9D,SAAqBxjC,EAAW2jC,GACnC,MAA6CY,EArCuC,GAqCpEvkC,EAAUiC,OAAOD,WAAmD8K,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAAUyD,EAASkO,EAAUiC,OAAO0iC,oBAC5J7yC,GAAUA,EAtCqF,IAsC9Dgb,GAGtCi3B,GAAc/jC,EAAW8M,EAAUhb,EAAQ,IAAIwwB,GAAOxV,EAASvjB,EAAGujB,EAAS7jB,EAAG6I,EAASyyC,GAAYZ,EACvG,CEvBYiB,CAAYz7C,KAAK6W,WAAW/L,GAAK9K,KAAK0yB,UAAU5nB,KAGhD+vC,GAAU76C,KAAK6W,UAAW/M,EAAMgxC,IAAYhwC,GAAK9K,KAAK0yB,UAAU5nB,IAExE,CACA4nB,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe0H,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiBtY,EAAQsY,eAAeO,OAAQla,EAAOka,EAAOmH,MAC9L,QAAWzH,EAAMxe,UAAY8e,EAAOoC,QAAQnc,QAAUtC,GAAUmzC,GAAY92B,EAAOoC,QAAQvc,OACvFD,GAAiBkxC,GAAYhxC,EACrC,CACA2hB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQC,SACTD,EAAQC,OAAS,IAAIkwC,IAEzB,IAAK,MAAMt6C,KAAUuI,EACjB4B,EAAQC,OAAOjD,KAAKnH,GAAQoK,OAEpC,CACA2nB,QACA,ECvCG,MAAM2oB,GACT97C,cACII,KAAKwE,SAAW,IAChBxE,KAAKmxB,SAAW,GAChBnxB,KAAKsD,KAAM,CACf,CACA6E,KAAK1L,GACD,IAAIiD,EAAOjD,GAAX,CAeA,QAZsB+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,eAEHhE,IAAlB/D,EAAK00B,WACLnxB,KAAKmxB,SAAW10B,EAAK00B,eAER3wB,IAAb/D,EAAK6G,MACLtD,KAAKsD,IAAM7G,EAAK6G,UAEC9C,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,cAELxT,IAAf/D,EAAKoV,MAAqB,CAC1B,MAAM8C,EAAcnV,EAAQQ,KAAK6R,YAASrR,EAAYR,KAAK6R,MAC3D7R,KAAK6R,MAAQzH,GAA0B3N,EAAKoV,OAAOA,GACxCuY,GAAazpB,OAAOgU,EAAa9C,IAEhD,MACkBrR,IAAd/D,EAAK0I,OACLnF,KAAKmF,KAAO1I,EAAK0I,KApBrB,CAsBJ,EC9BG,MAAMw2C,WAAkBD,GAC3B97C,cACIyC,QACArC,KAAKsK,UAAY,EACrB,CACAnC,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,SAGY+D,IAAnB/D,EAAK6N,YACLtK,KAAKsK,UAAY7N,EAAK6N,UAE9B,ECZG,MAAMsxC,WAAeF,GACxBvzC,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,KAGXuD,KAAK8J,KAAOM,GAA0B3N,EAAKqN,MAAMrI,IAC7C,MAAM2pB,EAAM,IAAIuwB,GAEhB,OADAvwB,EAAIjjB,KAAK1G,GACF2pB,CAAG,IAElB,ECdG,IAAIywB,GCCJ,SAASC,GAAqBC,EAAeC,EAAWC,EAAcxd,GACzE,GAAIud,GAAaC,EAAc,CAE3B,OAAOj5C,EADO+4C,GAAiBC,EAAYC,GAAgBxd,EACvCsd,EAAeC,EACvC,CACK,GAAIA,EAAYC,EAAc,CAE/B,OAAOj5C,EADO+4C,GAAiBE,EAAeD,GAAavd,EACvCud,EAAWD,EACnC,CACJ,EDTA,SAAWF,GACPA,EAAyB,MAAI,QAC7BA,EAA2B,QAAI,UAC/BA,EAAwB,KAAI,MAC/B,CAJD,CAIGA,KAAsBA,GAAoB,CAAC,IED9C,MAAMK,GAAa,SACZ,MAAMC,WAAgBnV,GACzBpnC,YAAYiX,EAAWxF,GACnBhP,MAAMwU,GACN7W,KAAKo8C,aAAe,KAChB,MAAMvlC,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAeqgC,EAAgBxlC,EAAU4M,cAAcC,MAAME,cAAe04B,EAAgBnxC,EAAQsY,cAAckI,MAAMhM,OAC9K,IAAK28B,IAAkBD,EACnB,OAECxlC,EAAU8I,SACX9I,EAAU8I,OAAS,CAAC,GAExB,MAAMnb,EAAWqS,EAAUiC,OAAOyjC,mBAClC,IAAK/3C,GAAYA,EAbc,EAc3B,OAEJ,MAAMiD,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY4hB,EAAe73C,GAAUsG,GAAK9K,KAAK0yB,UAAU5nB,MAAK,OAAE6U,GAAW9I,EACtH,IAAK,MAAMxK,KAAY5E,EAAO,CAC1B,IAAKkY,EAAOuI,SACR,SAEJ7b,EAASsT,OAAOkW,SAAWlW,EAAO68B,YAClC,MAAoCC,EAAYh4C,EAApC4H,EAAStB,cAA4CsxC,GAAgBK,IAAa,IAAI54B,MAAOC,WAAalN,EAAU4M,cAAcC,MAAMG,WAtBnG,IAuB7C1lB,EACAu+C,EAAYJ,EAAcnrB,WAC1BxR,EAAO68B,aAAc,GAErBE,EA3ByD,EA2B7CJ,EAAcnrB,WAC1BxR,EAAOuI,UAAW,EAClBvI,EAAO68B,aAAc,GAEzB,MAAMG,EAAW,CACbC,UAAW,CACPC,SAAUhmC,EAAUiC,OAAOgkC,eAC3B74C,MAAOoI,EAASsT,OAAOhX,QAE3Bo0C,aAAc,CACVF,SAAU/4C,EAAYuI,EAASlB,QAAQhG,KAAKlB,OAAS4S,EAAUiC,OAAOD,WACtE5U,MAAOoI,EAASlH,KAAKlB,OAEzBqc,KAAMu7B,GAAkB12C,MAE5BnF,KAAKg9C,SAAS3wC,EAAUowC,EAAWC,EAAWC,GAC9C,MAAMM,EAAc,CAChBL,UAAW,CACPC,SAAUP,EAActoC,QACxB/P,MAAOoI,EAASsT,OAAO3L,SAE3B+oC,aAAc,CACVF,SAAU/4C,EAAYuI,EAASlB,QAAQ6I,QAAQ/P,OAC/CA,MAAOoI,EAAS2H,SAAS/P,OAlDgD,GAoD7Eqc,KAAMu7B,GAAkB7nC,SAE5BhU,KAAKg9C,SAAS3wC,EAAUowC,EAAWC,EAAWO,IACzCt9B,EAAO68B,aAAeC,GAAaj4C,EACpCxE,KAAKk9C,kBAAkB7wC,EAAUowC,UAG1BpwC,EAASsT,OAAO9N,KAE/B,GAEJ7R,KAAKm9C,aAAe,KAChB,MAAMtmC,EAAY7W,KAAK6W,UAAW8M,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAAUV,EAAWqS,EAAUiC,OAAOyjC,mBACjH,IAAK/3C,GAAYA,EAjEc,IAiEamf,EACxC,OAEJ,MAAMlc,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY9W,EAAUnf,GAAUsG,GAAK9K,KAAK0yB,UAAU5nB,KAC/F,IAAK,MAAMuB,KAAY5E,EAAO,CAC1B4E,EAASsT,OAAOkW,SAAU,EAC1B,MAAoCunB,EAAgB34C,EAAxC4H,EAAStB,cAAgD4Y,GAAW8a,EAvEkB,EAuEI2e,EAAgB54C,EAClH44C,GAAiB54C,EACbi6B,GAzEgI,GAyE3G5nB,EAAU4M,cAAc9V,SAAW5P,IACxDiC,KAAKq9C,iBAAiBhxC,EAAUoyB,GAChCz+B,KAAKs9C,oBAAoBjxC,EAAUoyB,GACnCz+B,KAAKk9C,kBAAkB7wC,EAAUoyB,IAIrCz+B,KAAK+yB,MAAM1mB,GAEXwK,EAAU4M,cAAc9V,SAAW7P,GACnCkC,KAAK+yB,MAAM1mB,EAEnB,GAEJrM,KAAKk9C,kBAAoB,CAAC7wC,EAAUoyB,EAAO8e,KACvC,MAAMpyC,EAAUnL,KAAK6W,UAAUmF,cAAesgC,EAAgBiB,GAAapyC,EAAQsY,cAAckI,MAAMhM,OACvG,GAAK28B,EAAL,CAGA,IAAKjwC,EAASsT,OAAO69B,WAAY,CAC7B,MAAMC,EAAYnB,EAAczqC,MAChC,IAAK4rC,EACD,OAEJ,MAAMC,EAAc9wC,GAAyB6wC,GAC7CpxC,EAASsT,OAAO69B,WAAarrC,GAAgBnS,KAAK4b,QAAS8hC,EAC/D,CACA,GAAKrxC,EAASsT,OAAO69B,WAGrB,GAAIlB,EAAch5C,IAAK,CACnB+I,EAASsT,OAAO9N,WAAQrR,EACxB,MAAMm9C,EAAStxC,EAASuI,eACxBvI,EAASsT,OAAO9N,MAAQ8rC,EAClBtrC,GAAS6B,GAASypC,EAAQtxC,EAASsT,OAAO69B,WA3GkD,EA2GxB/e,EAAOA,IAC3EpyB,EAASsT,OAAO69B,UAC1B,MAEInxC,EAASsT,OAAO9N,MAAQxF,EAASsT,OAAO69B,UApB5C,CAqBA,EAEJx9C,KAAKs9C,oBAAsB,CAACjxC,EAAUoyB,EAAO8e,KACzC,MAAkCpyC,EAAhBnL,KAAK6W,UAA+BmF,cAAe4hC,EAAcL,GAAWvpC,SAAW7I,EAAQsY,cAAckI,MAAMhM,QAAQ3L,QAC7I,IAAK4pC,EACD,OAEJ,MAAMC,EAAaxxC,EAASlB,QAAQ6I,QAAQ/P,MAA6D+P,EAAU8nC,GAArDzvC,EAAS2H,SAAS/P,OAvHK,EAuH6D25C,EAAa95C,EAAY+5C,GAAapf,QACxKj+B,IAAZwT,IACA3H,EAASsT,OAAO3L,QAAUA,EAC9B,EAEJhU,KAAKq9C,iBAAmB,CAAChxC,EAAUoyB,EAAO8e,KACtC,MAAM1mC,EAAY7W,KAAK6W,UAAWinC,EAAWP,GAAWp4C,KAAOo4C,EAAUp4C,KAAO0R,EAAUiC,OAAOD,WAAahC,EAAUiC,OAAOgkC,eAC/H,QAAiBt8C,IAAbs9C,EACA,OAEJ,MAAMC,EAAUj6C,EAAYuI,EAASlB,QAAQhG,KAAKlB,OAAS4S,EAAUiC,OAAOD,WAAyC1T,EAAO22C,GAA5BzvC,EAASlH,KAAKlB,MAA0C65C,EAAUC,EAAStf,QAC9Jj+B,IAAT2E,IACAkH,EAASsT,OAAOhX,OAASxD,EAC7B,EAEJnF,KAAKg9C,SAAW,CAAC3wC,EAAUowC,EAAWC,EAAWjgD,KAC7C,MAAMoa,EAAY7W,KAAK6W,UAAWmnC,EAAcvhD,EAAKmgD,UAAUC,SAA6CP,EAAzBzlC,EAAUmF,cAAuCyH,cAAckI,MAAMhM,OACxJ,IAAK28B,QAAiC97C,IAAhBw9C,EAClB,OAEJ,MAAMC,EAAiB3B,EAAcnrB,SAAU+sB,EAAiBrnC,EAAUiC,OAAOyjC,mBAAoB4B,EAAiB1hD,EAAKsgD,aAAaF,SAAUuB,EAAa3hD,EAAKmgD,UAAU34C,MAAOo6C,EAAO5hD,EAAKsgD,aAAa94C,OA3IhF,EA2I6Gqc,EAAO7jB,EAAK6jB,KACvP,GAAK49B,KAAkBA,EA5IQ,IA4IwBF,IAAgBG,EAMvE,GAHKtnC,EAAU8I,SACX9I,EAAU8I,OAAS,CAAC,GAEpB9I,EAAU8I,OAAO68B,YACb4B,IACI99B,IAASu7B,GAAkB12C,aACpBkH,EAASsT,OAAOhX,OAEvB2X,IAASu7B,GAAkB7nC,gBACpB3H,EAASsT,OAAO3L,cAK/B,GAAIyoC,GAAayB,EAAgB,CAE7B,IADYE,GAAcC,KACdL,EAAa,CACrB,MAAM/5C,EAAQo6C,EAAQ3B,GAAa2B,EAAOL,GAAgBC,EACtD39B,IAASu7B,GAAkB12C,OAC3BkH,EAASsT,OAAOhX,OAAS1E,GAEzBqc,IAASu7B,GAAkB7nC,UAC3B3H,EAASsT,OAAO3L,QAAU/P,EAElC,CACJ,MAEQqc,IAASu7B,GAAkB12C,aACpBkH,EAASsT,OAAOhX,OAEvB2X,IAASu7B,GAAkB7nC,gBACpB3H,EAASsT,OAAO3L,OAGnC,EAEJhU,KAAKs+C,qBAAuB,CAACzvC,EAAOtE,EAAU9I,KAC1C,MAAMoV,EAAY7W,KAAK6W,UAAWvM,EAAY/C,SAASyzC,iBAAiBzwC,GAAWoV,EAAS9I,EAAUmF,cAAcyH,cAAckI,MAAMhM,OACnIA,GAAWrV,EAAUnK,QAG1BmK,EAAUyyB,SAAQpwB,IACd,MAAMsuC,EAAOtuC,EAAMI,EAAU8J,EAAUiC,OAAOD,WAAY1B,EAAM,CAC5D/W,GAAI66C,EAAKC,WA1LqI,GA0LxHD,EAAKj5B,aAAsBjV,EACjDjN,GAAIm7C,EAAKE,UA3LqI,GA2LzHF,EAAKl5B,cAAuBhV,GAClDwxC,EA5L+I,GA4L/HtD,EAAKj5B,YAAqBjV,EAASysC,EAAO/3C,EAAI6e,OAAS3P,GAAQga,OAC5E,IAAIwO,GAAOhiB,EAAI/W,EAAG+W,EAAIrX,EAAGy+C,GACzB,IAAI/kB,GAAUyhB,EAAKC,WAAanuC,EAASkuC,EAAKE,UAAYpuC,EAASkuC,EAAKj5B,YAAcjV,EAASkuC,EAAKl5B,aAAehV,GAAUtF,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAM+xC,GAAM1uC,GAAK9K,KAAK0yB,UAAU5nB,KACxM,IAAK,MAAMuB,KAAY5E,EAAO,CAC1B,IAAK+xC,EAAKpgB,SAAS/sB,EAAStB,eACxB,SAEJsB,EAASsT,OAAOkW,SAAU,EAC1B,MAA0B0nB,EAAYlzC,GAAzBsV,EAAO7V,KAAgCmxC,GAC/C5uC,EAASsT,OAAOle,KAAO4K,EAASsT,OAAOle,MAAQw5C,IAChDj7C,KAAKyW,MAAMpK,EAAUwC,GAAO,GAC5BxC,EAASsT,OAAOle,IAAMw5C,GAE1Bj7C,KAAKq9C,iBAAiBhxC,EAzM4I,EAyMpHkxC,GAC9Cv9C,KAAKs9C,oBAAoBjxC,EA1MyI,EA0MjHkxC,GACjDv9C,KAAKk9C,kBAAkB7wC,EA3M2I,EA2MnHkxC,EACnD,IACF,EAENv9C,KAAK4b,QAAUvK,EACVwF,EAAU8I,SACX9I,EAAU8I,OAAS,CAAC,GAExB3f,KAAKkkB,gBAAmBra,IAChBA,IAASqyC,KAGRrlC,EAAU8I,SACX9I,EAAU8I,OAAS,CAAC,GAExB9I,EAAU8I,OAAOuI,UAAW,EAAI,CAExC,CACAzR,MAAMpK,EAAUwC,EAAOgc,GACfxe,EAASsT,OAAOkW,UAAYhL,WAGzBxe,EAASsT,OAAOle,WAChB4K,EAASsT,OAAO3L,eAChB3H,EAASsT,OAAOhX,cAChB0D,EAASsT,OAAO9N,MAC3B,CACAsQ,OACI,MAAMtL,EAAY7W,KAAK6W,UAAW8I,EAAS9I,EAAUmF,cAAcyH,cAAckI,MAAMhM,OAClFA,IAGL9I,EAAUiC,OAAOyjC,mBAAqB58B,EAAOnb,SAAWqS,EAAUiC,OAAOD,gBACrDrY,IAAhBmf,EAAOxa,OACP0R,EAAUiC,OAAOgkC,eAAiBn9B,EAAOxa,KAAO0R,EAAUiC,OAAOD,YAEzE,CACA8Z,SAAS9jB,GACL,MAA8CmV,EAA9BhkB,KAAK6W,UAAUmF,cAAgCyH,cAAcO,OAAQoC,EAAUpC,EAAOoC,QAASnC,EAAUD,EAAOC,QAASm2B,EAAeh0B,EAAQnc,OAAQowC,EAAYj0B,EAAQvc,KAAMywC,EAAer2B,EAAQha,OAAQswC,EAAYt2B,EAAQpa,KAAMC,EAAOka,EAAOmH,MACrQivB,GAAgBzyC,GAAUu0C,GAAY7B,GACtCr6C,KAAKm9C,eAEA7C,GAAgB3yC,GAAUu0C,GAAY3B,GAC3Cv6C,KAAKo8C,eAGLlyC,GAAegyC,GAAYpyC,GAAM,CAACS,EAAU9I,IAAQzB,KAAKs+C,qBAAqBzvC,EAAOtE,EAAU9I,IAEvG,CACAixB,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe0H,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiBtY,EAAQsY,eAAeO,QAAQ,QAAEC,EAAO,MAAEkH,EAAK,QAAE/E,GAAYpC,EAAQu5B,EAAY3zC,GAAiBsyC,GAAY/wB,GAC/P,SAAMoyB,GAAcn3B,EAAQnc,QAAYyZ,EAAMxe,UAAc+e,EAAQha,QAAUyZ,EAAME,iBAG7Ejc,GAAUu0C,GAAY91B,EAAQvc,OAASlC,GAAUu0C,GAAYj4B,EAAQpa,OAAS0zC,EACzF,CACA9xB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQwU,SACTxU,EAAQwU,OAAS,IAAIi8B,IAEzB,IAAK,MAAM56C,KAAUuI,EACjB4B,EAAQwU,OAAOxX,KAAKnH,GAAQ2e,OAEpC,CACAoT,MAAM1mB,GACFA,EAASsT,OAAOkW,SAAU,CAC9B,EChRG,MAAM2oB,GACT5+C,cACII,KAAKgU,QAAU,EACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,SAGU+D,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,QAE5B,ECVG,MAAMyqC,GACT7+C,cACII,KAAKwE,SAAW,GAChBxE,KAAK0+C,MAAQ,IAAIF,GACjBx+C,KAAK2I,OAAS,EAClB,CACAR,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,UAEzBxE,KAAK0+C,MAAMv2C,KAAK1L,EAAKiiD,YACDl+C,IAAhB/D,EAAKkM,SACL3I,KAAK2I,OAASlM,EAAKkM,QAE3B,ECAG,SAASg2C,GAAU9nC,EAAW+D,EAAKpP,EAAIC,GAC1C,MAAyCmzC,EAAzB/nC,EAAUmF,cAAwCyH,cAAckI,MAAMkzB,QACtF,GAAKD,EAGL,OAtBG,SAAkB1oC,EAAS1K,EAAIC,EAAIuI,GACtC,MAAM8qC,EAAWrgD,KAAKkF,MAAM8H,EAAGT,YAAcQ,EAAGR,aAAcmJ,EAAS3I,EAAGoJ,eAAgBR,EAAS3I,EAAGmJ,eACtG,IAAKT,IAAWC,EACZ,OAEJ,MAAM2qC,EAAYvzC,EAAGT,cAAei0C,EAAUvzC,EAAGV,cAAek0C,EAAS/qC,GAASC,EAAQC,EAAQ5I,EAAGR,YAAaS,EAAGT,aAAck0C,EAAOhpC,EAAQipC,qBAAqBJ,EAAU3+C,EAAG2+C,EAAUj/C,EAAGk/C,EAAQ5+C,EAAG4+C,EAAQl/C,GAIpN,OAHAo/C,EAAKE,aAPW,EAOenrC,GAAgBE,EAAQH,IACvDkrC,EAAKE,aAAap8C,EAAM87C,EARR,EAAiB,GAQ4B/qC,GAAgBkrC,EAAQjrC,IACrFkrC,EAAKE,aAT4B,EASFnrC,GAAgBG,EAAQJ,IAChDkrC,CACX,CAYWG,CAASzkC,EAAKpP,EAAIC,EAAImzC,EAAeF,MAAM1qC,QACtD,CACO,SAASsrC,GAAezoC,EAAWrL,EAAIC,GAC1CoL,EAAU+C,OAAOhB,MAAKgC,IAClB,MAAM2kC,EAAKZ,GAAU9nC,EAAW+D,EAAKpP,EAAIC,GACzC,IAAK8zC,EACD,OAEJ,MAAM3zC,EAAOJ,EAAGT,cAAec,EAAOJ,EAAGV,eAnB1C,SAAyBmL,EAAS9Q,EAAOu5C,EAAWxoC,EAAOC,GAC9DH,GAASC,EAASC,EAAOC,GACzBF,EAAQmC,UAAYjT,EACpB8Q,EAAQqC,YAAcomC,EACtBzoC,EAAQoC,QACZ,CAeQknC,CAAgB5kC,EAAKpP,EAAGsN,OAAO2mC,YAhCqB,EAgCYF,EAAI3zC,EAAMC,EAAK,GAEvF,CC/BO,MAAM6zC,WAAkB1Y,GAC3BpnC,YAAYiX,GACRxU,MAAMwU,EACV,CACAJ,QACA,CACA0L,OACI,MAAMtL,EAAY7W,KAAK6W,UAAWgoC,EAAUhoC,EAAUmF,cAAcyH,cAAckI,MAAMkzB,QACnFA,IAGLhoC,EAAUiC,OAAO6mC,oBAAsBd,EAAQr6C,SAAWqS,EAAUiC,OAAOD,WAC3EhC,EAAUiC,OAAO8mC,kBAAoBf,EAAQl2C,OAASkO,EAAUiC,OAAOD,WAC3E,CACA8Z,WACI,MAAM9b,EAAY7W,KAAK6W,UACvB,GAD4CA,EAAUmF,cAC1CyH,cAAcO,OAAOoC,QAAQnc,QAA6C,gBAAnC4M,EAAU4M,cAAc9V,OAA0B,CACjG,MAAMgW,EAAW9M,EAAU4M,cAAcC,MAAMxe,UAAU,oBAAEy6C,EAAmB,kBAAEC,GAAsB/oC,EAAUiC,OAChH,IAAK6mC,GACDA,EApB6B,IAqB5BC,GACDA,EAtB6B,IAuB5Bj8B,EACD,OAEJ,MAAMnf,EAAW/F,KAAK86B,IAAIqmB,GAAoBn4C,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY9W,EAAUnf,GAAUsG,GAAK9K,KAAK0yB,UAAU5nB,KACvIrD,EAAMs1B,SAAQ,CAACvxB,EAAI0uB,KACf,MAAMtuB,EAAOJ,EAAGT,cAChB,IAAK,MAAMU,KAAMhE,EAAMo4C,MAAM3lB,EADgB,GACE,CAC3C,MAAMruB,EAAOJ,EAAGV,cAAe+0C,EAAUrhD,KAAK86B,IAAIomB,GAAsBI,EAAQthD,KAAK86B,IAAI3tB,EAAKxL,EAAIyL,EAAKzL,GAAI4/C,EAAQvhD,KAAK86B,IAAI3tB,EAAK9L,EAAI+L,EAAK/L,GACtIigD,EAAQD,GAAWE,EAAQF,GAC3BR,GAAezoC,EAAWrL,EAAIC,EAEtC,IAER,CACJ,CACAinB,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW6M,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiB5M,EAAUmF,cAAcyH,eAAeO,OACrJ,SAAMA,EAAOoC,QAAQnc,SAAUyZ,EAAMxe,WAG9ByC,GA3CK,UA2CkBqc,EAAOoC,QAAQvc,KACjD,CACA4hB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQ0zC,UACT1zC,EAAQ0zC,QAAU,IAAIJ,IAE1B,IAAK,MAAMz9C,KAAUuI,EACjB4B,EAAQ0zC,QAAQ12C,KAAKnH,GAAQ69C,QAErC,CACA9rB,QACA,ECxDG,MAAMktB,GACTrgD,cACII,KAAKkV,OAAQ,EACblV,KAAKmV,SAAU,EACfnV,KAAKgU,QAAU,CACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKyY,QACLlV,KAAKkV,MAAQzY,EAAKyY,YAEH1U,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAEjCrR,IAAjB/D,EAAK0Y,UACLnV,KAAKmV,QAAU1Y,EAAK0Y,cAEH3U,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAE5B,ECrBG,MAAMksC,GACTtgD,cACII,KAAKwE,SAAW,IAChBxE,KAAK0+C,MAAQ,IAAIuB,EACrB,CACA93C,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,UAEzBxE,KAAK0+C,MAAMv2C,KAAK1L,EAAKiiD,OACzB,ECPG,SAASyB,GAAStpC,EAAWxK,EAAU+zC,EAAWpsC,EAAS2P,GAC9D9M,EAAU+C,OAAOhB,MAAKgC,IAClB,MAAMylC,EAAWh0C,EAAStB,eAR3B,SAAsBmL,EAAS9Q,EAAO+Q,EAAOC,EAAKkqC,EAAWtsC,GAChEiC,GAASC,EAASC,EAAOC,GACzBF,EAAQqC,YAAcxE,GAAgBusC,EAAWtsC,GACjDkC,EAAQmC,UAAYjT,EACpB8Q,EAAQoC,QACZ,CAIQioC,CAAa3lC,EAAKvO,EAASyM,OAAO2mC,YAVrB,EAUiDY,EAAU18B,EAAUy8B,EAAWpsC,EAAQ,GAE7G,CCTO,MAAMwsC,WAAgBxZ,GACzBpnC,YAAYiX,EAAWxF,GACnBhP,MAAMwU,GACN7W,KAAK4b,QAAUvK,CACnB,CACAoF,QACA,CACA0L,OACI,MAAMtL,EAAY7W,KAAK6W,UAAW4pC,EAAO5pC,EAAUmF,cAAcyH,cAAckI,MAAM80B,KAChFA,IAGL5pC,EAAUiC,OAAO4nC,iBAAmBD,EAAKj8C,SAAWqS,EAAUiC,OAAOD,WACzE,CACA8Z,WACI,MAAM9b,EAAY7W,KAAK6W,UAA8C4M,EAAzB5M,EAAUmF,cAAuCyH,cAC7F,IAAKA,EAAckI,MAAM80B,OACpBh9B,EAAcO,OAAOoC,QAAQnc,QAC9B4M,EAAU4M,cAAc9V,SAAW5P,EACnC,OAEJ,MAAM4lB,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAC/C,IAAKye,EACD,OAEJ,MAAMnf,EAAWqS,EAAUiC,OAAO4nC,iBAClC,IAAKl8C,GAAYA,EA3Bc,EA4B3B,OAEJ,MAAMiD,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY9W,EAAUnf,GAAUsG,GAAK9K,KAAK0yB,UAAU5nB,KAC/F,IAAK,MAAMuB,KAAY5E,EAAO,CAC1B,MAAoC21C,EAAgB34C,EAAxC4H,EAAStB,cAAgD4Y,GACrE,GAAIy5B,EAAgB54C,EAChB,SAEJ,MAAMm8C,EAAkBl9B,EAAckI,MAAM80B,KAAK/B,MAAOkC,EAAcD,EAAgB3sC,QAAS6sC,EAAcD,EAAexD,EAAgBwD,EAAep8C,EAC3J,GAAIq8C,GArCuC,EAsCvC,SAEJ,MAAM5rC,EAAW0rC,EAAgB9uC,OAASxF,EAASlB,QAAQuzC,OAAO7sC,MAClE,IAAKgF,EAAUsG,UAAU2jC,eAAiB7rC,EAAU,CAChD,MAAM8rC,EAAet9B,EAAckI,MAAM80B,KAAK/B,MAC9C7nC,EAAUsG,UAAU2jC,cAAgB9rC,GAAmBhV,KAAK4b,QAAS3G,EAAU8rC,EAAa7rC,MAAO6rC,EAAa5rC,QACpH,CACA,MAAMmrC,EAAY7rC,GAAapI,OAAU7L,EAAWqW,EAAUsG,UAAU2jC,eACnER,GAGLH,GAAStpC,EAAWxK,EAAUi0C,EAAWO,EAAal9B,EAC1D,CACJ,CACA+O,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW6M,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiB5M,EAAUmF,cAAcyH,eAAeO,OACrJ,OAAOA,EAAOoC,QAAQnc,UAAYyZ,EAAMxe,UAAYyC,GAtD3C,OAsD+Dqc,EAAOoC,QAAQvc,KAC3F,CACA4hB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQs1C,OACTt1C,EAAQs1C,KAAO,IAAIP,IAEvB,IAAK,MAAMl/C,KAAUuI,EACjB4B,EAAQs1C,KAAKt4C,KAAKnH,GAAQy/C,KAElC,CACA1tB,QACA,EClEG,MAAMiuB,WAAeha,GACxBpnC,YAAYiX,GACRxU,MAAMwU,GACN7W,KAAKkkB,gBAAmBra,IACpB,GALM,UAKFA,EACA,OAEJ,MAAMgN,EAAY7W,KAAK6W,UACnBA,EAAUwO,gBACVxO,EAAUuO,QAGVvO,EAAUyO,MACd,CAER,CACA7O,QACA,CACA0L,OACA,CACAwQ,WACA,CACAD,YACI,OAAO,CACX,CACAK,QACA,EC3BG,MAAMkuB,GACTrhD,cACII,KAAK8kB,SAAU,EACf9kB,KAAKkwB,OAAS,GACdlwB,KAAK+9B,SAAW,CACpB,CACA51B,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,YAEiB+D,IAAjB/D,EAAKqoB,UACL9kB,KAAK8kB,QAAUroB,EAAKqoB,cAEJtkB,IAAhB/D,EAAKyzB,SACLlwB,KAAKkwB,OAASzzB,EAAKyzB,OAAOvmB,KAAIK,GAAKA,KAElChK,KAAKkwB,OAAO/vB,SACbH,KAAK8kB,SAAU,GAEnB,MAAMiZ,EAAWthC,EAAKshC,cACLv9B,IAAbu9B,IACA/9B,KAAK+9B,SAAW75B,EAAc65B,GAEtC,ECrBG,MAAMmjB,WAAela,GACxBpnC,YAAYiX,GACRxU,MAAMwU,GACN7W,KAAKkkB,gBAAmBra,IACpB,GALK,SAKDA,EACA,OAEJ,MAAMgN,EAAY7W,KAAK6W,UAA8CsqC,EAAzBtqC,EAAUmF,cAAqCyH,cAAckI,MAAMxK,KAC/G,IAAKggC,EACD,OAEJ,MAAMpjB,EAAW/5B,EAAcm9C,EAAYpjB,UAC3C,GAAIA,GAbuB,EAcvB,OAEJ,MAAM1N,EAAQhoB,GAAc,MAAC7H,KAAc2gD,EAAYjxB,SAAUsN,OAAyBh9B,IAAV6vB,EAAsBxZ,EAAUmF,cAAcmB,UAAU+S,OAAOG,QAAS7vB,EACnJqW,EAAUsG,UAAUgE,KAAK4c,EAAUlnB,EAAU4M,cAAcC,MAAO8Z,EAAcnN,EAAM,CAEnG,CACA5Z,QACA,CACA0L,OACA,CACAwQ,WACA,CACAD,YACI,OAAO,CACX,CACAjH,gBAAgBtgB,KAAY5B,GACnB4B,EAAQgW,OACThW,EAAQgW,KAAO,IAAI8/B,IAEvB,IAAK,MAAMjgD,KAAUuI,EACjB4B,EAAQgW,KAAKhZ,KAAKnH,GAAQmgB,KAElC,CACA4R,QACA,ECvCG,MAAMquB,GACTxhD,cACII,KAAK+9B,SAAW,CACpB,CACA51B,KAAK1L,GACD,GAAIiD,EAAOjD,GACP,OAEJ,MAAMshC,EAAWthC,EAAKshC,cACLv9B,IAAbu9B,IACA/9B,KAAK+9B,SAAW75B,EAAc65B,GAEtC,ECVG,MAAMsjB,WAAgBra,GACzBpnC,YAAYiX,GACRxU,MAAMwU,GACN7W,KAAKkkB,gBAAmBra,IACpB,MAAMgN,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cACtD,IAAK7Q,EAAQsY,cAAckI,MAAMzM,QAN1B,WAMoCrV,EACvC,OAEJ,MAAMy3C,EAAWt9C,EAAcmH,EAAQsY,cAAckI,MAAMzM,OAAO6e,UAClElnB,EAAUsG,UAAUwe,eAAe2lB,EAAS,CAEpD,CACA7qC,QACA,CACA0L,OACA,CACAwQ,WACA,CACAD,YACI,OAAO,CACX,CACAjH,gBAAgBtgB,KAAY5B,GACnB4B,EAAQ+T,SACT/T,EAAQ+T,OAAS,IAAIkiC,IAEzB,IAAK,MAAMpgD,KAAUuI,EACjB4B,EAAQ+T,OAAO/W,KAAKnH,GAAQke,OAEpC,CACA6T,QACA,EChCG,MAAMwuB,GACT3hD,cACII,KAAKwE,SAAW,IAChBxE,KAAKmxB,SAAW,GAChBnxB,KAAKoH,OAAS,IACdpH,KAAK2V,MAAQ,EACb3V,KAAKmtB,SAAW,GAChBntB,KAAKwkC,OAAS4C,GAAW0S,WAC7B,CACA3xC,KAAK1L,GACGiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,eAEHhE,IAAlB/D,EAAK00B,WACLnxB,KAAKmxB,SAAW10B,EAAK00B,eAEL3wB,IAAhB/D,EAAK+nC,SACLxkC,KAAKwkC,OAAS/nC,EAAK+nC,aAEHhkC,IAAhB/D,EAAK2K,SACLpH,KAAKoH,OAAS3K,EAAK2K,aAEJ5G,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQlZ,EAAKkZ,YAEAnV,IAAlB/D,EAAK0wB,WACLntB,KAAKmtB,SAAW1wB,EAAK0wB,UAE7B,EC9BG,MAAMq0B,WAAmBD,GAC5B3hD,cACIyC,QACArC,KAAKsK,UAAY,EACrB,CACAnC,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,SAGY+D,IAAnB/D,EAAK6N,YACLtK,KAAKsK,UAAY7N,EAAK6N,UAE9B,ECZG,MAAMm3C,WAAgBF,GACzBp5C,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,KAGXuD,KAAK8J,KAAOM,GAA0B3N,EAAKqN,MAAMrI,IAC7C,MAAM2pB,EAAM,IAAIo2B,GAEhB,OADAp2B,EAAIjjB,KAAK1G,GACF2pB,CAAG,IAElB,ECZJ,MAAMs2B,GAAc,UACb,MAAMC,WAAiB3a,GAC1BpnC,YAAYyR,EAAQwF,GAChBxU,MAAMwU,GACN7W,KAAK4hD,cAAgB,KACjB,MAAM/qC,EAAY7W,KAAK6W,UAAWgrC,EAAiBhrC,EAAUmF,cAAcyH,cAAckI,MAAMm2B,QAC/F,IAAKD,EACD,OAEJ,MAAMC,EAAUjrC,EAAUirC,SAAW,CAAE3kC,UAAW,IAUlD,GATK2kC,EAAQ7H,SACJ6H,EAAQv0C,QACTu0C,EAAQv0C,MAAQ,GAEpBu0C,EAAQv0C,QACJu0C,EAAQv0C,QAAUsJ,EAAUsG,UAAU5P,QACtCu0C,EAAQ7H,QAAS,IAGrB6H,EAAQ55B,SAAU,CAClB,MAAM65B,EAAkBlrC,EAAUiC,OAAOkpC,oBACzC,IAAKD,GAAmBA,EArBK,EAsBzB,OAEJ,MAAMxD,EAAgB9/C,KAAKk7B,IAAIooB,EAxBuB,EAAwB,GAwBa1F,EAAgBxlC,EAAU4M,cAAcC,MAAME,cACzI,QAAsBpjB,IAAlB67C,EACA,OAEJ,MAAMvmC,EAAQ,IAAIqjB,GAAOkjB,EAAcj8C,EAAGi8C,EAAcv8C,EAAGy+C,GAAgB92C,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAMqO,GAAOhL,GAAK9K,KAAK0yB,UAAU5nB,KACjJ,IAAK,MAAMuB,KAAY5E,EAAO,CAC1B,MAAM,GAAEnD,EAAE,GAAEC,EAAE,SAAEC,GAAaL,EAAak4C,EAAehwC,EAASnH,UAAWwS,EAAIlT,GA9BU,EA8BgDqmB,GAAU0zB,EAAhCsD,EAAelsC,MAA6C+B,EACjL,GAAIA,GAAK6mC,EAAe,CACpBuD,EAAQ3kC,UAAUgE,KAAK9U,GACvB,MAAM41C,EAAO7/C,EAAOzB,OAAO2D,EAAIC,GAC/B09C,EAAK9hD,OAAS0qB,EACdxe,EAASlF,SAASnF,MAAMigD,EAC5B,CACJ,CACJ,MACK,IAAyB,IAArBH,EAAQ55B,SAAoB,CACjC,IAAK,MAAM7b,KAAYy1C,EAAQ3kC,UAC3B9Q,EAASlF,SAASnF,MAAMqK,EAAS0rB,iBAErC+pB,EAAQ3kC,UAAY,EACxB,GAEJnd,KAAKkiD,cAAgB,KACjB,MAAMrrC,EAAY7W,KAAK6W,UAAW8M,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAAUq5C,EAAgB1nC,EAAUiC,OAAOkpC,qBACjHzD,GAAiBA,EAhD4F,IAgD9D56B,GAGpD3jB,KAAKmiD,gBAAgBx+B,EAAU46B,EAAe,IAAIplB,GAAOxV,EAASvjB,EAAGujB,EAAS7jB,EAAGy+C,GAAe,EAEpGv+C,KAAKmiD,gBAAkB,CAACj9C,EAAUq5C,EAAe/E,EAAM4I,KACnD,MAAMvrC,EAAY7W,KAAK6W,UAAWpP,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAM+xC,GAAM1uC,GAAK9K,KAAK0yB,UAAU5nB,KAAK+2C,EAAiBhrC,EAAUmF,cAAcyH,cAAckI,MAAMm2B,QACzK,IAAKD,EACD,OAEJ,MAAM,OAAErd,EAAM,MAAE7uB,EAAK,OAAEvO,EAAM,SAAE+lB,GAAa00B,EAAgBQ,EAAariD,KAAK4b,QAAQ6oB,UAAUD,GAASr9B,GAAYi7C,GAAYzsC,OAASA,GAASvO,EACnJ,IAAK,MAAMiF,KAAY5E,EAAO,CAC1B,MAAM,GAAEnD,EAAE,GAAEC,EAAE,SAAEC,GAAaL,EAAakI,EAASnH,SAAUA,GAAWo9C,EAAgBt/C,EAAMq/C,EA5DgD,EA4DtB79C,EAAW+5C,GAAiBp3C,EA5DxB,EA4D4CgmB,GAAWysB,EAAUx3C,EAAOzB,OAAQ6D,EAAuBF,EAAKE,EAAY89C,EAA7Bn7C,EAA6C3C,EAAuBD,EAAKC,EAAY89C,EAA7Bn7C,GAC/QkF,EAASnH,SAAS/D,MAAMy4C,EAC5B,GAEJ55C,KAAKuiD,uBAAyB,CAACh4C,EAAU9I,KACrC,MAAMoV,EAAY7W,KAAK6W,UAAWirC,EAAUjrC,EAAUmF,cAAcyH,cAAckI,MAAMm2B,QACxF,IAAKA,EACD,OAEJ,MAAMr6C,EAAQF,SAASyzC,iBAAiBzwC,GACnC9C,EAAMtH,QAGXsH,EAAMs1B,SAAQpwB,IACV,MAAMsuC,EAAOtuC,EAAMI,EAAU8J,EAAUiC,OAAOD,WAAY1B,EAAM,CAC5D/W,GAAI66C,EAAKC,WA3E2I,GA2E9HD,EAAKj5B,aAAsBjV,EACjDjN,GAAIm7C,EAAKE,UA5E2I,GA4E/HF,EAAKl5B,cAAuBhV,GAClDwxC,EA7EqJ,GA6ErItD,EAAKj5B,YAAqBjV,EAASysC,EAAO/3C,EAAI6e,OAAS3P,GAAQga,OAC5E,IAAIwO,GAAOhiB,EAAI/W,EAAG+W,EAAIrX,EAAGy+C,GACzB,IAAI/kB,GAAUyhB,EAAKC,WAAanuC,EAASkuC,EAAKE,UAAYpuC,EAASkuC,EAAKj5B,YAAcjV,EAASkuC,EAAKl5B,aAAehV,GAA+Bq1C,EAAa/3C,GAA3By3C,EAAQh4C,KAAiCmxC,GACnLj7C,KAAKmiD,gBAAgBhrC,EAAKonC,EAAe/E,EAAM4I,EAAW,GAC5D,EAENpiD,KAAK4b,QAAUvK,EACVwF,EAAUirC,UACXjrC,EAAUirC,QAAU,CAAE3kC,UAAW,KAErCnd,KAAKkkB,gBAAmBra,IACpB,MAA8C24C,EAA9BxiD,KAAK6W,UAAUmF,cAAqCyH,cAAckI,MAAMm2B,QACxF,IAAKU,GAAe34C,IAAS63C,GACzB,OAEC7qC,EAAUirC,UACXjrC,EAAUirC,QAAU,CAAE3kC,UAAW,KAErC,MAAM2kC,EAAUjrC,EAAUirC,QAC1BA,EAAQ55B,UAAW,EACnB45B,EAAQv0C,MAAQ,EAChB,IAAK,MAAMlB,KAAYwK,EAAUirC,QAAQ3kC,UAChCnd,KAAK0yB,UAAUrmB,IAGpBA,EAASlF,SAASnF,MAAMqK,EAAS0rB,iBAErC+pB,EAAQ3kC,UAAY,GACpB2kC,EAAQ7H,QAAS,EACjB91B,YAAW,KACHtN,EAAU/H,YAGdgzC,EAAQ55B,UAAW,EAAK,GACzBs6B,EAAYrxB,SAAWhzB,EAAsB,CAExD,CACAsY,QACA,CACA0L,OACI,MAAMtL,EAAY7W,KAAK6W,UAAWirC,EAAUjrC,EAAUmF,cAAcyH,cAAckI,MAAMm2B,QACnFA,IAGLjrC,EAAUiC,OAAOkpC,oBAAsBF,EAAQt9C,SAAWqS,EAAUiC,OAAOD,WAC/E,CACA8Z,WACI,MAAM9b,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAem+B,EAAkBtjC,EAAU4M,cAAc9V,SAAW5P,EAAgBimB,EAAS7Y,EAAQsY,cAAcO,OAAQy+B,EAAQz+B,EAAOoC,QAASg0B,EAAeqI,EAAMx4C,OAAQowC,EAAYoI,EAAM54C,KAAM64C,EAAQ1+B,EAAOC,QAASq2B,EAAeoI,EAAMz4C,OAAQswC,EAAYmI,EAAM74C,KAAMC,EAAOka,EAAOmH,MACrVgvB,GAAmBC,GAAgBzyC,GAAU+5C,GAAarH,GAC1Dr6C,KAAKkiD,gBAEA5H,GAAgB3yC,GAAU+5C,GAAanH,GAC5Cv6C,KAAK4hD,gBAGL13C,GAAew3C,GAAa53C,GAAM,CAACS,EAAU9I,IAAQzB,KAAKuiD,uBAAuBh4C,EAAU9I,IAEnG,CACAixB,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe0H,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiBtY,EAAQsY,eAAeO,OAAQla,EAAOka,EAAOmH,MAAOs3B,EAAQz+B,EAAOoC,QAASs8B,EAAQ1+B,EAAOC,QAASm+B,EAAax4C,GAAiB83C,GAAa53C,GAChS,KAAMs4C,GAAeK,EAAMx4C,QAAYyZ,EAAMxe,UAAcw9C,EAAMz4C,QAAUyZ,EAAME,eAC7E,OAAO,EAEX,MAAMy2B,EAAYoI,EAAM54C,KAAM0wC,EAAYmI,EAAM74C,KAChD,OAAOlC,GAAU+5C,GAAarH,IAAc1yC,GAAU+5C,GAAanH,IAAc6H,CACrF,CACA32B,gBAAgBtgB,KAAY5B,GACnB4B,EAAQ22C,UACT32C,EAAQ22C,QAAU,IAAIL,IAE1B,IAAK,MAAMzgD,KAAUuI,EACjB4B,EAAQ22C,QAAQ35C,KAAKnH,GAAQ8gD,QAErC,CACA/uB,QACA,ECzJG,MAAM4vB,GACT/iD,cACII,KAAKoH,OAAS,EACdpH,KAAK2I,OAAS,GAClB,CACAR,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAK2K,SACLpH,KAAKoH,OAAS3K,EAAK2K,aAEH5G,IAAhB/D,EAAKkM,SACL3I,KAAK2I,OAASlM,EAAKkM,QAE3B,ECbG,MAAMi6C,WAAe5b,GACxBpnC,YAAYiX,GACRxU,MAAMwU,EACV,CACAJ,MAAMpK,EAAUwC,EAAOgc,GACfxe,EAASypB,KAAKD,UAAYhL,IAG9Bxe,EAASypB,KAAK1uB,OAAS,EAC3B,CACA+a,OACI,MAAMtL,EAAY7W,KAAK6W,UAAWif,EAAOjf,EAAUmF,cAAcyH,cAAckI,MAAMmK,KAChFA,IAGLjf,EAAUiC,OAAO+pC,eAAiB/sB,EAAKntB,OAASkO,EAAUiC,OAAOD,WACrE,CACA8Z,WACA,CACAD,UAAUrmB,GACN,MAAMwK,EAAY7W,KAAK6W,UAAW6M,EAAQ7M,EAAU4M,cAAcC,MAAOM,GAAU3X,GAAUoX,eAAiB5M,EAAUmF,cAAcyH,eAAeO,OACrJ,OAAOA,EAAOoC,QAAQnc,UAAYyZ,EAAMxe,UAAYyC,GAtB3C,OAsB+Dqc,EAAOoC,QAAQvc,KAC3F,CACA4hB,gBAAgBtgB,KAAY5B,GACnB4B,EAAQ2qB,OACT3qB,EAAQ2qB,KAAO,IAAI6sB,IAEvB,IAAK,MAAM3hD,KAAUuI,EACjB4B,EAAQ2qB,KAAK3tB,KAAKnH,GAAQ80B,KAElC,CACA/C,MAAM1mB,GACFA,EAASypB,KAAKD,SAAU,EACxB,MAAMhf,EAAY7W,KAAK6W,UAAW1L,EAAU0L,EAAUmF,cAAe2H,EAAW9M,EAAU4M,cAAcC,MAAMxe,SAAUyD,EAASkO,EAAUiC,OAAO+pC,eAAgBC,EAAc33C,EAAQsY,cAAckI,MAAMmK,KAC5M,IAAKgtB,IAAgBn6C,GAAUA,EAnCF,IAmCyBgb,EAClD,OAEJ,MAA4Co/B,EAAOt+C,EAAYkf,EAA3CtX,EAAStB,eAA0Di4C,EAAkBD,EAAOp6C,EAAQ4qC,EAAauP,EAAY17C,QAAQ,KAAE0uB,GAASzpB,EAChK02C,EAAOp6C,IAGXmtB,EAAKD,SAAU,EACfC,EAAK1uB,OAAS47C,EAAkBzP,EACpC,EC7CJ,MACM0P,GAAoB,uGAanBn7C,eAAeo7C,GAAU3mC,GAC5B,OAAO,IAAIH,SAASC,IAChBE,EAAM4mC,SAAU,EAChB,MAAM3mC,EAAM,IAAI4mC,MAChB7mC,EAAM9R,QAAU+R,EAChBA,EAAIC,iBAAiB,QAAQ,KACzBF,EAAM4mC,SAAU,EAChB9mC,GAAS,IAEbG,EAAIC,iBAAiB,SAAS,KAC1BF,EAAM9R,aAAUjK,EAChB+b,EAAMlW,OAAQ,EACdkW,EAAM4mC,SAAU,EAChBx8C,KAAYN,MAAM,GAAGpI,oBAA8Bse,EAAMvb,UACzDqb,GAAS,IAEbG,EAAII,IAAML,EAAMvb,MAAM,GAE9B,CACO8G,eAAeu7C,GAAiB9mC,GACnC,GAAmB,QAAfA,EAAM+D,KAEN,kBADM4iC,GAAU3mC,GAGpBA,EAAM4mC,SAAU,EAChB,MAAM3d,QAAiBC,MAAMlpB,EAAMvb,QAC9BwkC,EAASE,GAKVnpB,EAAM+mC,cAAgB9d,EAAS+d,QAJ/B58C,KAAYN,MAAM,GAAGpI,qBACrBse,EAAMlW,OAAQ,GAKlBkW,EAAM4mC,SAAU,CACpB,CACO,SAASK,GAAkBjnC,EAAOknC,EAAW5xC,EAAOxF,GACvD,MAAMq3C,EAhDV,SAAyBC,EAAY9xC,EAAOmC,GACxC,MAAM,QAAEsvC,GAAYK,EACpB,IAAKL,EACD,MAAO,GAEX,MAAMM,EAAa3vC,GAAgBpC,EAAOmC,GAC1C,GAAIsvC,EAAQ7T,SAAS,QACjB,OAAO6T,EAAQzX,QAAQoX,IAAmB,IAAMW,IAEpD,MAAMC,EAAeP,EAAQz7C,QAAQ,KACrC,MAAO,GAAGy7C,EAAQQ,UAZF,EAYyBD,YAAuBD,KAAcN,EAAQQ,UAAUD,IACpG,CAqC2BE,CAAgBxnC,EAAO1K,EAAOxF,EAAS2H,SAAS/P,OAlDnC,GAkD6D+/C,EAAW,CACxGnyC,QACAoyC,IAAKR,EAAUQ,IACfxnD,KAAM,IACC8f,EACH+mC,QAASI,GAEbQ,QAAQ,EACRzlB,MAAOglB,EAAUr+C,MAAQq+C,EAAUp+C,OACnC8+C,aAAcV,EAAUU,aACxBnjD,OAAQyiD,EAAU7mC,KAEtB,OAAO,IAAIR,SAAQC,IACf,MAAM+nC,EAAM,IAAIC,KAAK,CAACX,GAAiB,CAAEpjC,KAAM,kBAAoBgkC,EAASC,KAAOj9C,OAAOi9C,KAAOj9C,OAAOk9C,WAAal9C,OAAQg+B,EAAMgf,EAAOG,gBAAgBL,GAAM5nC,EAAM,IAAI4mC,MAC1K5mC,EAAIC,iBAAiB,QAAQ,KACzBunC,EAASE,QAAS,EAClBF,EAASv5C,QAAU+R,EACnBH,EAAQ2nC,GACRM,EAAOI,gBAAgBpf,EAAI,IAc/B9oB,EAAIC,iBAAiB,SAAS,KAZT3U,WACjBw8C,EAAOI,gBAAgBpf,GACvB,MAAMqf,EAAO,IACNpoC,EACHlW,OAAO,EACP88C,SAAS,SAEPD,GAAUyB,GAChBX,EAASE,QAAS,EAClBF,EAASv5C,QAAUk6C,EAAKl6C,QACxB4R,EAAQ2nC,EAAS,EAEoBY,EAAc,IACvDpoC,EAAII,IAAM0oB,CAAG,GAErB,CCtFO,MAAMuf,GAAmB,CAAC,EAAG,EAAG,EAAG,GAC7BC,GAAiB,CAAC,EAAG,EAAG,EAAG,GCDjC,MAAMC,GACTnlD,YAAYolD,GACRhlD,KAAKmX,IAAM,EACXnX,KAAKvD,KAAO,IAAIwoD,kBAAkBD,EACtC,CACAE,UAAU33C,GACN,MAAMsyC,EAAQ7/C,KAAKvD,KAAKojD,MAAM7/C,KAAKmX,IAAKnX,KAAKmX,IAAM5J,GAEnD,OADAvN,KAAKmX,KAAO0oC,EAAM1/C,OACX0/C,EAAMsF,QAAO,CAACC,EAAKC,IAASD,EAAME,OAAOC,aAAaF,IAAO,GACxE,CACAG,WACI,OAAOxlD,KAAKvD,KAAKuD,KAAKmX,MAC1B,CACAsuC,eAGI,OADAzlD,KAAKmX,KADa,EAEXnX,KAAKvD,KAAKuD,KAAKmX,IAFJ,IAEwBnX,KAAKvD,KAAKuD,KAAKmX,IAFzB,IAAW,EAG/C,CACAuuC,gBACI,IAAIC,EAAc,GAAIxgD,EAAO,EAE7B,EAAG,CACCA,EAAOnF,KAAKvD,KAAKuD,KAAKmX,OACtB,IAAK,IAAI5J,EAAQpI,IAAQoI,GAHZ,EAG+Bo4C,GAAeL,OAAOC,aAAavlD,KAAKvD,KAAKuD,KAAKmX,SAElG,OALgC,IAKvBhS,GACT,OAAOwgD,CACX,CACAC,mBACI,IAAIzgD,EAAOnF,KAAKvD,KAAKuD,KAAKmX,KAAM0uC,EAAM,EAEtC,IAAK,IAAIn9C,EAAS,EADA,IACGvD,EAAoBuD,GAAUvD,EADlB,EACoCA,EAAOnF,KAAKvD,KAAKuD,KAAKmX,IAAMzO,GAC7Fm9C,GAAO1gD,EAEX,MAAM2gD,EAAY,IAAIC,WAAWF,GACjC1gD,EAAOnF,KAAKvD,KAAKuD,KAAKmX,OACtB,IAAK,IAAI+iB,EAAI,EANK,IAMF/0B,EAAoBA,EAAOnF,KAAKvD,KAAKuD,KAAKmX,OACtD,IAAK,IAAI5J,EAAQpI,IAAQoI,GAPX,EAO+Bu4C,EAAU5rB,KAAOl6B,KAAKvD,KAAKuD,KAAKmX,QAGjF,OAAO2uC,CACX,CACAE,gBACI,IAAK,MAAMC,EAAY,EAAGC,EAAS,EAAGlmD,KAAKvD,KAAKuD,KAAKmX,OAAS+uC,EAAQlmD,KAAKmX,KAAOnX,KAAKvD,KAAKuD,KAAKmX,KAAO8uC,GAExGjmD,KAAKmX,KACT,EC9CG,IAAIgvC,GCAAC,IDCX,SAAWD,GACPA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAAkC,kBAAI,GAAK,oBAC1DA,EAAeA,EAAgC,gBAAI,GAAK,kBACxDA,EAAeA,EAA2B,WAAI,GAAK,aACnDA,EAAeA,EAA2B,WAAI,GAAK,aACnDA,EAAeA,EAA2B,WAAI,GAAK,aACnDA,EAAeA,EAA2B,WAAI,GAAK,YACtD,CATD,CASGA,KAAmBA,GAAiB,CAAC,ICTxC,SAAWC,GACPA,EAAeA,EAA0B,UAAI,IAAM,YACnDA,EAAeA,EAAqC,qBAAI,KAAO,uBAC/DA,EAAeA,EAAyC,yBAAI,KAAO,2BACnEA,EAAeA,EAAmC,mBAAI,GAAK,qBAC3DA,EAAeA,EAAiC,iBAAI,KAAO,mBAC3DA,EAAeA,EAAsB,MAAI,IAAM,QAC/CA,EAAeA,EAA0B,UAAI,IAAM,WACtD,CARD,CAQGA,KAAmBA,GAAiB,CAAC,ICJxC,MAAM,GACC,EADD,GAEC,EAEP,SAASC,GAAgBC,EAAY/4C,GACjC,MAAMg5C,EAAS,GACf,IAAK,IAAIrsB,EAAI,EAAGA,EAAI3sB,EAAO2sB,IACvBqsB,EAAOplC,KAAK,CACRtd,EAAGyiD,EAAW7pD,KAAK6pD,EAAWnvC,KAC9B3E,EAAG8zC,EAAW7pD,KAAK6pD,EAAWnvC,IAAM,GACpCzE,EAAG4zC,EAAW7pD,KAAK6pD,EAAWnvC,IAAM,KAExCmvC,EAAWnvC,KAAO,EAEtB,OAAOovC,CACX,CAwLAz+C,eAAe0+C,GAAWF,EAAYrC,EAAKwC,EAAUC,EAAeC,EAAsBC,GACtF,OAAQN,EAAWd,YACf,KAAKY,GAAeS,UAChB,OAAO,EACX,KAAKT,GAAehD,YAlI5Bt7C,eAA+Bw+C,EAAYrC,EAAKwC,EAAUC,EAAeC,EAAsBC,GAC3F,MAAMnlB,EAAQwiB,EAAI6C,OAAOJ,GAAc,IACvCjlB,EAAMx4B,KAAOq9C,EAAWb,eACxBhkB,EAAMz4B,IAAMs9C,EAAWb,eACvBhkB,EAAMr8B,MAAQkhD,EAAWb,eACzBhkB,EAAMp8B,OAASihD,EAAWb,eAC1B,MAAMsB,EAAaT,EAAWd,WAAYwB,EAA8C,MAAV,IAAbD,GAA6BE,EAAyC,KAAV,GAAbF,GAChHtlB,EAAMylB,SAAmC,KAAV,GAAbH,GAClBtlB,EAAM0lB,UAAyB,GAAbJ,KAAuB,EACzC,MAAMK,EAAkB,GAAyB,GAAL,EAAbL,GAC3BC,IACAvlB,EAAM4lB,gBAAkBhB,GAAgBC,EAAYc,IAExD,MAAME,EAAYh/C,IACd,MAAM,EAAEzE,EAAC,EAAE2O,EAAC,EAAEE,IAAOs0C,EAAsBvlB,EAAM4lB,gBAAkBpD,EAAIsD,kBAAkBj/C,GACzF,OAAIA,IAAUq+C,EAAqB,MACxB,CAAE9iD,IAAG2O,IAAGE,IAAG+E,EAAG,KAElB,CAAE5T,IAAG2O,IAAGE,IAAG+E,EAAGgvC,MAAe5iD,EAAI2O,EAAIE,GAAK,GAAK,EAAG,EAEvD6J,EAAQ,MACV,IACI,OAAO,IAAIirC,UAAU/lB,EAAMr8B,MAAOq8B,EAAMp8B,OAAQ,CAAEoiD,WAAY,QAOlE,CALA,MAAOphD,GACH,GAAIA,aAAiBqhD,cAA+B,mBAAfrhD,EAAMwe,KACvC,OAAO,KAEX,MAAMxe,CACV,CACH,EAVa,GAWd,GAAa,MAATkW,EACA,MAAM,IAAIorC,UAAU,8BAExB,MAAMC,EAActB,EAAWd,WAAY/B,EAAY6C,EAAWV,mBAAoBiC,EAAY,GAAKD,EACjGE,EAAW,CAAC3wC,EAAK0uC,KACnB,MAAMkC,EAAU5wC,IAAQ,EAAG6wC,EAAe,EAAN7wC,EACpC,OAAUssC,EAAUsE,IAAYtE,EAAUsE,EAAU,IAAM,IAAMtE,EAAUsE,EAAU,IAAM,KACnF,GAAKlC,GAAO,GAAMmC,KACrBA,CAAO,EAEf,GAAIf,EAAgB,CAChB,IAAK,IAAIgB,EAAO,EAAG9iD,EAAOyiD,EAAc,EAAGzwC,EAAM,EAAG+wC,EAAM,CAAC,CAAC,IAAKC,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACzF,GAAItD,GAAiBsD,GAAQ1mB,EAAMp8B,OAAQ,CACvC,IAAI+iD,EAAW,EAAGC,EAAY,EAAGC,GAAO,EACxC,MAAQA,GAAM,CACV,MAAMC,EAAON,EAGb,GAFAA,EAAOH,EAAS3wC,EAAKhS,GACrBgS,GAAOhS,EAAO,EACV8iD,IAASJ,EAAW,CACpB1iD,EAAOyiD,EAAc,EACrBM,EAAI/nD,OAAS0nD,EAAY,EACzB,IAAK,IAAI3tB,EAAI,EAAGA,EAAIguB,EAAI/nD,OAAQ+5B,IAC5BguB,EAAIhuB,GAAKA,EAAI2tB,EAAY,CAAC3tB,GAAK,EAEvC,KACK,CACG+tB,GAAQC,EAAI/nD,OACZ+nD,EAAI/mC,KAAK+mC,EAAIK,GAAMC,OAAON,EAAIK,GAAM,KAE/BA,IAASV,GACdK,EAAI/mC,KAAK+mC,EAAIK,GAAMC,OAAON,EAAID,GAAM,KAExC,IAAK,MAAMt7C,KAAQu7C,EAAID,GAAO,CAC1B,MAAM,EAAEpkD,EAAC,EAAE2O,EAAC,EAAEE,EAAC,EAAE+E,GAAM6vC,EAAS36C,GAChC4P,EAAM9f,KAAKoT,IAAI,CAAChM,EAAG2O,EAAGE,EAAG+E,GAAIotC,GAAiBsD,GAAQ1mB,EAAMr8B,MACxD0/C,GAAeqD,GAAQE,EACtBD,GAA0B,EAAd3mB,EAAMr8B,QACvBgjD,GAAY,CAChB,CACIF,EAAI/nD,SAAW,GAAKgF,GAAQA,EAAO,IACnCA,GAER,CACIijD,IAA2B,EAAd3mB,EAAMr8B,OAAaijD,EAAY,KAC5CA,IACIxD,GAAiBsD,GAAQrD,GAAeqD,GAAQE,GAAa5mB,EAAMp8B,SACnEijD,GAAO,GAGnB,CACJ,CACA1B,IAAmBN,EAAWnvC,KAAOmvC,EAAW7pD,KAAK0D,OAAS,GAAIumD,GAAc,GAAS,EAAGnqC,EAAO,CAAEnc,EAAGqhC,EAAMx4B,KAAMnJ,EAAG2hC,EAAMz4B,KAAO,CAAE5D,MAAO6+C,EAAI7+C,MAAOC,OAAQ4+C,EAAI5+C,QACxK,CACAo8B,EAAMllB,MAAQA,EACdklB,EAAMgnB,aAAeC,kBAAkBnsC,EAC3C,KACK,CACD,IAAI0rC,EAAO,EAAG9iD,EAAOyiD,EAAc,EAAGzwC,EAAM,EAAGixC,GAAY,EAAGE,GAAO,EACrE,MAAMJ,EAAM,CAAC,CAAC,IACd,MAAQI,GAAM,CACV,MAAMC,EAAON,EAGb,GAFAA,EAAOH,EAAS3wC,EAAKhS,GACrBgS,GAAOhS,EACH8iD,IAASJ,EAAW,CACpB1iD,EAAOyiD,EAAc,EACrBM,EAAI/nD,OAAS0nD,EAAY,EACzB,IAAK,IAAI3tB,EAAI,EAAGA,EAAIguB,EAAI/nD,OAAQ+5B,IAC5BguB,EAAIhuB,GAAKA,EAAI2tB,EAAY,CAAC3tB,GAAK,EAEvC,KACK,CACD,GAAI+tB,IAASJ,EAAY,EAAG,CACxBS,GAAO,EACP,KACJ,CACIL,GAAQC,EAAI/nD,OACZ+nD,EAAI/mC,KAAK+mC,EAAIK,GAAMC,OAAON,EAAIK,GAAM,KAE/BA,IAASV,GACdK,EAAI/mC,KAAK+mC,EAAIK,GAAMC,OAAON,EAAID,GAAM,KAExC,IAAK,MAAMt7C,KAAQu7C,EAAID,GAAO,CAC1B,MAAM,EAAEpkD,EAAC,EAAE2O,EAAC,EAAEE,EAAC,EAAE+E,GAAM6vC,EAAS36C,GAChC4P,EAAM9f,KAAKoT,IAAI,CAAChM,EAAG2O,EAAGE,EAAG+E,GAAK2wC,GAAY,EAC9C,CACIF,EAAI/nD,QAAU,GAAKgF,GAAQA,EAAO,IAClCA,GAER,CACJ,CACAs8B,EAAMllB,MAAQA,EACdklB,EAAMgnB,aAAeC,kBAAkBnsC,GACvCqqC,KAAoBN,EAAWnvC,IAAM,GAAKmvC,EAAW7pD,KAAK0D,OAAQumD,GAAc,GAAS,EAAGjlB,EAAMllB,MAAO,CAAEnc,EAAGqhC,EAAMx4B,KAAMnJ,EAAG2hC,EAAMz4B,KAAO,CAAE5D,MAAO6+C,EAAI7+C,MAAOC,OAAQ4+C,EAAI5+C,QAC9K,CACJ,CAMkBsjD,CAAgBrC,EAAYrC,EAAKwC,EAAUC,EAAeC,EAAsBC,GACtF,MACJ,KAAKR,GAAewC,WA9L5B,SAA6BtC,EAAYrC,EAAKyC,EAAeC,GACzD,OAAQL,EAAWd,YACf,KAAKY,GAAeyC,yBAA0B,CAC1C,MAAMpnB,EAAQwiB,EAAI6C,OAAOJ,GAAc,IACvCJ,EAAWnvC,MACX,MAAM4vC,EAAaT,EAAWd,WAC9B/jB,EAAMqnB,YAA2B,IAAb/B,KAAuB,EAC3CtlB,EAAMsnB,gBAA+B,GAAbhC,KAAuB,EAC/CtlB,EAAMunB,mBAA0C,IAAP,EAAbjC,GAC5B,MAAMkC,EAAwC,IAAP,EAAblC,GAC1BtlB,EAAMt0B,UAAwC,GAA5Bm5C,EAAWb,eAC7B,MAAMyD,EAAoB5C,EAAWd,WACjCyD,GACAtC,EAAqBuC,GAEzB5C,EAAWnvC,MACX,KACJ,CACA,KAAKivC,GAAe+C,qBAAsB,CACtC7C,EAAWnvC,MACX,MAAMiyC,EAAuB,CACzBv/B,WAAYy8B,EAAWpB,UAAU,GACjCmE,mBAAoB/C,EAAWpB,UAAU,GACzCzoD,KAAM6pD,EAAWV,oBAErB3B,EAAIqF,sBAAsBnoC,KAAKioC,GAC/B,KACJ,CACA,KAAKhD,GAAemD,iBAChBtF,EAAIuF,SAASroC,KAAK,CAACulC,GAAc,GAAQJ,EAAWZ,kBACpD,MAEJ,KAAKU,GAAeqD,mBAChB,GAAoC,IAAhCxF,EAAIsD,iBAAiBpnD,OACrB,MAAM,IAAIwnD,UAAU,mDAExBrB,EAAWnvC,MACX8sC,EAAI6C,OAAOJ,GAAc,IAAQgD,cAAgB,CAC7CzgD,KAAMq9C,EAAWb,eACjBz8C,IAAKs9C,EAAWb,eAChBrgD,MAAOkhD,EAAWb,eAClBpgD,OAAQihD,EAAWb,eACnBkE,SAAU,CACNvkD,MAAOkhD,EAAWb,eAClBpgD,OAAQihD,EAAWb,gBAEvBmE,gBAAiBtD,EAAWd,WAC5B5kC,gBAAiB0lC,EAAWd,WAC5BjC,KAAM+C,EAAWZ,iBAErB,MAEJ,QACIY,EAAWN,gBAGvB,CAuIY6D,CAAoBvD,EAAYrC,EAAKyC,EAAeC,GACpD,MACJ,QACI,MAAM,IAAIgB,UAAU,yBAE5B,OAAO,CACX,CAiMO7/C,eAAegiD,GAAavtC,GAC/B,GAAmB,QAAfA,EAAM+D,KAAV,CAIA/D,EAAM4mC,SAAU,EAChB,IACI5mC,EAAMwtC,cA9LPjiD,eAAyBkiD,EAAQpD,EAAkBH,GACjDA,IACDA,GAAW,GACf,MAAM5/C,QAAY4+B,MAAMukB,GACxB,IAAKnjD,EAAI6+B,IAAqB,MAAf7+B,EAAI8G,OACf,MAAM,IAAIg6C,UAAU,kBAExB,MAAMsC,QAAepjD,EAAIqjD,cACnBjG,EAAM,CACR7+C,MAAO,EACPC,OAAQ,EACR8kD,UAAW,EACXC,SAAU,EACVC,iBAAkB,EAClBvD,OAAQ,GACRI,UAAU,EACVK,iBAAkB,GAClB1mC,gBAAiB,IAAI2mC,UAAU,EAAG,EAAG,CAAEC,WAAY,SACnD+B,SAAU,GACVF,sBAAuB,IACxBhD,EAAa,IAAIvB,GAAW,IAAIE,kBAAkBgF,IACrD,GAAgC,WAA5B3D,EAAWpB,UAAU,GACrB,MAAM,IAAIzkD,MAAM,4BAEpBwjD,EAAI7+C,MAAQkhD,EAAWb,eACvBxB,EAAI5+C,OAASihD,EAAWb,eACxB,MAAMsB,EAAaT,EAAWd,WAAY8E,EAA+C,MAAV,IAAbvD,GAClE9C,EAAImG,UAAyB,IAAbrD,KAAuB,EACvC9C,EAAIiD,SAAgC,IAAP,EAAbH,GAChB,MAAMwD,EAAmB,GAAyB,GAAL,EAAbxD,GAAsByD,EAAuBlE,EAAWd,WACxFvB,EAAIoG,iBAAmB/D,EAAWd,WACL,IAAzBvB,EAAIoG,mBACJpG,EAAIoG,kBAAoBpG,EAAIoG,iBAAmB,IAAO,IAEtDC,IACArG,EAAIsD,iBAAmBlB,GAAgBC,EAAYiE,IAEvD,MAAM1pC,EAAkB,MACpB,IACI,OAAO,IAAI2mC,UAAUvD,EAAI7+C,MAAO6+C,EAAI5+C,OAAQ,CAAEoiD,WAAY,QAO9D,CALA,MAAOphD,GACH,GAAIA,aAAiBqhD,cAA+B,mBAAfrhD,EAAMwe,KACvC,OAAO,KAEX,MAAMxe,CACV,CACH,EAVuB,GAWxB,GAAuB,MAAnBwa,EACA,MAAM,IAAIpgB,MAAM,8BAEpB,MAAM,EAAEoD,EAAC,EAAE2O,EAAC,EAAEE,GAAMuxC,EAAIsD,iBAAiBiD,GACzC3pC,EAAgBpkB,KAAKoT,IAAIy6C,EAAuB,CAACzmD,EAAG2O,EAAGE,EAAG,KAAO,CAAC,EAAG,EAAG,EAAG,IAC3E,IAAK,IAAIwnB,EAAI,EAAGA,EAAIrZ,EAAgBpkB,KAAK0D,OAAQ+5B,GAAK,EAClDrZ,EAAgBpkB,KAAKguD,WAAWvwB,EAAG,EAAGA,GAE1C+pB,EAAIpjC,gBAAkBA,EACtB,IAAI6pC,GAAc,EAAGC,GAAsB,EAAMzB,GAAqB,EACtE,MAAM0B,EAAiB3E,IACfA,IACA0E,GAAsB,GAEnBD,GAEL/D,EAAwBjtC,IACV,MAAZA,IACAwvC,EAAoBxvC,GAEjBwvC,GAEX,IACI,GACQyB,IACA1G,EAAI6C,OAAO3lC,KAAK,CACZlY,KAAM,EACND,IAAK,EACL5D,MAAO,EACPC,OAAQ,EACR0jD,eAAgB5C,GAAe0E,QAC/BtuC,MAAO,IAAIirC,UAAU,EAAG,EAAG,CAAEC,WAAY,SACzCiC,cAAe,KACfV,oBAAoB,EACpB77C,UAAW,EACX+5C,UAAU,EACVG,gBAAiB,GACjBF,SAAU,EACV2B,WAAY,IAEhB4B,IACAxB,GAAqB,EACrByB,GAAsB,gBAEbnE,GAAWF,EAAYrC,EAAKwC,EAAUmE,EAAejE,EAAsBC,IAC5F3C,EAAI6C,OAAO3mD,SACX,IAAK,MAAMshC,KAASwiB,EAAI6C,OAAQ,CAC5B,GAAIrlB,EAAMunB,oBAA0C,IAApBvnB,EAAMt0B,UAAiB,CACnD82C,EAAIkG,UAAYp+B,IAChB,KACJ,CACAk4B,EAAIkG,WAAa1oB,EAAMt0B,SAC3B,CACA,OAAO82C,CAOX,CALA,MAAO59C,GACH,GAAIA,aAAiBshD,UACjB,MAAM,IAAIlnD,MAAM,6BAA6BiqD,MAAerkD,EAAMykD,YAEtE,MAAMzkD,CACV,CACJ,CAiF8B0kD,CAAUxuC,EAAMvb,QACtCub,EAAMyuC,aAxMP,SAA0B/G,GAC7B,IAAK,MAAMgH,KAAahH,EAAIqF,sBACxB,GAAI2B,EAAUphC,WAAaohC,EAAU5B,qBAAuB,cAG5D,OAAO4B,EAAUxuD,KAAK,IAAMwuD,EAAUxuD,KAAK,IAAM,GAErD,OAAOyuD,GACX,CAgM6BC,CAAiB5uC,EAAMwtC,UA3ZiC,EA4ZxExtC,EAAMyuC,eACPzuC,EAAMyuC,aAAej/B,IAK7B,CAFA,MACIxP,EAAMlW,OAAQ,CAClB,CACAkW,EAAM4mC,SAAU,CAZhB,YAFUD,GAAU3mC,EAexB,CCxaO,MAAM6uC,GACTxrD,YAAYyR,GACRrR,KAAK+kC,WAAa,CAAC,QAAS,UAC5B/kC,KAAKqrD,eAAiBvjD,MAAO67C,IACzB,IAAK3jD,KAAK4b,QAAQsnC,UACd,MAAM,IAAIziD,MAAM,GAAGxC,uCAEjB+B,KAAK4b,QAAQsnC,UAAU,CACzBe,IAAKN,EAAWM,IAChBp/B,KAAM8+B,EAAW9+B,KACjBs/B,aAAcR,EAAWQ,eAAgB,EACzCvnC,IAAK+mC,EAAW/mC,KAClB,EAEN5c,KAAK4b,QAAUvK,CACnB,CACAi6C,SAAS/uC,GACAvc,KAAK4b,QAAQ2vC,SACdvrD,KAAK4b,QAAQ2vC,OAAS,IAE1BvrD,KAAK4b,QAAQ2vC,OAAOpqC,KAAK5E,EAC7B,CACA3D,KAAKnc,GACD,MAAM,QAAEyZ,EAAO,OAAEvN,EAAM,SAAE0D,EAAQ,QAAE2H,GAAYvX,EAAM8f,EAAQlQ,EAASkQ,MAAO9R,EAAU8R,GAAO9R,QAC9F,GAAK8R,EAAL,CAIA,GADArG,EAAQ2H,YAAc7J,EAClBuI,EAAM0nC,KAAO1nC,EAAMwtC,SDkTxB,SAAiBttD,GACpB,MAAM,QAAEyZ,EAAO,OAAEvN,EAAM,SAAE0D,EAAQ,MAAEwC,GAAUpS,EAAM8f,EAAQlQ,EAASkQ,MACpE,IAAKA,GAAOwtC,UAAYxtC,EAAM0nC,IAC1B,OAEJ,MAAMuH,EAAkB,IAAIvS,gBAAgB18B,EAAMwtC,QAAQ3kD,MAAOmX,EAAMwtC,QAAQ1kD,QAASomD,EAAmBD,EAAgBtpC,WAAW,MACtI,IAAKupC,EACD,MAAM,IAAIhrD,MAAM,6CAEpBgrD,EAAiBC,sBAAwB,MACzCD,EAAiBE,uBAAwB,EACzCF,EAAiB90C,UAAU,GAAU,GAAU60C,EAAgBpmD,MAAOomD,EAAgBnmD,aACxD7E,IAA1B6L,EAAS2+C,eACT3+C,EAAS2+C,aAAezuC,EAAMyuC,cAvV+C,GAyVjF,IAAIN,EAAar+C,EAASu/C,UAzVZ,EA0Vd,MAAMz0C,EAAM,CAAE/W,EA1VU,IA0VNmc,EAAMwtC,QAAQ3kD,MAActF,EA1VtB,IA0V0Byc,EAAMwtC,QAAQ1kD,QAAiBo8B,EAAQllB,EAAMwtC,QAAQjD,OAAO4D,GAI9G,QAHyBlqD,IAArB6L,EAASw/C,UACTx/C,EAASw/C,QA5V8B,GA8VtCpqB,EAAMgnB,OAAX,CAIA,OADAvyC,EAAQ41C,MAAMnjD,EAAS4T,EAAMwtC,QAAQ3kD,MAAOuD,EAAS4T,EAAMwtC,QAAQ1kD,QAC3Do8B,EAAMsnB,gBACV,KAAK5C,GAAe4F,WACpB,KAAK5F,GAAe6F,WACpB,KAAK7F,GAAe8F,WACpB,KAAK9F,GAAe+F,WACpB,KAAK/F,GAAe0E,QAChBY,EAAiB3tC,UAAU2jB,EAAMgnB,OAAQhnB,EAAMx4B,KAAMw4B,EAAMz4B,KAC3DkN,EAAQ4H,UAAU0tC,EAAiBr0C,EAAI/W,EAAG+W,EAAIrX,GAC9C2rD,EAAiB90C,UAAU,GAAU,GAAU60C,EAAgBpmD,MAAOomD,EAAgBnmD,QACtF,MACJ,KAAK8gD,GAAegG,QAChBV,EAAiB3tC,UAAU2jB,EAAMgnB,OAAQhnB,EAAMx4B,KAAMw4B,EAAMz4B,KAC3DkN,EAAQ4H,UAAU0tC,EAAiBr0C,EAAI/W,EAAG+W,EAAIrX,GAC9C,MACJ,KAAKqmD,GAAeiG,kBAChBX,EAAiB3tC,UAAU2jB,EAAMgnB,OAAQhnB,EAAMx4B,KAAMw4B,EAAMz4B,KAC3DkN,EAAQ4H,UAAU0tC,EAAiBr0C,EAAI/W,EAAG+W,EAAIrX,GAC9C2rD,EAAiB90C,UAAU,GAAU,GAAU60C,EAAgBpmD,MAAOomD,EAAgBnmD,QACjFkX,EAAMwtC,QAAQxC,iBAAiBpnD,OAIhCsrD,EAAiBY,aAAa9vC,EAAMwtC,QAAQlpC,gBAAiB1J,EAAI/W,EAAG+W,EAAIrX,GAHxE2rD,EAAiBY,aAAa9vC,EAAMwtC,QAAQjD,OArXG,GAqXgBvqC,MAAOpF,EAAI/W,EAAIqhC,EAAMx4B,KAAMkO,EAAIrX,EAAI2hC,EAAMz4B,KAK5G,MACJ,KAAKm9C,GAAemG,gBAChB,CACI,MAAMC,EAAoBd,EAAiBe,aAAa,GAAU,GAAUhB,EAAgBpmD,MAAOomD,EAAgBnmD,QACnHomD,EAAiB3tC,UAAU2jB,EAAMgnB,OAAQhnB,EAAMx4B,KAAMw4B,EAAMz4B,KAC3DkN,EAAQ4H,UAAU0tC,EAAiBr0C,EAAI/W,EAAG+W,EAAIrX,GAC9C2rD,EAAiB90C,UAAU,GAAU,GAAU60C,EAAgBpmD,MAAOomD,EAAgBnmD,QACtFomD,EAAiBY,aAAaE,EAAmB,GAAU,GAC/D,EAIR,GADAlgD,EAASw/C,SAAWh9C,EAAM5K,MACtBoI,EAASw/C,QAAUpqB,EAAMt0B,UAAW,CAEpC,GADAd,EAASw/C,SAAWpqB,EAAMt0B,YACpBu9C,GAAcnuC,EAAMwtC,QAAQjD,OAAO3mD,OAAQ,CAC7C,KAAMkM,EAAS2+C,cAzY0D,EA0YrE,OAEJN,EA5YmD,EA6YnDe,EAAiB90C,UAAU,GAAU,GAAU60C,EAAgBpmD,MAAOomD,EAAgBnmD,OAC1F,CACAgH,EAASu/C,SAAWlB,CACxB,CACAx0C,EAAQ41C,MAAMvvC,EAAMwtC,QAAQ3kD,MAAQuD,EAAQ4T,EAAMwtC,QAAQ1kD,OAASsD,EAjDnE,CAkDJ,CCzXY8jD,CAAQhwD,QAEP,GAAIgO,EAAS,CACd,MAAMg0B,EAAQliB,EAAMkiB,MAAOtnB,EAAM,CAC7B/W,GAAIuI,EACJ7I,GAAI6I,GACLwqB,EApCA,EAoCWxqB,EACduN,EAAQ4H,UAAUrT,EAAS0M,EAAI/W,EAAG+W,EAAIrX,EAAGqzB,EAAUA,EAAWsL,EAClE,CACAvoB,EAAQ2H,YAvCiB,CA2BzB,CAaJ,CACA6a,gBACI,OA1CoC,EA2CxC,CACA5wB,WAAW+O,GACP,MAAM1L,EAAU0L,EAAUmF,cAC1B,GAAK7Q,EAAQuhD,SAAY1sD,KAAK4b,QAAQsnC,UAGtC,IAAK,MAAMO,KAAat4C,EAAQuhD,cACtB1sD,KAAK4b,QAAQsnC,UAAUO,EAErC,CACAjrB,UAAUnsB,GACN,GAAuB,UAAnBA,EAASoM,OAAwC,WAAnBpM,EAASoM,MACvC,OAECzY,KAAK4b,QAAQ2vC,SACdvrD,KAAK4b,QAAQ2vC,OAAS,IAE1B,MAAM9H,EAAYp3C,EAASmrB,UAC3B,IAAKisB,EACD,OAEUzjD,KAAK4b,QAAQ2vC,OAAO1+C,MAAM7C,GAAMA,EAAE6a,OAAS4+B,EAAU5+B,MAAQ7a,EAAEhJ,SAAWyiD,EAAU7mC,OAEzF5c,KAAKqrD,eAAe5H,GAAWlc,MAAK,KACrCvnC,KAAKw4B,UAAUnsB,EAAS,GAGpC,CACAwsB,aAAahiB,EAAWxK,GACpB,GAAuB,UAAnBA,EAASoM,OAAwC,WAAnBpM,EAASoM,MACvC,OAECzY,KAAK4b,QAAQ2vC,SACdvrD,KAAK4b,QAAQ2vC,OAAS,IAE1B,MAAMA,EAASvrD,KAAK4b,QAAQ2vC,OAAQ9H,EAAYp3C,EAASmrB,UACzD,IAAKisB,EACD,OAEJ,MAAM5xC,EAAQxF,EAASuI,eAAgB2H,EAAQgvC,EAAO1+C,MAAM7C,GAAMA,EAAE6a,OAAS4+B,EAAU5+B,MAAQ7a,EAAEhJ,SAAWyiD,EAAU7mC,MACtH,IAAKL,EACD,OAEJ,MAAM4nC,EAAeV,EAAUU,cAAgB5nC,EAAM4nC,aACjD5nC,EAAM4mC,QACNh/B,YAAW,KACPnkB,KAAK64B,aAAahiB,EAAWxK,EAAS,IAIzC,WACD,IAAI23C,EAEAA,EADAznC,EAAM+mC,SAAWzxC,QACA2xC,GAAkBjnC,EAAOknC,EAAW5xC,EAAOxF,GAGjD,CACPwF,QACApV,KAAM8f,EACN9R,QAAS8R,EAAM9R,QACfw5C,IAAK1nC,EAAM0nC,IACX8F,QAASxtC,EAAMwtC,QACfiB,aAAczuC,EAAMyuC,aACpB9G,QAAQ,EACRzlB,MAAOglB,EAAUr+C,OAASq+C,EAAUp+C,OAC9Bo+C,EAAUr+C,MAAQq+C,EAAUp+C,OAC3BkX,EAAMkiB,OA7G8B,EA8G3C0lB,aAAcA,EACdnjD,OAAQyiD,EAAU7mC,KAGrBonC,EAASvlB,QACVulB,EAASvlB,MAAQ,GAErB,MAAmGklB,EAAa,CAC5GpnC,MAAOynC,EACP9rC,KAFSurC,EAAUvrC,MAAQ7L,EAAS2M,UAGpCsU,MAHuDm2B,EAAUn2B,OAASjhB,EAAS0M,YAKvF1M,EAASkQ,MAAQonC,EAAWpnC,MAC5BlQ,EAAS2M,UAAY2qC,EAAWzrC,KAChC7L,EAAS0M,WAAa4qC,EAAWr2B,KACpC,EAhCI,EAiCT,EChIG,MAAMq/B,GACT/sD,cACII,KAAK4c,IAAM,GACX5c,KAAKikD,KAAM,CACf,CACA97C,KAAK1L,GACGiD,EAAOjD,UAGM+D,IAAb/D,EAAKwnD,MACLjkD,KAAKikD,IAAMxnD,EAAKwnD,UAEAzjD,IAAhB/D,EAAK4I,SACLrF,KAAKqF,OAAS5I,EAAK4I,aAEL7E,IAAd/D,EAAKooB,OACL7kB,KAAK6kB,KAAOpoB,EAAKooB,WAEKrkB,IAAtB/D,EAAK0nD,eACLnkD,KAAKmkD,aAAe1nD,EAAK0nD,mBAEZ3jD,IAAb/D,EAAKmgB,MACL5c,KAAK4c,IAAMngB,EAAKmgB,UAEDpc,IAAf/D,EAAK2I,QACLpF,KAAKoF,MAAQ3I,EAAK2I,OAE1B,EC3BG,MAAMwnD,GACThtD,YAAYyR,GACRrR,KAAKo2B,GAAK,iBACVp2B,KAAK4b,QAAUvK,CACnB,CACAvJ,kBAEI,aADMsU,QAAQC,UACP,CAAC,CACZ,CACAmU,YAAYrlB,EAASnK,GACjB,IAAKA,GAAQ0rD,QACT,OAECvhD,EAAQuhD,UACTvhD,EAAQuhD,QAAU,IAEtB,MAAMG,EAAiB1hD,EAAQuhD,QAC/B,IAAK,MAAM//C,KAAQ3L,EAAO0rD,QAAS,CAC/B,MAAMI,EAAWD,EAAehgD,MAAK7C,GAAKA,EAAE6a,OAASlY,EAAKkY,MAAQ7a,EAAE4S,MAAQjQ,EAAKiQ,MACjF,GAAIkwC,EACAA,EAAS3kD,KAAKwE,OAEb,CACD,MAAM+/C,EAAU,IAAIC,GACpBD,EAAQvkD,KAAKwE,GACbkgD,EAAe1rC,KAAKurC,EACxB,CACJ,CACJ,CACAtnB,cACI,OAAO,CACX,ECcGt9B,eAAeujD,GAAeh6C,EAAQuR,GAAU,GACnDvR,EAAO2zB,aAAa,SAzCxB,SAA8B3zB,GACtBA,EAAO6xC,YAGX7xC,EAAO6xC,UAAYp7C,MAAOrL,IACtB,IAAKA,EAAKooB,OAASpoB,EAAKmgB,IACpB,MAAM,IAAInc,MAAM,GAAGxC,8BAKvB,GAHKoT,EAAOk6C,SACRl6C,EAAOk6C,OAAS,KAEhBl6C,EAAOk6C,OAAO1+C,MAAM7C,GAAMA,EAAE6a,OAASpoB,EAAKooB,MAAQ7a,EAAEhJ,SAAWvE,EAAKmgB,MAGxE,IACI,MAAML,EAAQ,CACV0nC,IAAKxnD,EAAKwnD,MAAO,EACjBp/B,KAAMpoB,EAAKooB,MAAQpoB,EAAKmgB,IACxB5b,OAAQvE,EAAKmgB,IACb0D,KAAM7jB,EAAKmgB,IAAIknC,UAAUrnD,EAAKmgB,IAAIzc,OApBhC,GAqBFkG,OAAO,EACP88C,SAAS,EACTgB,aAAc1nD,EAAK0nD,aACnB1lB,MAAOhiC,EAAK2I,OAAS3I,EAAK4I,OAAS5I,EAAK2I,MAAQ3I,EAAK4I,YAAS7E,GAGlE,IAAIusD,EADJ17C,EAAOk6C,OAAOpqC,KAAK5E,GAGfwwC,EADAtwD,EAAKwnD,IACO6F,GAGArtD,EAAK0nD,aAAed,GAAmBH,SAEjD6J,EAAUxwC,EAIpB,CAFA,MACI,MAAM,IAAI9b,MAAM,GAAGxC,KAAexB,EAAKooB,MAAQpoB,EAAKmgB,gBACxD,GAER,CAGIowC,CAAqB37C,GACrB,MAAM47C,EAAY,IAAIL,GAAqBv7C,SACrCA,EAAO67C,UAAUD,EAAWrqC,SAC5BvR,EAAO0mC,SAAS,IAAIqT,GAAY/5C,GAASuR,EACnD,CCnDO,MAAMuqC,WAAkBvgC,GAC3BhtB,cACIyC,QACArC,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACGiD,EAAOjD,KAGX4F,MAAM8F,KAAK1L,QACO+D,IAAd/D,EAAKmZ,OACL5V,KAAK4V,KAAOnZ,EAAKmZ,MAEzB,ECbG,MAAMw3C,WAAqBxgC,GAC9BhtB,cACIyC,QACArC,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACGiD,EAAOjD,KAGX4F,MAAM8F,KAAK1L,QACO+D,IAAd/D,EAAKmZ,OACL5V,KAAK4V,KAAOnZ,EAAKmZ,MAEzB,ECXG,MAAMy3C,GACTztD,cACII,KAAKuN,MAAQ,EACbvN,KAAKoN,MAAQ,IAAI+/C,GACjBntD,KAAKmxB,SAAW,IAAIi8B,EACxB,CACAjlD,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAK8Q,QACLvN,KAAKuN,MAAQ9Q,EAAK8Q,OAEtBvN,KAAKoN,MAAMjF,KAAK1L,EAAK2Q,OACrBpN,KAAKmxB,SAAShpB,KAAK1L,EAAK00B,UAC5B,ECdG,MAAMm8B,GACT1tD,YAAYiX,GACR7W,KAAK6W,UAAYA,CACrB,CACAsL,KAAK9V,GACD,MAAMwK,EAAY7W,KAAK6W,UAAgD02C,EAAlBlhD,EAASlB,QAAwC6gC,KACjGuhB,IAGLlhD,EAAS2/B,KAAO,CACZ5+B,MAAOyJ,EAAUiC,OAAOxD,aAChBtR,EAAcupD,EAAYngD,MAAMnJ,QAAUspD,EAAYngD,MAAMwI,KAZnD,EAYqE7S,KAC9E8T,EAAUiC,OAAOxD,aACjBnX,EAdL,EAgBHgP,UAhBG,EAiBHgkB,SAAUta,EAAUiC,OAAOxD,aACnBtR,EAAcupD,EAAYp8B,SAASltB,QAAUspD,EAAYp8B,SAASvb,KAlBzD,EAkB2E7S,KACpF8T,EAAUiC,OAAOxD,aACjBnX,EApBL,EAsBHqP,KAtBG,EAuBHD,MAAOggD,EAAYhgD,OAEnBlB,EAAS2/B,KAAK7a,UAzBX,IA0BH9kB,EAAS2/B,KAAK7a,UA1BsB,GA4BpC9kB,EAAS2/B,KAAKz+B,OA5BX,IA6BHlB,EAAS2/B,KAAKz+B,OA7BsB,GA+BpClB,EAAS2/B,OACT3/B,EAAS+S,SAAW/S,EAAS2/B,KAAK5+B,MAhC/B,GAkCX,CACAslB,UAAUrmB,GACN,OAAQA,EAASyC,SACrB,CACA0hB,YAAYrlB,KAAY5B,GACf4B,EAAQ6gC,OACT7gC,EAAQ6gC,KAAO,IAAIqhB,IAEvB,IAAK,MAAMrsD,KAAUuI,EACjB4B,EAAQ6gC,KAAK7jC,KAAKnH,GAAQgrC,KAElC,CACA3O,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IAAcA,EAAS2/B,MChD5C,SAAoB3/B,EAAUwC,EAAOR,GACxC,IAAKhC,EAAS2/B,KACV,OAEJ,MAAMA,EAAO3/B,EAAS2/B,KACtB,IAAIwhB,GAAc,EAClB,GAAInhD,EAAS+S,SAAU,CAEnB,GADA4sB,EAAK7+B,WAAa0B,EAAM5K,QACpB+nC,EAAK7+B,WAAad,EAAS2/B,KAAK5+B,OAOhC,OANAogD,GAAc,EACdnhD,EAAS+S,UAAW,EACpB4sB,EAAK7+B,UAZF,EAaH6+B,EAAKx+B,KAbF,CAkBX,CACA,IAnB8B,IAmB1Bw+B,EAAK7a,SACL,OAEJ,GAAI9kB,EAAS+S,SACT,OAQJ,GANIouC,EACAxhB,EAAKx+B,KA1BE,EA6BPw+B,EAAKx+B,MAAQqB,EAAM5K,MAEnB+nC,EAAKx+B,KAAOw+B,EAAK7a,SACjB,OAMJ,GAJA6a,EAAKx+B,KAlCM,EAmCPnB,EAAS2/B,KAAKz+B,MAnCyB,GAoCvClB,EAAS2/B,KAAKz+B,QApCyB,IAsCvClB,EAAS2/B,KAAKz+B,MAEd,YADAlB,EAAS4C,UAGb,MAAMw+C,EAAavpD,EA1C2C,EA0CdmK,EAAWjJ,OAAQsoD,EAAcxpD,EA1CnB,EA0CgDmK,EAAWjJ,OACzHiH,EAASnH,SAAS9E,EAAIwD,EAAc6pD,GACpCphD,EAASnH,SAASpF,EAAI8D,EAAc8pD,GACpCrhD,EAAS+S,UAAW,EACpB4sB,EAAK7+B,UA9CM,EA+CX6+B,EAAKx+B,KA/CM,EAgDXnB,EAAS0mB,QACT,MAAMw6B,EAAclhD,EAASlB,QAAQ6gC,KACjCuhB,IACAvhB,EAAK5+B,MAAQpJ,EAAcupD,EAAYngD,MAAMnJ,OAAS9F,EACtD6tC,EAAK7a,SAAWntB,EAAcupD,EAAYp8B,SAASltB,OAAS9F,EAEpE,CDFQwvD,CAAWthD,EAAUwC,EAAO7O,KAAK6W,UAAU+C,OAAOzU,KACtD,EEpDG,MAAMyoD,GACThuD,cACII,KAAK+kC,WAAa,CAAC,OACvB,CACAnsB,KAAKnc,ICNF,SAAkBA,GACrB,MAAM,QAAEyZ,EAAO,SAAE7J,EAAQ,OAAE1D,GAAWlM,EAAM+6B,EAAYnrB,EAASmrB,UACjEthB,EAAQI,QAAQ3N,EADsE,GAEtFuN,EAAQK,OAAO5N,EAFuE,GAGtFuN,EAAQ23C,QAAUr2B,GAAWs2B,KAAO,MACxC,CDEQ,CAASrxD,EACb,CACAi8B,gBACI,OATM,CAUV,EETG,MAAMq1B,GACT5rC,OACA,CACAuQ,UAAUrmB,GACN,OAAShF,OACJgF,EAASyC,WACVzC,EAASwK,UAAUmF,cAAcyH,cAAcO,OAAOoC,QAAQ4E,SAAS/gB,MAC/E,CACAmT,KAAK/Q,GACD,MAAMwK,EAAYxK,EAASwK,UAA8Cm3C,EAAzBn3C,EAAUmF,cAAyCyH,cAAcO,OAAOoC,QAAQ4E,SAChI,GAAI3jB,OAAY2mD,EAAgB/jD,OAC5B,OAEJ,MAAMgkD,EAAgBD,EAAgBnjC,MAAOlH,EAAW9M,EAAU4M,cAAcC,MAAMxe,SACtF,IAAKye,EACD,OAEJ,MAAMtV,EAAawI,EAAU+C,OAAOzU,KAAM+oD,EAlBrC,GAmBE7/C,EAAWjJ,MADwB8oD,EAlBrC,GAoBE7/C,EAAWhJ,OACf8oD,EAAiBH,EAAgBljC,OAAQ1jB,EAASiF,EAASrB,YAAcijD,EAAeG,GACnFzqC,EAASvjB,EAAI8tD,GAAkB9mD,EADoDgnD,GAEnFzqC,EAAS7jB,EAAIouD,GAAkB9mD,GACpC,OAAEsB,GAAW2D,EAChB3D,EAAOtI,IAAMguD,EAAmB1lD,EAAOtI,GAAK+tD,EAC5CzlD,EAAO5I,IAAMsuD,EAAmB1lD,EAAO5I,GAAKquD,CAChD,EC1BG,MAAM,WAAkBlnB,GAC3BrnC,YAAYiX,GACRxU,MAAMwU,EACV,CACAJ,QACA,CACA0L,OACA,CACAwQ,SAASnnB,GACL,MAAMqL,EAAY7W,KAAK6W,eACIrW,IAAvBgL,EAAG6iD,kBACH7iD,EAAG6iD,gBAAkBrqD,EAAcwH,EAAGL,QAAQiS,KAAKmR,QAAQ/pB,UAAYqS,EAAUiC,OAAOD,YAE5F,MAAMrU,EAAWgH,EAAG6iD,gBAAiBziD,EAAOJ,EAAGT,cAAetD,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY7uB,EAAMpH,GACrH,IAAK,MAAMiH,KAAMhE,EAAO,CACpB,GAAI+D,IAAOC,IAAOA,EAAGN,QAAQiS,KAAKmR,QAAQtkB,QAAUwB,EAAGqD,WAAarD,EAAG2T,SACnE,SAEJ,MAAMvT,EAAOJ,EAAGV,eAAe,GAAEzG,EAAE,GAAEC,GAAOJ,EAAayH,EAAMC,GAAO9J,EAASyJ,EAAGL,QAAQiS,KAAKmR,QAAQxsB,OAAQusD,EAAKhqD,GAnB1G,IAmBgHvC,EAAO3B,GAAoBmuD,EAAKhqD,GAnBhJ,IAmBsJxC,EAAOjC,GAAoB0uD,EAAW/iD,EAAGtG,KAAKlB,MAAQuH,EAAGrG,KAAKlB,MAAOwqD,EAnB1M,EAmBgOD,EAC3PhjD,EAAGrE,SAAS/G,GAAKkuD,EAAKE,EACtBhjD,EAAGrE,SAASrH,GAAKyuD,EAAKC,EACtB/iD,EAAGtE,SAAS/G,GAAKkuD,EAAKG,EACtBhjD,EAAGtE,SAASrH,GAAKyuD,EAAKE,CAC1B,CACJ,CACA/7B,UAAUrmB,GACN,OAAOA,EAASlB,QAAQiS,KAAKmR,QAAQtkB,MACzC,CACA8oB,QACA,EC7BJ,SAAS27B,GAAaljD,EAAI8G,EAAI7G,EAAIkjD,EAAI9/C,EAAOgK,GACzC,MAAMzR,EAASpE,EAAOwI,EAAGL,QAAQ8kB,WAAW/C,OAAOvX,MAAQ9G,EAAMzH,OAFpC,GAAsB,EAEuDunD,GAC1GnjD,EAAGrG,KAAKlB,OAHC,GAGQmD,EACjBqE,EAAGtG,KAAKlB,OAASmD,EACbunD,GAAM91C,IACNpN,EAAGtG,KAAKlB,MAAQ,EAChBwH,EAAGwD,UAEX,CCTA,MAAM2/C,GAAkB9jD,SACQtK,IAAxBsK,EAAE+jD,oBACF/jD,EAAE+jD,kBAAoB7qD,EAAc8G,EAAEK,QAAQ8kB,WAAW9C,WAEzDriB,EAAE3D,SAAShH,OAAS2K,EAAE+jD,oBACtB/jD,EAAE3D,SAAShH,OAAS2K,EAAE+jD,kBAC1B,EAEG,SAASzjD,GAAOI,EAAIC,GACvBF,GAAaV,GAA6BW,GAAKX,GAA6BY,IAC5EmjD,GAAepjD,GACfojD,GAAenjD,EACnB,CCTO,SAASqjD,GAAiBtjD,EAAIC,EAAIoD,EAAOgK,GAC5C,OAAQrN,EAAGL,QAAQ8kB,WAAWpmB,MAC1B,KAAKiH,GAAcoc,QFKpB,SAAgB1hB,EAAIC,EAAIoD,EAAOgK,GAClC,MAAMvG,EAAK9G,EAAGR,YAAa2jD,EAAKljD,EAAGT,iBACxBxK,IAAP8R,QAA2B9R,IAAPmuD,EACpBnjD,EAAGyD,eAESzO,IAAP8R,QAA2B9R,IAAPmuD,EACzBljD,EAAGwD,eAESzO,IAAP8R,QAA2B9R,IAAPmuD,IACrBr8C,GAAMq8C,EACND,GAAaljD,EAAI8G,EAAI7G,EAAIkjD,EAAI9/C,EAAOgK,GAGpC61C,GAAajjD,EAAIkjD,EAAInjD,EAAI8G,EAAIzD,EAAOgK,GAGhD,CEpBYqU,CAAO1hB,EAAIC,EAAIoD,EAAOgK,GACtB,MAEJ,KAAK/H,GAAc1F,OACfA,GAAOI,EAAIC,GACX,MAEJ,KAAKqF,GAAc7B,SCbpB,SAAiBzD,EAAIC,GACnBD,EAAGoqB,aAAgBnqB,EAAGmqB,aACvBxqB,GAAOI,EAAIC,QAEQjL,IAAnBgL,EAAGR,kBAAgDxK,IAAnBiL,EAAGT,YACnCQ,EAAGyD,eAEqBzO,IAAnBgL,EAAGR,kBAAgDxK,IAAnBiL,EAAGT,YACxCS,EAAGwD,eAEqBzO,IAAnBgL,EAAGR,kBAAgDxK,IAAnBiL,EAAGT,cACxBQ,EAAGR,aAAeS,EAAGT,YAAcS,EAAKD,GAChDyD,SAEhB,CDAYA,CAAQzD,EAAIC,GAIxB,CEhBO,MAAMsjD,WAAiB9nB,GAC1BrnC,YAAYiX,GACRxU,MAAMwU,EACV,CACAJ,QACA,CACA0L,OACA,CACAwQ,SAASnnB,EAAIqD,GACT,GAAIrD,EAAGsD,WAAatD,EAAG4T,SACnB,OAEJ,MAAMvI,EAAY7W,KAAK6W,UAAWjL,EAAOJ,EAAGT,cAAeikD,EAAUxjD,EAAGR,YAAavD,EAAQoP,EAAUsG,UAAU0f,SAASpC,YAAY7uB,EAb/H,EAaqIojD,GAC5I,IAAK,MAAMvjD,KAAMhE,EAAO,CACpB,GAAI+D,IAAOC,IACNA,EAAGN,QAAQ8kB,WAAWhmB,QACvBuB,EAAGL,QAAQ8kB,WAAWpmB,OAAS4B,EAAGN,QAAQ8kB,WAAWpmB,MACrD4B,EAAGqD,WACHrD,EAAG2T,SACH,SAEJ,MAAMvT,EAAOJ,EAAGV,cAAekkD,EAAUxjD,EAAGT,YAC5C,GAAIvM,KAAK86B,IAAI96B,KAAK2U,MAAMxH,EAAK7L,GAAKtB,KAAK2U,MAAMvH,EAAK9L,IAAMivD,EAAUC,EAC9D,SAESxqD,EAAYmH,EAAMC,GAAemjD,EAAUC,GAIxDH,GAAiBtjD,EAAIC,EAAIoD,EAAOgI,EAAUiC,OAAOD,WACrD,CACJ,CACA6Z,UAAUrmB,GACN,OAAOA,EAASlB,QAAQ8kB,WAAWhmB,MACvC,CACA8oB,QACA,ECrCG,MAAMm8B,WAAmB/1B,GAC5Bv5B,YAAYQ,EAAGN,EAAG6I,EAAQ0F,GACtBhM,MAAMjC,EAAGN,EAAG6I,GACZ3I,KAAKqO,WAAaA,EAClBrO,KAAKqO,WAAa,IAAKA,EAC3B,CACA+qB,SAAS3wB,GACL,MAAM,MAAErD,EAAK,OAAEC,GAAWrF,KAAKqO,YAAY,EAAEjO,EAAC,EAAEN,GAAM2I,EACtD,OAAQpG,MAAM+2B,SAAS3wB,IACnBpG,MAAM+2B,SAAS,CAAEh5B,EAAGA,EAAIgF,EAAOtF,OAC/BuC,MAAM+2B,SAAS,CAAEh5B,EAAGA,EAAIgF,EAAOtF,EAAGA,EAAIuF,KACtChD,MAAM+2B,SAAS,CAAEh5B,IAAGN,EAAGA,EAAIuF,GACnC,CACAg0B,WAAWvjB,GACP,GAAIzT,MAAMg3B,WAAWvjB,GACjB,OAAO,EAEX,MAAMq5C,EAAOr5C,EAAO6U,EAAS7U,EAAO8gC,EAAS,CACzCx2C,EAAG0V,EAAM5Q,SAAS9E,EAAIJ,KAAKqO,WAAWjJ,MACtCtF,EAAGgW,EAAM5Q,SAASpF,EAAIE,KAAKqO,WAAWhJ,QAE1C,QAAsB7E,IAAlBmqB,EAAOhiB,OAAsB,CAC7B,MAAMymD,EAAe,IAAIj2B,GAAOyd,EAAOx2C,EAAGw2C,EAAO92C,EAvB9C,EAuBiD6qB,EAAOhiB,QAC3D,OAAOtG,MAAMg3B,WAAW+1B,EAC5B,CACK,QAAkB5uD,IAAd2uD,EAAKhqD,KAAoB,CAC9B,MAAMkqD,EAAS,IAAI71B,GAAUod,EAAOx2C,EAAGw2C,EAAO92C,EA3B3C,EA2B8CqvD,EAAKhqD,KAAKC,MA3BxD,EA2BwE+pD,EAAKhqD,KAAKE,QACrF,OAAOhD,MAAMg3B,WAAWg2B,EAC5B,CACA,OAAO,CACX,EC/BG,MAAMC,GACT1vD,cACII,KAAK+X,KAAO,EACZ/X,KAAK6R,MAAQ,IAAIuY,GACjBpqB,KAAK6R,MAAM5N,MAAQ,OACnBjE,KAAKiK,QAAS,CAClB,CACA9B,KAAK1L,GACGiD,EAAOjD,UAGO+D,IAAd/D,EAAKsb,OACL/X,KAAK+X,KAAOtb,EAAKsb,MAErB/X,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,YAC9BrR,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAE3B,EClBG,MAAMslD,GACT3vD,cACII,KAAKiK,QAAS,EACdjK,KAAKwvD,UAAY,CACrB,CACArnD,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAElCrR,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEAzJ,IAAnB/D,EAAK+yD,YACLxvD,KAAKwvD,UAAY/yD,EAAK+yD,gBAELhvD,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAE5B,ECnBG,MAAMy7C,GACT7vD,cACII,KAAKkV,OAAQ,EACblV,KAAK6R,MAAQ,IAAIuY,GACjBpqB,KAAK6R,MAAM5N,MAAQ,OACnBjE,KAAKmV,SAAU,EACfnV,KAAKwE,SAAW,IAChBxE,KAAKiK,QAAS,EACdjK,KAAKwvD,UAAY,EACjBxvD,KAAKgU,QAAU,EACfhU,KAAKiX,OAAS,IAAIq4C,GAClBtvD,KAAK0vD,UAAY,IAAIH,GACrBvvD,KAAKoF,MAAQ,EACbpF,KAAKivB,MAAO,CAChB,CACA9mB,KAAK1L,GACGiD,EAAOjD,UAGK+D,IAAZ/D,EAAK25B,KACLp2B,KAAKo2B,GAAK35B,EAAK25B,SAEA51B,IAAf/D,EAAKyY,QACLlV,KAAKkV,MAAQzY,EAAKyY,OAEtBlV,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,YAC7BrR,IAAjB/D,EAAK0Y,UACLnV,KAAKmV,QAAU1Y,EAAK0Y,cAEF3U,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAW/H,EAAK+H,eAELhE,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEAzJ,IAAnB/D,EAAK+yD,YACLxvD,KAAKwvD,UAAY/yD,EAAK+yD,gBAELhvD,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAUvX,EAAKuX,SAExBhU,KAAKiX,OAAO9O,KAAK1L,EAAKwa,QACtBjX,KAAK0vD,UAAUvnD,KAAK1L,EAAKizD,gBACNlvD,IAAf/D,EAAK2I,QACLpF,KAAKoF,MAAQ3I,EAAK2I,YAEJ5E,IAAd/D,EAAKwyB,OACLjvB,KAAKivB,KAAOxyB,EAAKwyB,MAEzB,ECjDJ,MAA0C,GACnC,EADmC,GAEnC,EAEP,SAAS0gC,GAAgB/jD,EAAMC,EAAM+jD,EAAavhD,EAAY4gB,GAC1D,MAAM,GAAE3qB,EAAE,GAAEC,EAAE,SAAEC,GAAaL,EAAayH,EAAMC,GAChD,IAAKojB,GAAQzqB,GAAYorD,EACrB,OAAOprD,EAEX,MAAMqrD,EAAW,CACbzvD,EAAG3B,KAAK86B,IAAIj1B,GACZxE,EAAGrB,KAAK86B,IAAIh1B,IACburD,EACIrxD,KAAK2E,IAAIysD,EAASzvD,EAAGiO,EAAWjJ,MAAQyqD,EAASzvD,GADrD0vD,EAEIrxD,KAAK2E,IAAIysD,EAAS/vD,EAAGuO,EAAWhJ,OAASwqD,EAAS/vD,GAEzD,OAAOrB,KAAKoC,KAAKivD,GAhBD,EAgBkCA,GAhBlC,EAiBpB,CACO,MAAMC,WAAe9oB,GACxBrnC,YAAYiX,EAAWxF,GACnBhP,MAAMwU,GACN7W,KAAKgwD,UAAYxkD,IACb,IAAKA,EAAGL,QAAQuzC,MACZ,OAEJ,MAAM7nC,EAAY7W,KAAKiwD,eAAgBlP,EAAev1C,EAAGL,QAAQuzC,MACjE,IAAIhqC,OAAgClU,IAApBugD,EAAa3qB,GACvBvf,EAAUsG,UAAU+yC,WACpBr5C,EAAUsG,UAAUgzC,YAAYxgD,IAAIoxC,EAAa3qB,IACvD,GAAI1hB,EACA,OAEJ,MAAMO,EAAW8rC,EAAalvC,MAC9B6C,EAAYM,GAAmBhV,KAAK4b,QAAS3G,EAAU8rC,EAAa7rC,MAAO6rC,EAAa5rC,cAChE3U,IAApBugD,EAAa3qB,GACbvf,EAAUsG,UAAU+yC,WAAax7C,EAGjCmC,EAAUsG,UAAUgzC,YAAYtgD,IAAIkxC,EAAa3qB,GAAI1hB,EACzD,EAEJ1U,KAAKiwD,eAAiBp5C,EACtB7W,KAAK4b,QAAUvK,CACnB,CACAoF,QACA,CACA0L,OACIniB,KAAKiwD,eAAe9yC,UAAU+yC,gBAAa1vD,EAC3CR,KAAKiwD,eAAe9yC,UAAUgzC,YAAc,IAAI7gD,GACpD,CACAqjB,SAASnnB,GACL,IAAKA,EAAGL,QAAQuzC,MACZ,OAEJlzC,EAAGkzC,MAAQ,GACX,MAAM9yC,EAAOJ,EAAGT,cAAe8L,EAAY7W,KAAK6W,UAAWxI,EAAawI,EAAU+C,OAAOzU,KACzF,GAAIyG,EAAKxL,EAAI,IAAYwL,EAAK9L,EAAI,IAAY8L,EAAKxL,EAAIiO,EAAWjJ,OAASwG,EAAK9L,EAAIuO,EAAWhJ,OAC3F,OAEJ,MAAM+qD,EAAW5kD,EAAGL,QAAQuzC,MAAOb,EAAauS,EAASp8C,QAAS47C,EAAcpkD,EAAGsN,OAAOu3C,eAxDjF,EAwD+GphC,EAAOmhC,EAASnhC,KACxI,IAAInZ,EAEAA,EADAmZ,EACQ,IAAIigC,GAAWtjD,EAAKxL,EAAGwL,EAAK9L,EAAG8vD,EAAavhD,GAG5C,IAAI8qB,GAAOvtB,EAAKxL,EAAGwL,EAAK9L,EAAG8vD,GAEvC,MAAMnoD,EAAQoP,EAAUsG,UAAU0f,SAASp1B,MAAMqO,GACjD,IAAK,MAAMrK,KAAMhE,EAAO,CACpB,MAAM6oD,EAAW7kD,EAAGN,QAAQuzC,MAC5B,GAAIlzC,IAAOC,IACN6kD,GAAUrmD,QACXmmD,EAASh6B,KAAOk6B,EAASl6B,IACzB3qB,EAAG2T,UACH3T,EAAGqD,YACFrD,EAAGizC,OACJlzC,EAAGkzC,MAAM/zC,MAAKX,GAAKA,EAAEV,cAAgBmC,KACrCA,EAAGizC,MAAM/zC,MAAKX,GAAKA,EAAEV,cAAgBkC,IACrC,SAEJ,MAAMK,EAAOJ,EAAGV,cAChB,GAAIc,EAAKzL,EAAI,IAAYyL,EAAK/L,EAAI,IAAY+L,EAAKzL,EAAIiO,EAAWjJ,OAASyG,EAAK/L,EAAIuO,EAAWhJ,OAC3F,SAEJ,MAAMb,EAAWmrD,GAAgB/jD,EAAMC,EAAM+jD,EAAavhD,EAAY4gB,GAAQqhC,EAASrhC,MACvF,GAAIzqB,EAAWorD,EACX,SAEJ,MAAM/O,GAxFqB,EAwFUr8C,EAAWorD,GAAe/R,EAC/D79C,KAAKgwD,UAAUxkD,GACfA,EAAGkzC,MAAMv9B,KAAK,CACV7X,YAAamC,EACbuI,QAAS6sC,GAEjB,CACJ,CACAnuB,UAAUrmB,GACN,QAASA,EAASlB,QAAQuzC,OAAOz0C,MACrC,CACAwmB,qBAAqBtlB,KAAY5B,GACxB4B,EAAQuzC,QACTvzC,EAAQuzC,MAAQ,IAAI+Q,IAExB,IAAK,MAAMzuD,KAAUuI,EACjB4B,EAAQuzC,MAAMv2C,KAAKnH,GAAQ09C,MAEnC,CACA3rB,QACA,ECpBG,SAASw9B,GAAiBpzC,EAAWqzC,GACxC,MAAM/mD,IALiBgnD,EAKAtzC,EAAUxT,KAAIK,GAAKA,EAAEosB,MAJxC1E,MAAK,CAACja,EAAG/E,IAAM+E,EAAI/E,IAChB+9C,EAAIC,KAAK,MAFb,IAAoBD,EAMvB,IAAI5pD,EAAM2pD,EAAW7gD,IAAIlG,GAKzB,YAJYjJ,IAARqG,IACAA,EAAM9D,IACNytD,EAAW3gD,IAAIpG,EAAK5C,IAEjBA,CACX,CChGO,MAAM8pD,GACT/wD,YAAYiX,EAAWxF,GACnBrR,KAAK4wD,cAAgB,CAACplD,EAAIqlD,KACtB,MAAMC,EAAiBtlD,EAAGL,QAAQuzC,MAClC,IAAKoS,GAAgB7mD,OACjB,OAEJ,MAAM4M,EAAY7W,KAAKsrB,WAAYngB,EAAU0L,EAAUmF,cAAevQ,EAAKolD,EAAKvnD,YAAasC,EAAOJ,EAAGT,cAAec,EAAOJ,EAAGV,cAChI,IAAIiJ,EAAU68C,EAAK78C,QACnB6C,EAAU+C,OAAOhB,MAAKgC,IAClB,IAAI0lC,EACJ,MAAMyQ,EAAUvlD,EAAGL,QAAQ4lD,SAASC,MACpC,GAAID,GAAS9mD,OAAQ,CACjB,MAAMgnD,EAAcF,EAAQvB,UAAW0B,EAAat/C,GAAgB5R,KAAK4b,QAASm1C,EAAQl/C,OAAoB9O,IAAckuD,GAC3GC,IACb5Q,EAAY4Q,EACZl9C,EAAUhQ,EAAc+sD,EAAQ/8C,SAExC,CACA,IAAKssC,EAAW,CACZ,MAAM5rC,OAAkClU,IAAtBswD,EAAe16B,GAC3Bvf,EAAUsG,UAAUgzC,YAAYxgD,IAAImhD,EAAe16B,IACnDvf,EAAUsG,UAAU+yC,WAC1B5P,EAAY7rC,GAAajJ,EAAIC,EAAIiJ,EACrC,CACA,IAAK4rC,EACD,OAEJ,MAAMl7C,EAAQoG,EAAGsN,OAAO2mC,YA7BP,EA6B+B9oB,EAAcnrB,EAAGsN,OAAOu3C,eA7BtC,GA6BoE,eAAEt5C,GAAmB5L,GDvBpI,SAAsBk6B,GACzB,IAAI8rB,GAAQ,EACZ,MAAM,MAAEh7C,EAAK,IAAEC,EAAG,OAAE/E,EAAM,YAAEslB,EAAW,QAAEzgB,EAAO,WAAE7H,EAAU,MAAEjJ,EAAK,eAAE2R,EAAc,UAAEupC,EAAS,QAAEtsC,EAAO,MAAE0qC,GAAUrZ,EACnH,GAAI5gC,EAAY0R,EAAOC,IAAQugB,EAC3B1gB,GAASC,EAASC,EAAOC,GACzB+6C,GAAQ,OAEP,GAAIzS,EAAMzvB,KAAM,CACjB,IAAImiC,EACAC,EACJ,MAIMC,EAAKntD,EAAagS,EAJV,CACV/V,EAAGgW,EAAIhW,EAAIiO,EAAWjJ,MACtBtF,EAAGsW,EAAItW,IAGX,GAAIwxD,EAAG9sD,UAAYmyB,EAAa,CAC5B,MAAM46B,EAAKp7C,EAAMrW,EAAKwxD,EAAG/sD,GAAK+sD,EAAGhtD,GAAM6R,EAAM/V,EAC7CgxD,EAAM,CAAEhxD,EAAG,EAAGN,EAAGyxD,GACjBF,EAAM,CAAEjxD,EAAGiO,EAAWjJ,MAAOtF,EAAGyxD,EACpC,KACK,CACD,MAIMC,EAAKrtD,EAAagS,EAJV,CACV/V,EAAGgW,EAAIhW,EACPN,EAAGsW,EAAItW,EAAIuO,EAAWhJ,SAG1B,GAAImsD,EAAGhtD,UAAYmyB,EAAa,CAC5B,MACM86B,IADKt7C,EAAMrW,EAAK0xD,EAAGjtD,GAAKitD,EAAGltD,GAAM6R,EAAM/V,IAC3BoxD,EAAGjtD,GAAKitD,EAAGltD,IAC7B8sD,EAAM,CAAEhxD,EAAGqxD,EAAI3xD,EAAG,GAClBuxD,EAAM,CAAEjxD,EAAGqxD,EAAI3xD,EAAGuO,EAAWhJ,OACjC,KACK,CACD,MAIMqsD,EAAKvtD,EAAagS,EAJV,CACV/V,EAAGgW,EAAIhW,EAAIiO,EAAWjJ,MACtBtF,EAAGsW,EAAItW,EAAIuO,EAAWhJ,SAG1B,GAAIqsD,EAAGltD,UAAYmyB,EAAa,CAC5B,MAAM46B,EAAKp7C,EAAMrW,EAAK4xD,EAAGntD,GAAKmtD,EAAGptD,GAAM6R,EAAM/V,EAE7CgxD,EAAM,CAAEhxD,GADImxD,GAAMG,EAAGntD,GAAKmtD,EAAGptD,IACdxE,EAAGyxD,GAClBF,EAAM,CAAEjxD,EAAGgxD,EAAIhxD,EAAIiO,EAAWjJ,MAAOtF,EAAGsxD,EAAItxD,EAAIuO,EAAWhJ,OAC/D,CACJ,CACJ,CACI+rD,GAAOC,IACPp7C,GAASC,EAASC,EAAOi7C,GACzBn7C,GAASC,EAASE,EAAKi7C,GACvBF,GAAQ,EAEhB,CACA,IAAKA,EACD,OAEJj7C,EAAQmC,UAAYjT,EAChB2R,EAAe9M,SACfiM,EAAQ0B,yBAA2Bb,EAAeC,WAEtDd,EAAQqC,YAAcxE,GAAgBusC,EAAWtsC,GACjD,MAAM,OAAEiD,GAAWynC,EACnB,GAAIznC,EAAOhN,OAAQ,CACf,MAAM4N,EAAcjG,GAAgBP,EAAQ4F,EAAOpF,OAC/CgG,IACA3B,EAAQ4B,WAAab,EAAOc,KAC5B7B,EAAQ2B,YAAc9D,GAAgB8D,GAE9C,CACA3B,EAAQoC,QACZ,CC7CgBq5C,CAAa,CACTz7C,QAAS0E,EACTxV,QACA+Q,MAAOvK,EACPwK,IAAKvK,EACLwF,OAAQrR,KAAK4b,QACb+a,cACAtoB,WAAYwI,EAAU+C,OAAOzU,KAC7Bu5C,MAAOoS,EACP/5C,eAAgBA,EAChBupC,YACAtsC,WACF,GACJ,EAENhU,KAAK4xD,kBAAoB,CAACpmD,EAAIqmD,EAAOC,KACjC,MAAM/Q,EAAev1C,EAAGL,QAAQuzC,MAChC,IAAKqC,GAAc92C,OACf,OAEJ,MAAM8nD,EAAkBhR,EAAa2O,UACrC,IAAKqC,EAAgB9nD,OACjB,OAEJ,MAAM4M,EAAY7W,KAAKsrB,WAAYngB,EAAU0L,EAAUmF,cAAevQ,EAAKomD,EAAMvoD,YAAa0oD,EAAKF,EAAMxoD,YAAa2oD,EAAkBF,EAAgB/9C,SAtDxG,IAsDoH69C,EAAM79C,QAAU89C,EAAM99C,SACtLi+C,GAvDG,GA0DPp7C,EAAU+C,OAAOhB,MAAKgC,IAClB,MAAMhP,EAAOJ,EAAGT,cAAec,EAAOJ,EAAGV,cAAemnD,EAAOF,EAAGjnD,cAAeslD,EAAgB7kD,EAAGsN,OAAOu3C,eA3DzE,EA4DlC,GAAI5rD,EAAYmH,EAAMC,GAAQwkD,GAC1B5rD,EAAYytD,EAAMrmD,GAAQwkD,GAC1B5rD,EAAYytD,EAAMtmD,GAAQykD,EAC1B,OAEJ,IAAI8B,EAAgBvgD,GAAgB5R,KAAK4b,QAASm2C,EAAgBlgD,OAClE,IAAKsgD,EAAe,CAChB,MAAMz9C,OAAgClU,IAApBugD,EAAa3qB,GACzBvf,EAAUsG,UAAUgzC,YAAYxgD,IAAIoxC,EAAa3qB,IACjDvf,EAAUsG,UAAU+yC,WAC1BiC,EAAgB19C,GAAajJ,EAAIC,EAAIiJ,EACzC,CACKy9C,GDId,SAA0B9sB,GAC7B,MAAM,QAAEnvB,EAAO,KAAEtK,EAAI,KAAEC,EAAI,KAAEqmD,EAAI,eAAEn7C,EAAc,cAAEo7C,EAAa,gBAAEF,GAAoB5sB,GA9EnF,SAAsBnvB,EAAS1K,EAAIC,EAAIumD,GAC1C97C,EAAQG,YACRH,EAAQI,OAAO9K,EAAGpL,EAAGoL,EAAG1L,GACxBoW,EAAQK,OAAO9K,EAAGrL,EAAGqL,EAAG3L,GACxBoW,EAAQK,OAAOy7C,EAAG5xD,EAAG4xD,EAAGlyD,GACxBoW,EAAQM,WACZ,CAyEI47C,CAAal8C,EAAStK,EAAMC,EAAMqmD,GAC9Bn7C,EAAe9M,SACfiM,EAAQ0B,yBAA2Bb,EAAeC,WAEtDd,EAAQiC,UAAYpE,GAAgBo+C,EAAeF,GACnD/7C,EAAQgC,MACZ,CCTgBm6C,CAAiB,CACbn8C,QAAS0E,EACThP,OACAC,OACAqmD,OACAn7C,eAAgB5L,EAAQ4L,eACxBo7C,gBACAF,mBACF,GACJ,EAENjyD,KAAKsyD,eAAiB,CAACnnD,EAASK,EAAIqlD,EAAM0B,KACtC,MAAM9mD,EAAKolD,EAAKvnD,YAChB,IAAM6B,EAAQuzC,OAAOgR,UAAUzlD,SAAUwB,EAAGN,QAAQuzC,OAAOgR,UAAUzlD,OACjE,OAEJ,MAAMuoD,EAAW/mD,EAAGizC,OAAOhjB,QAAO1xB,IAC9B,MAAMyoD,EAAWzyD,KAAK0yD,kBAAkBjnD,EAAIzB,EAAEV,aAC9C,OAAQmC,EAAGN,QAAQuzC,OACf+T,GAAYhnD,EAAGN,QAAQuzC,MAAM8Q,WAC7B+C,EAAQjxB,WAAU1uB,GAAKA,EAAEtJ,cAAgBU,EAAEV,eAHwB,CAGC,IAE5E,GAAKkpD,GAAUryD,OAGf,IAAK,MAAMwyD,KAAUH,EAAU,CAC3B,MAAMR,EAAKW,EAAOrpD,YAA4BtJ,KAAK4yD,sBAAsBpnD,EAAIC,EAAIumD,GAC9D7mD,EAAQuzC,MAAMgR,UAAUF,WAG3CxvD,KAAK4xD,kBAAkBpmD,EAAIqlD,EAAM8B,EACrC,GAEJ3yD,KAAK0yD,kBAAoB,CAAClnD,EAAIC,IACnB8kD,GAAiB,CAAC/kD,EAAIC,GAAKzL,KAAK6yD,OAAOnU,OAElD1+C,KAAK4yD,sBAAwB,CAACpnD,EAAIC,EAAIumD,IAC3BzB,GAAiB,CAAC/kD,EAAIC,EAAIumD,GAAKhyD,KAAK6yD,OAAOnD,WAEtD1vD,KAAKsrB,WAAazU,EAClB7W,KAAK4b,QAAUvK,EACfrR,KAAK6yD,OAAS,CACVnU,MAAO,IAAIpvC,IACXogD,UAAW,IAAIpgD,IAEvB,CACAsH,aAAaV,EAAS7J,GAClB,MAAM,MAAEqyC,EAAK,QAAEvzC,GAAYkB,EAC3B,IAAKqyC,GAAOv+C,OACR,OAEJ,MAAMoyD,EAAU7T,EAAMhjB,QAAO9oB,GAAKzH,EAAQuzC,QACrCvzC,EAAQuzC,MAAM8Q,WA/HqD,GAgIhExvD,KAAK0yD,kBAAkBrmD,EAAUuG,EAAEtJ,cAAgB6B,EAAQuzC,MAAM8Q,aACzE,IAAK,MAAMqB,KAAQ0B,EACfvyD,KAAKsyD,eAAennD,EAASkB,EAAUwkD,EAAM0B,GACzC1B,EAAK78C,QAnIF,IAmI2B3H,EAASyM,OAAO2mC,YAnI7B,MAoIjBz/C,KAAK4wD,cAAcvkD,EAAUwkD,EAGzC,CACA/oD,aACI9H,KAAK6yD,OAAOnU,MAAQ,IAAIpvC,IACxBtP,KAAK6yD,OAAOnD,UAAY,IAAIpgD,UACtB8M,QAAQC,SAClB,CACAyc,gBAAgBzsB,GAEZ,GADAA,EAASqyC,MAAQ,IACZryC,EAASlB,QAAQuzC,MAClB,OAEJ,MAAMjgB,EAAQz+B,KAAKsrB,WAAWxS,OAAOD,YAAY,OAAEC,GAAWzM,GAAU,SAAE7H,EAAQ,MAAEY,GAAUiH,EAASlB,QAAQuzC,MAC/G5lC,EAAOu3C,cAAgB7rD,EAAWi6B,EAClC3lB,EAAO2mC,WAAar6C,EAAQq5B,CAChC,CACAxI,kBAAkB5pB,GACdA,EAASqyC,MAAQ,EACrB,ECzJG,MAAMoU,GACTlzD,YAAYyR,GACRrR,KAAKo2B,GAAK,QACVp2B,KAAK4b,QAAUvK,CACnB,CACAwzB,UAAUhuB,GACN,OAAOuF,QAAQC,QAAQ,IAAIs0C,GAAa95C,EAAW7W,KAAK4b,SAC5D,CACA4U,cACA,CACA4U,cACI,OAAO,CACX,ECXGt9B,eAAeirD,GAA8B1hD,EAAQuR,GAAU,GAClEvR,EAAO2zB,aAAa,eCFjBl9B,eAAoCuJ,EAAQuR,GAAU,SACnDvR,EAAO2hD,cAAc,kBAAkBlrD,MAAO+O,GACzCuF,QAAQC,QAAQ,IAAI0zC,GAAOl5C,EAAWxF,KAC9CuR,EACP,CDDUqwC,CAAqB5hD,EAAQuR,SEHhC9a,eAA+BuJ,EAAQuR,GAAU,GACpD,MAAMxH,EAAS,IAAI03C,GAAYzhD,SACzBA,EAAO67C,UAAU9xC,EAAQwH,EACnC,CFCUswC,CAAgB7hD,EAAQuR,EAClC,CGLA,MAAmB,GAAc,EAAd,GAAoB,ECEhC,MAAMuwC,GACTv6C,KAAKnc,GACD,MAAM,SAAE4P,EAAQ,OAAE1D,GAAWlM,GDH9B,SAAqBA,EAAMkmC,EAAOwO,GACrC,MAAM,QAAEj7B,GAAYzZ,EAAM22D,EAAYjiB,EAAK5jC,MAAM8lD,UAAYliB,EAAK5jC,MAAM+lD,YAAaC,EAAepiB,EAAK5jC,MAAM8lD,UAAYliB,EAAK5jC,MAAM+lD,YAAaE,EAFzI,KAE0KD,EAF9H,GAE6JA,EAAcE,EAAgBh1D,KAAKC,GAAKgG,EAAS8uD,GACpQ,GAAKt9C,EAAL,CAGAA,EAAQG,YACRH,EAAQmzB,UAAU1G,EAAMviC,EAAGuiC,EAAM7iC,GACjCoW,EAAQI,OAAO,GAAU,IACzB,IAAK,IAAI4jB,EAAI,EAAGA,EAAIk5B,EAAWl5B,IAC3BhkB,EAAQK,OAAO46B,EAAKhxC,OAAQ,IAC5B+V,EAAQmzB,UAAU8H,EAAKhxC,OAAQ,IAC/B+V,EAAQnU,OAAO0xD,EAPnB,CASJ,CCTQC,CAAYj3D,EAD+BuD,KAAK2zD,UAAUtnD,EAAU1D,GAAgB3I,KAAK4zD,aAAavnD,EAAU1D,GAEpH,CACA+vB,cAAcrsB,GACV,MAAMwnD,EAAUxnD,EAASmrB,UACzB,OAAO/4B,KAAK2U,MAAMpP,EAAc6vD,GAAS37B,OAR5B,GASjB,ECTG,MAAM47B,WAAsBX,GAC/BvzD,cACIyC,SAAS0xD,WACT/zD,KAAK+kC,WAAa,CAAC,UACvB,CACA4uB,UAAUtnD,EAAU1D,GAChB,MAAO,CACHvI,GAAIuI,GAAU0D,EAAS6rB,MART,KASdp4B,GAAI6I,EAAS,IAErB,CACAirD,aAAavnD,EAAU1D,GACnB,MAAMuvB,EAAQ7rB,EAAS6rB,MACvB,MAAO,CACH3qB,MAAO,CACH+lD,YAAa,EACbD,UAAWn7B,GAEf/3B,OAnB6B,KAmBpBwI,GAAqBuvB,EAnBmB,GAqBzD,ECpBG,MAAM87B,WAAuBb,GAChCvzD,cACIyC,SAAS0xD,WACT/zD,KAAK+kC,WAAa,CAAC,WACvB,CACA4uB,UAAUtnD,EAAU1D,GAChB,MAAO,CACHvI,GAAIuI,EACJ7I,EAAG6I,EATC,KAWZ,CACA+vB,gBACI,OAbsB,CAc1B,CACAk7B,aAAavnD,EAAU1D,GAEnB,MAAO,CACH4E,MAAO,CACH+lD,YAAa,EACbD,UAAW,GAEflzD,OAtB8B,EAgBjBwI,EAQrB,ECfGb,eAAemsD,GAAiB5iD,EAAQuR,GAAU,GACrDvR,EAAO2zB,aAAa,eATjBl9B,eAAuCuJ,EAAQuR,GAAU,GAC5DvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAI+b,GAAiBlxC,EAC/C,CAOUsxC,CAAwB7iD,EAAQuR,SANnC9a,eAAiCuJ,EAAQuR,GAAU,GACtDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAIic,GAAkBpxC,EAChD,CAIUuxC,CAAkB9iD,EAAQuR,EACpC,CCbO,MAAMwxC,GACTx0D,cACII,KAAKiK,QAAS,EACdjK,KAAK2V,MAAQ,EACb3V,KAAKyN,MAAQ,EACbzN,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQzR,EAAczH,EAAKkZ,aAEjBnV,IAAf/D,EAAKgR,QACLzN,KAAKyN,MAAQvJ,EAAczH,EAAKgR,aAElBjN,IAAd/D,EAAKmZ,OACL5V,KAAK4V,KAAOnZ,EAAKmZ,MAEzB,ECtBG,MAAMy+C,WAAeznC,GACxBhtB,cACIyC,QACArC,KAAKkN,UAAY,IAAIknD,GACrBp0D,KAAK4I,UAAYs+B,GAAgByB,UACjC3oC,KAAK4uB,MAAO,EACZ5uB,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACGiD,EAAOjD,KAGX4F,MAAM8F,KAAK1L,QACY+D,IAAnB/D,EAAKmM,YACL5I,KAAK4I,UAAYnM,EAAKmM,WAE1B5I,KAAKkN,UAAU/E,KAAK1L,EAAKyQ,gBACP1M,IAAd/D,EAAKmyB,OACL5uB,KAAK4uB,KAAOnyB,EAAKmyB,MAEzB,ECpBJ,MAAkB,GAAH,EAAcnwB,KAAKC,GAC3B,MAAM41D,GACT10D,YAAYiX,GACR7W,KAAK6W,UAAYA,CACrB,CACAsL,KAAK9V,GACD,MAAMkoD,EAAgBloD,EAASlB,QAAQpJ,OACvC,IAAKwyD,EACD,OAEJloD,EAAStK,OAAS,CACdkI,OAAQsqD,EAAcrnD,UAAUjD,OAChChG,MAAOS,EAASV,EAAcuwD,EAActwD,QAC5Cb,IAAK,EACLC,IAAK,IAETgJ,EAASgL,aAAek9C,EAAc3lC,KACtC,IAAI4lC,EAAkBD,EAAc3rD,UACpC,GAAI4rD,IAAoBttB,GAAgB3kC,OAAQ,CAE5CiyD,EADc/1D,KAAKkF,MAnBhB,EAmBsBZ,KAAkC,EACtBmkC,GAAgB0B,iBAAmB1B,GAAgByB,SAC5F,CACA,OAAQ6rB,GACJ,KAAKttB,GAAgB0B,iBACrB,IAAK,mBACDv8B,EAAStK,OAAO4L,OAAS9H,GAAgBiI,WACzC,MACJ,KAAKo5B,GAAgByB,UACjBt8B,EAAStK,OAAO4L,OAAS9H,GAAgB+H,WAGjD,MAAM6mD,EAAkBF,EAAcrnD,UAClCunD,EAAgBxqD,SAChBoC,EAAStK,OAAO0L,MAjC8B,EAiCXzJ,EAAcywD,EAAgBhnD,OACjEpB,EAAStK,OAAOoF,SACXnD,EAAcywD,EAAgB9+C,OAnC4B,IAmCJ3V,KAAK6W,UAAUiC,OAAOxD,aAC5Em/C,EAAgB7+C,OACjBvJ,EAAStK,OAAOoF,UAAYpE,MAGpCsJ,EAAS+K,SAAW/K,EAAStK,OAAOkC,KACxC,CACAyuB,UAAUrmB,GACN,MAAMtK,EAASsK,EAASlB,QAAQpJ,OAChC,QAAKA,KAGGsK,EAASyC,YAAczC,EAAS+S,aAAerd,EAAOkC,OAASlC,EAAOmL,UAAUjD,QAAUlI,EAAO6sB,MAC7G,CACA4B,YAAYrlB,KAAY5B,GACf4B,EAAQpJ,SACToJ,EAAQpJ,OAAS,IAAIsyD,IAEzB,IAAK,MAAMrzD,KAAUuI,EACjB4B,EAAQpJ,OAAOoG,KAAKnH,GAAQe,OAEpC,CACAs7B,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,KAGpBA,EAASoqB,aAAepqB,EAAStK,OAC5BsK,EAAStK,SAGd2M,GAAgBrC,EAAUA,EAAStK,QAAQ,EAAO+D,GAAY2oB,KAAM5f,GACpExC,EAAS+K,SAAW/K,EAAStK,OAAOkC,OACxC,ECrEJ,MAA4BywD,GAAYj2D,KAAKoC,KAApB,GCElB,MAAM8zD,GACT/0D,cACII,KAAK+kC,WAAa,CAAC,OAAQ,SAC/B,CACAnsB,KAAKnc,IDLF,SAAoBA,GACvB,MAAM,QAAEyZ,EAAO,OAAEvN,GAAWlM,EAAMm4D,EAAcjsD,EAAS+rD,GAAWG,EAFM,EAEUD,EACpF1+C,EAAQi5C,MAAMyF,GAAcA,EAAaC,EAAeA,EAC5D,CCGQC,CAAWr4D,EACf,CACAi8B,gBACI,OATM,CAUV,ECXJ,MAAwB,GAAc,EAAd,GAAoB,ECGrC,MAAMq8B,GACTn1D,cACII,KAAK+kC,WAAa,CAAC,OACvB,CACAnsB,KAAKnc,IDNF,SAAkBA,GACrB,MAAM,QAAEyZ,EAAO,SAAE7J,EAAQ,OAAE1D,GAAWlM,EAAMy7B,EAAQ7rB,EAAS6rB,MAAO88B,EAAQ3oD,EAAS4oD,WAFpE,EAGjB/+C,EAAQI,OAAO,GAAU,GAAW3N,GACpC,IAAK,IAAIuxB,EAAI,EAAGA,EAAIhC,EAAOgC,IACvBhkB,EAAQnU,OAAOtD,KAAKC,GAAKw5B,GACzBhiB,EAAQK,OAAO,GAAU,GAAW5N,EAASqsD,GAC7C9+C,EAAQnU,OAAOtD,KAAKC,GAAKw5B,GACzBhiB,EAAQK,OAAO,GAAU,GAAW5N,EAE5C,CCFQusD,CAASz4D,EACb,CACAi8B,cAAcrsB,GACV,MAAM8oD,EAAO9oD,EAASmrB,UACtB,OAAO/4B,KAAK2U,MAAMpP,EAAcmxD,GAAMj9B,OAVP,GAWnC,CACAW,aAAahiB,EAAWxK,GACpB,MAAM8oD,EAAO9oD,EAASmrB,UACtBnrB,EAAS4oD,UAAYjxD,EAAcmxD,GAAMH,OAd5B,EAejB,ECfG,MAAMI,GACTx1D,YAAYiX,EAAWxF,GACnBrR,KAAKsrB,WAAazU,EAClB7W,KAAK4b,QAAUvK,CACnB,CACA8Q,KAAK9V,GACD,MAAMwK,EAAY7W,KAAKsrB,WAAYngB,EAAUkB,EAASlB,QAChDmN,EAAS1L,GAAyBzB,EAAQmN,OAAQjM,EAAS+pB,GAAIjrB,EAAQilB,kBAC7E/jB,EAAS+L,YAAcpU,EAAcsU,EAAOlT,OAASyR,EAAUiC,OAAOD,WACtExM,EAASwT,cAAgB7b,EAAcsU,EAAOtE,SAV/B,GAWf3H,EAASgpD,gBAAkB/8C,EAAOzG,OAAO3E,UACzC,MAAMooD,EAAiBnjD,GAAgBnS,KAAK4b,QAAStD,EAAOzG,QAAUxF,EAASuI,eAC3E0gD,IACAjpD,EAAS8pB,YAAc9gB,GAAuBigD,EAAgBjpD,EAASgpD,gBAAiBx+C,EAAUiC,OAAOxD,cAEjH,CACAod,UAAUrmB,GACN,MAAMwF,EAAQxF,EAASgpD,iBAAiB,YAAEl/B,GAAgB9pB,EAC1D,OAASA,EAASyC,YACbzC,EAAS+S,YACRvN,SACyBrR,IAAzB21B,GAAaxjB,EAAE1O,OAAuBkyB,EAAYxjB,EAAE1I,aACxBzJ,IAAzB21B,GAAatjB,EAAE5O,OAAuBkyB,EAAYtjB,EAAE5I,aAC3BzJ,IAAzB21B,GAAavjB,EAAE3O,OAAuBkyB,EAAYvjB,EAAE3I,OACjE,CACAozB,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IAGpB0J,GAAY1J,EAAS8pB,YAAatnB,EACtC,ECPG/G,eAAeytD,GAASlkD,EAAQuR,GAAU,GAC7CvR,EAAO2zB,aAAa,eCzBjBl9B,eAAiCuJ,EAAQuR,GAAU,GACtDvR,EAAO2zB,aAAa,eACd3zB,EAAOwmC,SAAS,YAAY,IACvBz7B,QAAQC,QAAQ,IAAI0xC,KAC5BnrC,EACP,CDqBU4yC,CAAkBnkD,GAAQ,SE1B7BvJ,eAA8CuJ,EAAQuR,GAAU,GACnEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,mBAAmBn8C,GACnCuF,QAAQC,QAAQ,IAAI29B,GAAU3oC,EAAQwF,KAC9C+L,EACP,CFsBU6yC,CAA+BpkD,GAAQ,SG3B1CvJ,eAA6CuJ,EAAQuR,GAAU,GAClEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,kBAAkBn8C,GAClCuF,QAAQC,QAAQ,IAAIk/B,GAAQ1kC,KACpC+L,EACP,CHuBU8yC,CAA8BrkD,GAAQ,SI5BzCvJ,eAA6CuJ,EAAQuR,GAAU,GAClEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,kBAAkBn8C,GAClCuF,QAAQC,QAAQ,IAAI8/B,GAAQtlC,EAAWxF,KAC/CuR,EACP,CJwBU+yC,CAA8BtkD,GAAQ,SK7BzCvJ,eAA8CuJ,EAAQuR,GAAU,GACnEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,mBAAmBn8C,GACnCuF,QAAQC,QAAQ,IAAIqjC,GAAU7oC,KACtC+L,EACP,CLyBUgzC,CAA+BvkD,GAAQ,SM9B1CvJ,eAA2CuJ,EAAQuR,GAAU,GAChEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,gBAAgBn8C,GAChCuF,QAAQC,QAAQ,IAAImkC,GAAQ3pC,EAAWxF,KAC/CuR,EACP,CN0BUizC,CAA4BxkD,GAAQ,SO/BvCvJ,eAA4CuJ,EAAQuR,GAAU,GACjEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,iBAAiBn8C,GACjCuF,QAAQC,QAAQ,IAAI2kC,GAAOnqC,KACnC+L,EACP,CP2BUkzC,CAA6BzkD,GAAQ,SQhCxCvJ,eAA2CuJ,EAAQuR,GAAU,GAChEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,gBAAgBn8C,GAChCuF,QAAQC,QAAQ,IAAI6kC,GAAOrqC,KACnC+L,EACP,CR4BUmzC,CAA4B1kD,GAAQ,SSjCvCvJ,eAA6CuJ,EAAQuR,GAAU,GAClEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,kBAAkBn8C,GAClCuF,QAAQC,QAAQ,IAAIglC,GAAQxqC,KACpC+L,EACP,CT6BUozC,CAA8B3kD,GAAQ,SUlCzCvJ,eAA8CuJ,EAAQuR,GAAU,GACnEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,mBAAmBn8C,GACnCuF,QAAQC,QAAQ,IAAIslC,GAAStwC,EAAQwF,KAC7C+L,EACP,CV8BUqzC,CAA+B5kD,GAAQ,SWnC1CvJ,eAA2CuJ,EAAQuR,GAAU,GAChEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,gBAAgBn8C,GAChCuF,QAAQC,QAAQ,IAAIumC,GAAO/rC,KACnC+L,EACP,CX+BUszC,CAA4B7kD,GAAQ,SYpCvCvJ,eAA+CuJ,EAAQuR,GAAU,GACpEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,oBAAoBn8C,GACpCuF,QAAQC,QAAQ,IAAI,GAAUxF,KACtC+L,EACP,CZgCUuzC,CAAgC9kD,GAAQ,SarC3CvJ,eAAkDuJ,EAAQuR,GAAU,GACvEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,uBAAuBn8C,GACvCuF,QAAQC,QAAQ,IAAI0yC,GAASl4C,KACrC+L,EACP,CbiCUwzC,CAAmC/kD,GAAQ,SAC3C0hD,GAA8B1hD,GAAQ,ScvCzCvJ,eAAoCuJ,EAAQuR,GAAU,GACzDvR,EAAO2zB,aAAa,eACd3zB,EAAOglD,UAAUjvB,GAAWkvB,YAAYryD,GAASA,GAAS,IAAG,SAC7DoN,EAAOglD,UAAUjvB,GAAW0S,aAAa71C,GAAS,GAAK,EAAIA,IAAU,IAAG,SACxEoN,EAAOglD,UAAUjvB,GAAWmvB,eAAetyD,GAAUA,EAAQ,GAAM,EAAIA,GAAS,EAAI,IAAM,EAAIA,EAAQ,IAAM,EAAI,IAAI,SACpHoN,EAAOuR,QAAQA,EACzB,CdkCU4zC,CAAqBnlD,GAAQ,SexChCvJ,eAA8BuJ,EAAQuR,GAAU,GACnDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAIQ,GAAe31B,EAC7C,CfsCU6zC,CAAeplD,GAAQ,SACvBg6C,GAAeh6C,GAAQ,SgB1C1BvJ,eAA6BuJ,EAAQuR,GAAU,GAClDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAI6V,GAAchrC,EAC5C,ChBwCU8zC,CAAcrlD,GAAQ,SACtB4iD,GAAiB5iD,GAAQ,SiB5C5BvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAI4c,GAAgB/xC,EAC9C,CjB0CU+zC,CAAgBtlD,GAAQ,SkB7C3BvJ,eAA6BuJ,EAAQuR,GAAU,GAClDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAIgd,GAAcnyC,EAC5C,ClB2CUg0C,CAAcvlD,GAAQ,SmB9CzBvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,QAAQnwC,MAAO+O,GACpCuF,QAAQC,QAAQ,IAAIixC,GAAYz2C,KACxC+L,EACP,CnB0CUi0C,CAAgBxlD,GAAQ,SoB/C3BvJ,eAAiCuJ,EAAQuR,GAAU,GACtDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,UAAUphC,GAC/BuF,QAAQC,QAAQ,IAAIi4C,GAAcz9C,KAC1C+L,EACP,CpB2CUk0C,CAAkBzlD,GAAQ,SqBhD7BvJ,eAAsCuJ,EAAQuR,GAAU,GAC3DvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,eAAephC,GACpCuF,QAAQC,QAAQ,IAAI+4C,GAAmBv+C,EAAWxF,KAC1DuR,EACP,CrB4CUm0C,CAAuB1lD,GAAQ,SAC/BmmC,GAAUnmC,EAAQuR,EAC5B,CsB1BA,SAAS,GAAS1M,EAAS8gD,EAAMruD,EAAQqL,EAAS1L,EAAO4P,GACrD,MAA6Cf,EAAM,CAC/C/W,IADY42D,EAAK72D,OAASwI,EA1BT,IA4BjB7I,EA5BiB,GA4Bd6I,GACJwqB,EA7BQ,EA6BGxqB,EACVuP,EACAhC,EAAQkjC,SAAS4d,EAAM7/C,EAAI/W,EAAG+W,EAAIrX,EAAIqzB,EAAW7qB,GAGjD4N,EAAQ+gD,WAAWD,EAAM7/C,EAAI/W,EAAG+W,EAAIrX,EAAIqzB,EAAW7qB,EAE3D,CCnCO,MAAM4uD,GACTt3D,cACII,KAAK+kC,WAAa,CAAC,OAAQ,YAAa,OAAQ,iBACpD,CACAnsB,KAAKnc,IDJF,SAAkBA,GACrB,MAAM,QAAEyZ,EAAO,SAAE7J,EAAQ,OAAE1D,EAAM,QAAEqL,GAAYvX,EAAM06D,EAAY9qD,EAASmrB,UAC1E,IAAK2/B,EACD,OAEJ,MAAMC,EAAWD,EAAUlzD,MAC3B,QAAiBzD,IAAb42D,EACA,YAEkB52D,IAAlB6L,EAASk3C,OACTl3C,EAASk3C,KAAO32C,GAAyBwqD,EAAU/qD,EAASysC,kBAEhE,MAAMyK,EAAOl3C,EAASk3C,KAAMrzC,EAAQinD,EAAUjnD,OAAS,GAAIjI,EAASkvD,EAAUlvD,QAAU,MAAO9C,EAbpF,EAa2F1G,KAAK2U,MAAMzK,GAAkBX,EAAOmvD,EAAUnvD,MAAQ,UAAWkQ,EAAO7L,EAAS2M,UACjLg4C,EAAQzN,GAAM1Y,MAAM,MAC1B,GAAKmmB,EAAL,CAGA96C,EAAQlO,KAAO,GAAGkI,KAASjI,KAAU9C,QAAW6C,KAChDkO,EAAQ2H,YAAc7J,EACtB,IAAK,IAAIkmB,EAAI,EAAGA,EAAI82B,EAAM7wD,OAAQ+5B,IAC9B,GAAShkB,EAAS86C,EAAM92B,GAAIvxB,EAAQqL,EAASkmB,EAAGhiB,GAEpDhC,EAAQ2H,YAAc,CANtB,CAOJ,CClBQw5C,CAAS56D,EACb,CACAqL,WAAW+O,GACP,MAAM1L,EAAU0L,EAAUmF,eAAe,WAAE+oB,GAAe/kC,KAC1D,GAAI+kC,EAAWl4B,MAAK7C,GAAKrC,GAAUqC,EAAGmB,EAAQgS,UAAU1E,MAAM6H,QAAQ,CAClE,MAAM6W,EAAe4N,EAChBp7B,KAAIK,GAAKmB,EAAQgS,UAAU1E,MAAMtN,QAAQnB,KACzC6C,MAAK7C,KAAOA,IAAIigC,EAAW,GAChC7/B,GAA0B+sB,GAAc1e,IACpCwxB,EAAS9oB,KAAKpZ,GAAS0Q,EAAMzQ,KAAMyQ,EAAMxQ,QAAQ,UAE/CmU,QAAQsnB,IAAIuG,EACtB,CACJ,CACApR,aAAahiB,EAAWxK,GACpB,IAAKA,EAASoM,QAAUzY,KAAK+kC,WAAW0K,SAASpjC,EAASoM,OACtD,OAEJ,MAAM0+C,EAAY9qD,EAASmrB,UAC3B,QAAkBh3B,IAAd22D,EACA,OAEJ,MAAMC,EAAWD,EAAUlzD,WACVzD,IAAb42D,IAGJ/qD,EAASk3C,KAAO32C,GAAyBwqD,EAAU/qD,EAASysC,iBAChE,EClCG,IAAIwe,IACX,SAAWA,GACPA,EAAyB,UAAI,YAC7BA,EAAgC,iBAAI,oBACpCA,EAAsB,OAAI,QAC7B,CAJD,CAIGA,KAAkBA,GAAgB,CAAC,ICJ/B,MAAMC,GACT33D,cACII,KAAKiK,QAAS,EACdjK,KAAK2V,MAAQ,EACb3V,KAAKyN,MAAQ,EACbzN,KAAK4V,MAAO,CAChB,CACAzN,KAAK1L,GACGiD,EAAOjD,UAGS+D,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKkZ,QACL3V,KAAK2V,MAAQzR,EAAczH,EAAKkZ,aAEjBnV,IAAf/D,EAAKgR,QACLzN,KAAKyN,MAAQvJ,EAAczH,EAAKgR,aAElBjN,IAAd/D,EAAKmZ,OACL5V,KAAK4V,KAAOnZ,EAAKmZ,MAEzB,ECrBG,MAAM4hD,WAAa5qC,GACtBhtB,cACIyC,QACArC,KAAKkN,UAAY,IAAIqqD,GACrBv3D,KAAK4I,UAAY0uD,GAAc3uB,UAC/B3oC,KAAKiK,QAAS,EACdjK,KAAKiE,MAAQ,CACjB,CACAkE,KAAK1L,GACD4F,MAAM8F,KAAK1L,GACPiD,EAAOjD,KAGXuD,KAAKkN,UAAU/E,KAAK1L,EAAKyQ,gBACF1M,IAAnB/D,EAAKmM,YACL5I,KAAK4I,UAAYnM,EAAKmM,gBAENpI,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,QAE3B,ECpBJ,MAAgC,GAAH,EAAcxL,KAAKC,GACzC,MAAM+4D,GACT73D,YAAYiX,GACR7W,KAAK6W,UAAYA,CACrB,CACAmE,mBAAmB3O,GACf,MAAMqrD,EAAOrrD,EAASqrD,MAAMztD,QAAUoC,EAASqrD,KAC/C,MAAO,CACHhlD,EAAGglD,EAAOj5D,KAAK4B,IAAIq3D,EAAKzzD,OAASyzD,EAAKC,kBAAen3D,EACrDyB,EAAGy1D,EAAOj5D,KAAK6B,IAAIo3D,EAAKzzD,OAASyzD,EAAKE,kBAAep3D,EAE7D,CACA2hB,KAAK9V,GACD,MAAMwrD,EAAcxrD,EAASlB,QAAQusD,KACrC,IAAKG,EACD,OAEJxrD,EAASqrD,KAAO,CACZztD,OAAQ4tD,EAAY5tD,OACpBhG,MAAOS,EAASV,EAAc6zD,EAAY5zD,QAC1C2zD,aAAc70D,KAAe7E,EApBxB,KAqBLy5D,aAAc50D,KAAe7E,EArBxB,KAsBLkF,IAAK,EACLC,IAAK,IAET,IAAIy0D,EAAgBD,EAAYjvD,UAChC,GAAIkvD,IAAkBR,GAAc/0D,OAAQ,CAExCu1D,EADcr5D,KAAKkF,MA3BF,EA2BQZ,KAAkC,EACxBu0D,GAAc1uB,iBAAmB0uB,GAAc3uB,SACtF,CACA,OAAQmvB,GACJ,KAAKR,GAAc1uB,iBACnB,IAAK,mBACDv8B,EAASqrD,KAAK/pD,OAAS9H,GAAgBiI,WACvC,MACJ,KAAKwpD,GAAc3uB,UACft8B,EAASqrD,KAAK/pD,OAAS9H,GAAgB+H,WAG/C,MAAMmqD,EAAgB1rD,EAASlB,QAAQusD,MAAMxqD,UACzC6qD,GAAe9tD,SACfoC,EAASqrD,KAAKjqD,MAzCT,EAyC4BzJ,EAAc+zD,EAActqD,OAC7DpB,EAASqrD,KAAKvwD,SACTnD,EAAc+zD,EAAcpiD,OA3C2B,IA2CN3V,KAAK6W,UAAUiC,OAAOxD,aACvEyiD,EAAcniD,OACfvJ,EAASqrD,KAAKvwD,UAAYpE,KAGtC,CACA2vB,UAAUrmB,GACN,MAAM0rD,EAAgB1rD,EAASlB,QAAQusD,MAAMxqD,UAC7C,OAAQb,EAASyC,YAAczC,EAAS+S,YAAc24C,GAAe9tD,MACzE,CACAumB,YAAYrlB,KAAY5B,GACf4B,EAAQusD,OACTvsD,EAAQusD,KAAO,IAAIF,IAEvB,IAAK,MAAMx2D,KAAUuI,EACjB4B,EAAQusD,KAAKvvD,KAAKnH,GAAQ02D,KAElC,CACA5vD,aAAauE,EAAUwC,GACd7O,KAAK0yB,UAAUrmB,IAAcA,EAASqrD,OAG3ChpD,GAAgBrC,EAAUA,EAASqrD,MAAM,EAAO5xD,GAAY2oB,KAAM5f,SAC5DuN,QAAQC,UAClB,ECrEG,MAAM27C,GACTp4D,cACII,KAAKiK,QAAS,EACdjK,KAAKwvD,UAAY,IACjBxvD,KAAKgU,QAAU,CACnB,CACA7L,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKoV,QACL7R,KAAK6R,MAAQuY,GAAazpB,OAAOX,KAAK6R,MAAOpV,EAAKoV,aAElCrR,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEAzJ,IAAnB/D,EAAK+yD,YACLxvD,KAAKwvD,UAAY/yD,EAAK+yD,gBAELhvD,IAAjB/D,EAAKuX,UACLhU,KAAKgU,QAAU9P,EAAczH,EAAKuX,UAE1C,ECrBG,MAAMikD,GACTr4D,cACII,KAAKgxD,MAAQ,IAAIgH,GACjBh4D,KAAKmd,UAAY,IAAI66C,EACzB,CACA7vD,KAAK1L,GACGiD,EAAOjD,KAGXuD,KAAKgxD,MAAM7oD,KAAK1L,EAAKu0D,OACrBhxD,KAAKmd,UAAUhV,KAAK1L,EAAK0gB,WAC7B,ECXG,MAAM+6C,GACTt4D,YAAYyR,GACRrR,KAAK4b,QAAUvK,CACnB,CACA0J,eAAe1O,EAAU6J,EAASvN,EAAQqL,GACtC,MAAmCmkD,EAAlB9rD,EAASlB,QAAmC4lD,QAC7D,IAAKoH,EACD,MAAO,CAAC,EAEZ,MAAMpH,EAAUoH,EAAeh7C,UAAWi7C,EAAYrH,EAAQ9mD,QAAUlH,IAAcguD,EAAQvB,UAAWjwC,EAAgBlT,EAASlB,QAAQ4E,OAAqB0P,GAAH,EAA+BpT,EAASmT,eAAiBD,EAAcG,YAAa24C,EAAmBD,EAAYp0D,EAAc+sD,EAAQ/8C,SAAWyL,EAAiBzL,EAASk9C,EAAa/+C,GAAgBnS,KAAK4b,QAASm1C,EAAQl/C,OAAQymD,EAAepH,EAAaj9C,GAAgBi9C,EAAYmH,QAAoB73D,EAAWqG,EAAM,CAAC,EAAG0xD,EAAeH,GAAaE,EAGlgB,OAFAzxD,EAAIqR,KAAOqgD,EAAeD,OAAe93D,EACzCqG,EAAIyR,OAASigD,EAAeD,OAAe93D,EACpCqG,CACX,CACAiB,mBACUsU,QAAQC,SAClB,CACAqW,UAAUrmB,GACN,MAAmC8rD,EAAlB9rD,EAASlB,QAAmC4lD,QAC7D,QAAKoH,GAGEA,EAAeh7C,UAAUlT,MACpC,CACAumB,YAAYrlB,KAAY5B,GACf4B,EAAQ4lD,UACT5lD,EAAQ4lD,QAAU,IAAIkH,IAE1B,IAAK,MAAMj3D,KAAUuI,EACjB4B,EAAQ4lD,QAAQ5oD,KAAKnH,GAAQ+vD,QAErC,CACAjpD,qBACUsU,QAAQC,SAClB,ECnCG,MAAMm8C,GACT54D,cACII,KAAKE,MAAQ,GACbF,KAAKod,KAAO,EAChB,CACAjV,KAAK1L,GACGiD,EAAOjD,UAGQ+D,IAAf/D,EAAKyD,QACLF,KAAKE,MAAQgE,EAAczH,EAAKyD,aAElBM,IAAd/D,EAAK2gB,OACLpd,KAAKod,KAAOlZ,EAAczH,EAAK2gB,OAEvC,ECdG,MAAMq7C,GACT74D,cACII,KAAKwE,SAAW,EAChBxE,KAAKiK,QAAS,EACdjK,KAAK2V,MAAQ,IAAI6iD,EACrB,CACArwD,KAAK1L,GACD,IAAIiD,EAAOjD,UAGW+D,IAAlB/D,EAAK+H,WACLxE,KAAKwE,SAAWN,EAAczH,EAAK+H,gBAEnBhE,IAAhB/D,EAAKwN,SACLjK,KAAKiK,OAASxN,EAAKwN,aAEJzJ,IAAf/D,EAAKkZ,OACL,GAAIrW,EAAS7C,EAAKkZ,OACd3V,KAAK2V,MAAMxN,KAAK,CAAEjI,MAAOzD,EAAKkZ,YAE7B,CACD,MAAM+iD,EAAaj8D,EAAKkZ,WACDnV,IAAnBk4D,EAAWt1D,IACXpD,KAAK2V,MAAMxN,KAAK,CAAEjI,MAAOw4D,IAGzB14D,KAAK2V,MAAMxN,KAAK1L,EAAKkZ,MAE7B,CAER,EC/BJ,MAAuC,GAAH,EAAclX,KAAKC,GCEvD,MAAkB,GAAH,EAAcD,KAAKC,GAC3B,MAAMi6D,GACT/4D,YAAYiX,GACR7W,KAAK6W,UAAYA,CACrB,CACAsL,KAAK9V,GACD,MAAMusD,EAAYvsD,EAASlB,QAAQ0tD,OAE/BxsD,EAASwsD,OADTD,GAAW3uD,OACO,CACd/J,MAAO6C,IAAc,GACrB+1D,WAAY90D,EAAc40D,EAAUjjD,MAAMzV,OAVA,IAW1C2+B,UAAW76B,EAAc40D,EAAUjjD,MAAMyH,MAXwB,IAenD,CACdld,MAAO,EACP44D,WAAY,EACZj6B,UAAW,GAGnBxyB,EAASyM,OAAOigD,eACZ/0D,EAAc40D,GAAWp0D,UAtBkE,GAsBnCxE,KAAK6W,UAAUiC,OAAOD,UACtF,CACA6Z,UAAUrmB,GACN,OAAQA,EAASyC,YAAczC,EAAS+S,YAAc/S,EAASlB,QAAQ0tD,QAAQ5uD,MACnF,CACAumB,YAAYrlB,KAAY5B,GACf4B,EAAQ0tD,SACT1tD,EAAQ0tD,OAAS,IAAIJ,IAEzB,IAAK,MAAMz3D,KAAUuI,EACjB4B,EAAQ0tD,OAAO1wD,KAAKnH,GAAQ63D,OAEpC,CACAx7B,OAAOhxB,EAAUwC,GACR7O,KAAK0yB,UAAUrmB,IDrCrB,SAAsBA,EAAUwC,GACnC,MAAQgqD,OAAQG,GAAkB3sD,EAASlB,SAAS,OAAE0tD,GAAWxsD,EACjE,IAAK2sD,GAAe/uD,SAAW4uD,EAC3B,OAEJ,MAAMC,EAAaD,EAAOC,WAAajqD,EAAMzH,OAAqD5C,EAAjCq0D,EAAOh6B,UAAYhwB,EAAMzH,SAAkCiF,EAASyM,OAAOigD,gBANxH,GAM6JlqD,EAAMzH,QACnL,mBAA0C/D,EAAM,IAAU,SAAE6B,GAAamH,EAC7EwsD,EAAO34D,OAAS44D,EACZD,EAAO34D,MAAQmD,IACfw1D,EAAO34D,OAASmD,GAEpB6B,EAAS9E,GAAKoE,EAAW/F,KAAK4B,IAAIw4D,EAAO34D,OACzCgF,EAASpF,GAAK0E,EAAW/F,KAAK86B,IAAI96B,KAAK6B,IAAIu4D,EAAO34D,OACtD,CC2BQ+4D,CAAa5sD,EAAUwC,EAC3B,EC/BG/G,eAAeoxD,GAAS7nD,EAAQuR,GAAU,GAC7CvR,EAAO2zB,aAAa,eCZjBl9B,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,WAAWphC,GAChCuF,QAAQC,QAAQ,IAAIgvB,GAAeh6B,EAAQwF,KACnD+L,EACP,CDQUu2C,CAAmB9nD,GAAQ,SEb9BvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,QAAQ,IAC7B77B,QAAQC,QAAQ,IAAIg2B,GAAYhhC,KACxCuR,EACP,CFSUw2C,CAAgB/nD,GAAQ,SGd3BvJ,eAA+BuJ,EAAQuR,GAAU,GACpDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,QAAQphC,GAC7BuF,QAAQC,QAAQ,IAAIo7C,GAAY5gD,KACxC+L,EACP,CHUUy2C,CAAgBhoD,GAAQ,SIf3BvJ,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,WAAW,IAChC77B,QAAQC,QAAQ,IAAI67C,GAAe7mD,KAC3CuR,EACP,CJWU02C,CAAmBjoD,GAAQ,SKhB9BvJ,eAAiCuJ,EAAQuR,GAAU,GACtDvR,EAAO2zB,aAAa,eACd3zB,EAAO4mC,mBAAmB,UAAUphC,GAC/BuF,QAAQC,QAAQ,IAAIs8C,GAAc9hD,KAC1C+L,EACP,CLYU22C,CAAkBloD,GAAQ,SMjB7BvJ,eAA6BuJ,EAAQuR,GAAU,GAClDvR,EAAO2zB,aAAa,eACd3zB,EAAO0mC,SAAS,IAAImf,GAAct0C,EAC5C,CNeU42C,CAAcnoD,GAAQ,SOlBzBvJ,eAA4CuJ,EAAQuR,GAAU,GACjEvR,EAAO2zB,aAAa,eACd3zB,EAAO2hD,cAAc,iBAAiBn8C,GACjCuF,QAAQC,QAAQ,IAAIu1B,GAAW/6B,KACvC+L,EACP,CPcU62C,CAA6BpoD,GAAQ,SQnBxCvJ,eAAmCuJ,EAAQuR,GAAU,GACxDvR,EAAO2zB,aAAa,eACd3zB,EAAO67C,UAAU,IAAI/iB,GAAgB94B,GAASuR,EACxD,CRiBU82C,CAAoBroD,GAAQ,SSnB/BvJ,eAAkCuJ,EAAQuR,GAAU,GACvDvR,EAAO2zB,aAAa,SACf3zB,EAAOw8B,sBACRx8B,EAAOw8B,oBAAsB,IAAImC,GAAa3+B,IAE7CA,EAAOsoD,2BACRtoD,EAAOsoD,yBAA2B,CAAC90C,EAAMmJ,KACrC3c,EAAOw8B,qBAAqBoC,kBAAkBprB,EAAMmJ,EAAU,GAGtE,MAAM5S,EAAS,IAAIw0B,GAAev+B,SAC5BA,EAAO67C,UAAU9xC,EAAQwH,EACnC,CTQUg3C,CAAmBvoD,GAAQ,SUrB9BvJ,eAAuCuJ,EAAQuR,GAAU,GAC5D,MAAMi3C,EAAiBxoD,EACvBwoD,EAAe70B,aAAa,SAC5B60B,EAAeF,2BAA2B,SAAU,IAAI9oB,UAClDgpB,EAAej3C,QAAQA,EACjC,CViBUk3C,CAAwBzoD,GAAQ,SWtBnCvJ,eAAuCuJ,EAAQuR,GAAU,GAC5D,MAAMi3C,EAAiBxoD,EACvBwoD,EAAe70B,aAAa,SAC5B60B,EAAeF,2BAA2B,SAAU,IAAInoB,UAClDqoB,EAAej3C,QAAQA,EACjC,CXkBUm3C,CAAwB1oD,GAAQ,SAChCkkD,GAASlkD,EAAQuR,EAC3B,CYnBA,MAAMo3C,GAAY,cACZC,GAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3CC,GAAiB,UAKjBC,GAAyC,CAC7Cx7C,WAAY,CACV1U,QAAQ,EACR8F,OAAQ,GAEVoN,UAAW,CACTgT,OAAQ,CACNlsB,MAVsB,GAWtBsrB,QAAS,CACPtlB,QAAQ,IAGZ4H,MAAO,CACL5N,MAAOi2D,IAETzhD,MAAO,CACL6H,KAAM,OACNnV,QAAS,CACPivD,KAAM,CACJn2D,MAAOg2D,GACPjyD,KAAMgyD,GACN9pD,MAAO,GACPjI,OAAQ,MACRiQ,MAAM,KAIZlE,QAAS,CACP/P,MAAO,CAAEb,IAAK,EAAGC,IAAK,IACtB6J,UAAW,CACTjD,QAAQ,EACR0L,MAAO,EAIPC,MAAM,EACN3H,WAAY,MACZgB,QAAS,QAGb9J,KAAM,CACJlB,MAAO,CAAEb,IAAK,GAAIC,IAAK,IACvB6J,UAAW,CACTjD,QAAQ,EACR0L,MAAO,EACPC,MAAM,IAGVwH,KAAM,CACJnT,QAAQ,EACR0L,MAAO,CAAEvS,IAAK,GAAKC,IAAK,GACxBuF,UAAW,MACXmmB,UAAU,EACVF,SAAU,CACR/J,QAAS,UACT9b,IAAK,WAEPkU,MAAO,CACLjT,QAAQ,EACRiO,KAAM,CAAErG,MAAO,WACf1R,OAAQ,KAGZmY,OAAQ,CACNlT,MAAO,EACPyM,MAAO,CACL5N,MAAOi2D,GACPhtD,UAAW,CACTjD,QAAQ,EACR0L,MAAO,GACPC,MAAM,MAKd6N,cAAe,CACbuD,UAAW,SACXhD,OAAQ,CACNoC,QAAS,CACPnc,QAAQ,EACRJ,KAAM,aAGV8hB,MAAO,CACLX,SAAU,CACR/gB,QAAQ,EACR4gB,MAAO,GACPC,OAAQ,MAIdoG,cAAc,GAIVmpC,GAAwC,IACzCF,GACHh9C,UAAW,IACLg9C,GAAuBh9C,UAC3BgT,OAAQ,CACNlsB,MAtGqB,GAuGrBsrB,QAAS,CACPtlB,QAAQ,IAGZwO,MAAO,CACH6H,KAAM,OACNnV,QAAS,CACLivD,KAAM,CACFn2D,MAAOg2D,GACPjyD,KAAMgyD,GACN9pD,MAAO,GACPjI,OAAQ,MACRiQ,MAAM,KAIlBlE,QAAS,CACL/P,MAAO,CAAEb,IAAK,EAAGC,IAAK,IACtB6J,UAAW,CACPjD,QAAQ,EACR0L,MAAO,EACPC,MAAM,EACN3H,WAAY,MACZgB,QAAS,QAGjB9J,KAAM,CACJlB,MAAO,CAAEb,IAAK,GAAIC,IAAK,IACvB6J,UAAW,IACLitD,GAAuBh9C,UAAWhY,KAAM+H,YAGhDkQ,KAAM,IACA+8C,GAAuBh9C,UAAWC,KACtCF,MAAO,CACLjT,QAAQ,IAGZqO,OAAQ,IACF6hD,GAAuBh9C,UAAW7E,OACtClT,MAAO,IAGXqe,cAAe,CACbuD,UAAW,SACXhD,OAAQ,CACNoC,QAAS,CACPnc,QAAQ,IAGZ0hB,MAAO,CAAE,IAiDb,OA3CuC,KACrC,MAAM,EAACxJ,EAAI,EAAEm4C,IAAWC,EAAAA,EAAAA,WAAS,IAC3B,EAACC,EAAQ,EAAEC,IAAeF,EAAAA,EAAAA,WAAS,IAEzCG,EAAAA,EAAAA,YAAU,KACc,oBAAXpzD,QACTmzD,EAAY,iBAAkBnzD,QAAUqzD,UAAUC,eAAiB,GC7KzE9yD,eAAiBkC,SACTA,EAAE,GACV,CD6KI6wD,EAAoB/yD,gBACZoxD,GAAS7nD,EAAO,IACrBk2B,MAAK,KACN+yB,GAAQ,GACRl0D,QAAQG,IAAI,oDAAoD,GAChE,GACD,IAEH,MAAM4E,GAAU2vD,EAAAA,EAAAA,UAAQ,KACtB,IAAK34C,EAAM,OAEX,MAAM0jB,EAAiB20B,EAAWH,GAAwBF,GAE1D,OADA/zD,QAAQG,IAAI,6BAA8Bs/B,GACnCA,CAAc,GACpB,CAAC1jB,EAAMq4C,IAMV,OAAKr4C,GAAShX,GAKd/E,QAAQG,IAAI,+CAEV5I,EAAAA,cAACi9B,GAAS,CACRxE,GAAG,cACHjrB,QAASA,EACTq8B,gBAdoB1/B,UACtB1B,QAAQG,IAAI,gCAAiCsQ,EAAU,MAIvDzQ,QAAQG,IAAI,kDAAmD4b,EAAM,qBAAsBhX,GACpF,KASL,EE9MN,SAAS4vD,GAAkBr9D,GACzB,OAAOC,EAAAA,cAAoBq9D,GAC7B,CAKA,OAJA,SAAoBt9D,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOu9D,QAASC,GAAajhD,OAAOkhD,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsB19D,EAAM29D,YAC3E,OAAOH,EAAYv9D,EAAAA,cAAoBu9D,EAAWx9D,EAAOC,EAAAA,cAAoBo9D,GAAmBr9D,IAAUq9D,IAC5G,E,WCNe,SAASO,GAAiB59D,GACvC,OAAOC,EAAAA,cAAoB49D,GAAAA,EAAe79D,EAAOC,EAAAA,cAAoB69D,GAAqB99D,GAC5F,CAHA69D,GAAAA,C","sources":["webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Types/RangeType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Canvas.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Particle.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Particles.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Retina.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Container.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Engine.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/engine/browser/init.js","webpack://sophia-saiada/./node_modules/@tsparticles/react/dist/Particles.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSizeLimit.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSize.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/Options/Classes/Absorber.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/Enums/AbsorberClickMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/AbsorberInstance.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/Absorbers.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/AbsorbersPlugin.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Options/Classes/DestroyBounds.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Enums/DestroyMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Options/Classes/SplitFactor.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Options/Classes/SplitRate.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Options/Classes/Split.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Options/Classes/Destroy.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/DestroyUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Enums/EmitterClickMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/EmitterInstance.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/Emitters.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/EmittersPlugin.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/ShapeManager.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/EmitterShapeBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShape.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShapeGenerator.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShape.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShapeGenerator.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-trail/browser/Options/Classes/Trail.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-trail/browser/TrailMaker.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/RollMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/Options/Classes/RollLight.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/Options/Classes/Roll.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/RollUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/move-base/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/move-base/browser/BaseMover.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-circle/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/basic/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-hex-color/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-hsl-color/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-rgb-color/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/move-base/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-circle/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-color/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-opacity/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-out-modes/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-size/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-emoji/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-image/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-line/browser/LineDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-line/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-polygon/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-polygon/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-square/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-star/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-star/browser/StarDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/slim/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/move-parallax/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-attract/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bounce/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-bubble/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-connect/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-grab/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-pause/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-push/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-remove/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-repulse/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-slow/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-attract/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-easing-quad/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-emoji/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-line/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-square/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-star/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-life/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-rotate/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-stroke-color/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-text/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-text/browser/TextDrawer.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-tilt/browser/TiltDirection.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-tilt/browser/Options/Classes/TiltAnimation.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-tilt/browser/Options/Classes/Tilt.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-tilt/browser/TiltUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-twinkle/browser/Options/Classes/TwinkleValues.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-twinkle/browser/Options/Classes/Twinkle.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-twinkle/browser/TwinkleUpdater.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-wobble/browser/Utils.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-wobble/browser/WobbleUpdater.js","webpack://sophia-saiada/./node_modules/tsparticles/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-destroy/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-roll/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-tilt/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-twinkle/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/updater-wobble/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/shape-text/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/interaction-external-trail/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-absorbers/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-circle/browser/index.js","webpack://sophia-saiada/./node_modules/@tsparticles/plugin-emitters-shape-square/browser/index.js","webpack://sophia-saiada/./src/components/background.tsx","webpack://sophia-saiada/./node_modules/@tsparticles/react/dist/index.js","webpack://sophia-saiada/./content/pages/new/index.mdx","webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { isNull } from \"@tsparticles/engine\";\nexport class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNull, isNumber } from \"@tsparticles/engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit.js\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { AbsorberSize } from \"./AbsorberSize.js\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","export var AbsorberClickMode;\n(function (AbsorberClickMode) {\n    AbsorberClickMode[\"absorber\"] = \"absorber\";\n})(AbsorberClickMode || (AbsorberClickMode = {}));\n","import { RotateDirection, Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, originPoint, percentDenominator, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nconst squareExp = 2, absorbFactor = 0.033, minOrbitLength = 0, minRadius = 0, minMass = 0, minAngle = 0, double = 2, maxAngle = Math.PI * double, minVelocity = 0;\nexport class AbsorberInstance {\n    constructor(absorbers, container, engine, options, position) {\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this._container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this._container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.origin;\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * maxAngle;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height), offset = 1, randomOffset = 0.1, randomFactor = 0.2;\n                    particle.absorberOrbit.length = minSize * (offset + (getRandom() * randomFactor - randomOffset));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise;\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === RotateDirection.clockwise ? Math.cos : Math.sin,\n                    y: orbitDirection === RotateDirection.clockwise ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? minVelocity) * container.retina.pixelRatio) / percentDenominator) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this._absorbers = absorbers;\n        this._container = container;\n        this._engine = engine;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this._engine, this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this._container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, squareExp)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * absorbFactor * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < minOrbitLength)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= minRadius || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= minMass || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(originPoint.x, originPoint.y, this.size, minAngle, maxAngle, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this._container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { AbsorberInstance } from \"./AbsorberInstance.js\";\nconst defaultIndex = 0;\nexport class Absorbers {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addAbsorber = async (options, position) => this.addAbsorber(options, position);\n    }\n    async addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this._container, this._engine, options, position);\n        this.array.push(absorber);\n        return Promise.resolve(absorber);\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === AbsorberClickMode.absorber) {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this._container.interactivity.mouse.clickPosition;\n            void this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this._container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this._container.actualOptions.interactivity.modes.absorbers;\n        const promises = executeOnSingleOrMultiple(this.absorbers, async (absorber) => {\n            await this.addAbsorber(absorber);\n        });\n        if (promises instanceof Array) {\n            await Promise.all(promises);\n        }\n        else {\n            await promises;\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber), deleteCount = 1;\n        if (index >= defaultIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { Absorbers } from \"./Absorbers.js\";\nexport class AbsorbersPlugin {\n    constructor(engine) {\n        this.id = \"absorbers\";\n        this._engine = engine;\n    }\n    async getPlugin(container) {\n        return Promise.resolve(new Absorbers(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, absorber => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, absorber => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","export var DestroyMode;\n(function (DestroyMode) {\n    DestroyMode[\"none\"] = \"none\";\n    DestroyMode[\"split\"] = \"split\";\n})(DestroyMode || (DestroyMode = {}));\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { SplitFactor } from \"./SplitFactor.js\";\nimport { SplitRate } from \"./SplitRate.js\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { DestroyBounds } from \"./DestroyBounds.js\";\nimport { DestroyMode } from \"../../Enums/DestroyMode.js\";\nimport { Split } from \"./Split.js\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = DestroyMode.none;\n        this.split = new Split();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { PixelMode, getRangeValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst defaultOffset = 0, minDestroySize = 0.5, defaultSplitCount = 0, increment = 1, unbreakableTime = 500, minSplitCount = 0;\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getRangeValue(splitOptions.factor.value), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? defaultOffset),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? defaultOffset),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? defaultOffset),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: PixelMode.precise,\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : defaultOffset, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < minDestroySize) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? defaultSplitCount) + increment;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, unbreakableTime);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= minSplitCount &&\n        (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getRangeValue(splitOptions.rate.value), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, percentDenominator, } from \"@tsparticles/engine\";\nimport { Destroy } from \"./Options/Classes/Destroy.js\";\nimport { DestroyMode } from \"./Enums/DestroyMode.js\";\nimport { split } from \"./Utils.js\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.container = container;\n        this.engine = engine;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / percentDenominator;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / percentDenominator;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / percentDenominator;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / percentDenominator;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === DestroyMode.split) {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class EmitterShapeReplace {\n    constructor() {\n        this.color = false;\n        this.opacity = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { deepExtend, isNull } from \"@tsparticles/engine\";\nimport { EmitterShapeReplace } from \"./EmitterShapeReplace.js\";\nexport class EmitterShape {\n    constructor() {\n        this.options = {};\n        this.replace = new EmitterShapeReplace();\n        this.type = \"square\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options ?? {});\n        }\n        this.replace.load(data.replace);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { PixelMode, isNull } from \"@tsparticles/engine\";\nexport class EmitterSize {\n    constructor() {\n        this.mode = PixelMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { EmitterLife } from \"./EmitterLife.js\";\nimport { EmitterRate } from \"./EmitterRate.js\";\nimport { EmitterShape } from \"./EmitterShape.js\";\nimport { EmitterSize } from \"./EmitterSize.js\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = new EmitterShape();\n        this.startCount = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        this.shape.load(data.shape);\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","export var EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode || (EmitterClickMode = {}));\n","import { PixelMode, Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, millisecondsToSeconds, randomInRange, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize.js\";\nconst half = 0.5, defaultLifeDelay = 0, minLifeCount = 0, defaultSpawnDelay = 0, defaultEmitDelay = 0, defaultLifeCount = -1, defaultColorAnimationFactor = 1;\nfunction setParticlesOptionsColor(particlesOptions, color) {\n    if (particlesOptions.color) {\n        particlesOptions.color.value = color;\n    }\n    else {\n        particlesOptions.color = {\n            value: color,\n        };\n    }\n}\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._destroy = () => {\n            this._mutationObserver?.disconnect();\n            this._mutationObserver = undefined;\n            this._resizeObserver?.disconnect();\n            this._resizeObserver = undefined;\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined, minDuration = 0, minLifeCount = 0;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > minLifeCount || this._immortal) &&\n                duration !== undefined &&\n                duration > minDuration) {\n                this._duration = duration * millisecondsToSeconds;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue, factor = defaultColorAnimationFactor) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (delay * millisecondsToSeconds) / container.retina.reduceFactor, defaultColorSpeed = 0, colorSpeed = getRangeValue(animation.speed ?? defaultColorSpeed);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * factor) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay =\n            (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this._engine, this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._lifeCount = this.options.life.count ?? defaultLifeCount;\n        this._immortal = this._lifeCount <= minLifeCount;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                this._mutationObserver = new MutationObserver(() => {\n                    this.resize();\n                });\n                this._resizeObserver = new ResizeObserver(() => {\n                    this.resize();\n                });\n                this._mutationObserver.observe(element, {\n                    attributes: true,\n                    attributeFilter: [\"style\", \"width\", \"height\"],\n                });\n                this._resizeObserver.observe(element);\n            }\n        }\n        const shapeOptions = this.options.shape, shapeGenerator = this._engine.emitterShapeManager?.getShapeGenerator(shapeOptions.type);\n        if (shapeGenerator) {\n            this._shape = shapeGenerator.generate(this.position, this.size, this.fill, shapeOptions.options);\n        }\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    async init() {\n        await this._shape?.init();\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > minLifeCount || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? defaultSpawnDelay)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > minLifeCount || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._shape?.resize(this.position, this.size);\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? defaultSpawnDelay;\n            this._currentEmitDelay = this._emitDelay ?? defaultEmitDelay;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > minLifeCount || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._shape?.resize(this.position, this.size);\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                            this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    _calcPosition() {\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect(), pxRatio = this.container.retina.pixelRatio;\n                return {\n                    x: (elRect.x + elRect.width * half) * pxRatio,\n                    y: (elRect.y + elRect.height * half) * pxRatio,\n                };\n            }\n        }\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    _calcSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                    mode: PixelMode.precise,\n                };\n            }\n        }\n        return (this.options.size ??\n            (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: PixelMode.percent,\n                    width: 0,\n                });\n                return size;\n            })());\n    }\n    _emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this._emitParticles(quantity);\n    }\n    _emitParticles(quantity) {\n        const singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = this.options.spawnColor?.animation;\n                if (hslAnimation) {\n                    const maxValues = {\n                        h: 360,\n                        s: 100,\n                        l: 100,\n                    }, colorFactor = 3.6;\n                    this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, maxValues.h, colorFactor);\n                    this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, maxValues.s);\n                    this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, maxValues.l);\n                }\n                setParticlesOptionsColor(particlesOptions, this.spawnColor);\n            }\n            const shapeOptions = this.options.shape;\n            let position = this.position;\n            if (this._shape) {\n                const shapePosData = this._shape.randomPosition();\n                if (shapePosData) {\n                    position = shapePosData.position;\n                    const replaceData = shapeOptions.replace;\n                    if (replaceData.color && shapePosData.color) {\n                        setParticlesOptionsColor(particlesOptions, shapePosData.color);\n                    }\n                    if (replaceData.opacity) {\n                        if (particlesOptions.opacity) {\n                            particlesOptions.opacity.value = shapePosData.opacity;\n                        }\n                        else {\n                            particlesOptions.opacity = {\n                                value: shapePosData.opacity,\n                            };\n                        }\n                    }\n                }\n                else {\n                    position = null;\n                }\n            }\n            if (position) {\n                this.container.particles.addParticle(position, particlesOptions);\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { EmitterInstance } from \"./EmitterInstance.js\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        const defaultIndex = 0;\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addEmitter = async (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    async addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        await emitter.init();\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== EmitterClickMode.emitter) {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            const minLength = 0;\n            if (modeEmitters.value.length > minLength && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        void executeOnSingleOrMultiple(emittersOptions, async (emitter) => {\n            await this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                await this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            await this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter), minIndex = 0, deleteCount = 1;\n        if (index >= minIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { Emitters } from \"./Emitters.js\";\nexport class EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new Emitters(this._engine, container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, emitter => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map(s => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    const defaultCount = 1;\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map(s => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(EmitterClickMode.emitter, options.interactivity.events.onClick.mode)));\n    }\n}\n","const shapeGeneratorss = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShapeGenerator(name, generator) {\n        if (!this.getShapeGenerator(name)) {\n            shapeGeneratorss.set(name, generator);\n        }\n    }\n    getShapeGenerator(name) {\n        return shapeGeneratorss.get(name);\n    }\n    getSupportedShapeGenerators() {\n        return shapeGeneratorss.keys();\n    }\n}\n","export class EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        this.position = position;\n        this.size = size;\n        this.fill = fill;\n        this.options = options;\n    }\n    resize(position, size) {\n        this.position = position;\n        this.size = size;\n    }\n}\n","import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom } from \"@tsparticles/engine\";\nconst quarter = 0.25, double = 2, doublePI = Math.PI * double, squareExp = 2, half = 0.5;\nexport class EmittersCircleShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const size = this.size, fill = this.fill, position = this.position, generateTheta = (x, y) => {\n            const u = getRandom() * quarter, theta = Math.atan((y / x) * Math.tan(doublePI * u)), v = getRandom();\n            if (v < quarter) {\n                return theta;\n            }\n            else if (v < double * quarter) {\n                return Math.PI - theta;\n            }\n            else if (v < double * quarter + quarter) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** squareExp + (x * Math.sin(theta)) ** squareExp), [a, b] = [size.width * half, size.height * half], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            position: {\n                x: position.x + randomRadius * Math.cos(randomTheta),\n                y: position.y + randomRadius * Math.sin(randomTheta),\n            },\n        };\n    }\n}\n","import { EmittersCircleShape } from \"./EmittersCircleShape.js\";\nexport class EmittersCircleShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersCircleShape(position, size, fill, options);\n    }\n}\n","import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { double, getRandom, half } from \"@tsparticles/engine\";\nconst sides = 4;\nvar Sides;\n(function (Sides) {\n    Sides[Sides[\"TopLeft\"] = 0] = \"TopLeft\";\n    Sides[Sides[\"TopRight\"] = 1] = \"TopRight\";\n    Sides[Sides[\"BottomRight\"] = 2] = \"BottomRight\";\n    Sides[Sides[\"BottomLeft\"] = 3] = \"BottomLeft\";\n})(Sides || (Sides = {}));\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - half);\n}\nexport class EmittersSquareShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const fill = this.fill, position = this.position, size = this.size;\n        if (fill) {\n            return {\n                position: {\n                    x: randomSquareCoordinate(position.x, size.width),\n                    y: randomSquareCoordinate(position.y, size.height),\n                },\n            };\n        }\n        else {\n            const halfW = size.width * half, halfH = size.height * half, side = Math.floor(getRandom() * sides), v = (getRandom() - half) * double;\n            switch (side) {\n                case Sides.TopLeft:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y - halfH,\n                        },\n                    };\n                case Sides.TopRight:\n                    return {\n                        position: {\n                            x: position.x - halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n                case Sides.BottomRight:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y + halfH,\n                        },\n                    };\n                case Sides.BottomLeft:\n                default:\n                    return {\n                        position: {\n                            x: position.x + halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n            }\n        }\n    }\n}\n","import { EmittersSquareShape } from \"./EmittersSquareShape.js\";\nexport class EmittersSquareShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersSquareShape(position, size, fill, options);\n    }\n}\n","import { deepExtend, isNull, } from \"@tsparticles/engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Trail } from \"./Options/Classes/Trail.js\";\nconst trailMode = \"trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(trailMode, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(trailMode, events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","export var RollMode;\n(function (RollMode) {\n    RollMode[\"both\"] = \"both\";\n    RollMode[\"horizontal\"] = \"horizontal\";\n    RollMode[\"vertical\"] = \"vertical\";\n})(RollMode || (RollMode = {}));\n","import { AlterType, getRandom, getRangeValue, half, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { RollMode } from \"./RollMode.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport function initParticle(engine, particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === RollMode.horizontal || rollOpt.mode === RollMode.both,\n        vertical: rollOpt.mode === RollMode.vertical || rollOpt.mode === RollMode.both,\n        angle: getRandom() * doublePI,\n        speed: getRangeValue(rollOpt.speed) / maxAngle,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(engine, rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= half ? AlterType.darken : AlterType.enlighten;\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: AlterType.darken,\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: AlterType.enlighten,\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = doublePI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { RollLight } from \"./RollLight.js\";\nimport { RollMode } from \"../../RollMode.js\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = RollMode.vertical;\n        this.speed = 25;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils.js\";\nimport { Roll } from \"./Options/Classes/Roll.js\";\nexport class RollUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(this._engine, particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n","import { itemFromSingleOrMultiple } from \"@tsparticles/engine\";\nconst double = 2, half = 0.5;\nexport function drawText(data) {\n    const { context, particle, radius, opacity } = data, character = particle.shapeData;\n    if (!character) {\n        return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n        return;\n    }\n    if (particle.text === undefined) {\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n    const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * double, font = character.font ?? \"Verdana\", fill = particle.shapeFill;\n    const lines = text?.split(\"\\n\");\n    if (!lines) {\n        return;\n    }\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    context.globalAlpha = opacity;\n    for (let i = 0; i < lines.length; i++) {\n        drawLine(context, lines[i], radius, opacity, i, fill);\n    }\n    context.globalAlpha = 1;\n}\nfunction drawLine(context, line, radius, opacity, index, fill) {\n    const offsetX = line.length * radius * half, pos = {\n        x: -offsetX,\n        y: radius * half,\n    }, diameter = radius * double;\n    if (fill) {\n        context.fillText(line, pos.x, pos.y + diameter * index);\n    }\n    else {\n        context.strokeText(line, pos.x, pos.y + diameter * index);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawText } from \"./Utils.js\";\nexport class TextDrawer {\n    constructor() {\n        this.validTypes = [\"text\", \"character\", \"char\", \"multiline-text\"];\n    }\n    draw(data) {\n        drawText(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map(t => options.particles.shape.options[t])\n                .find(t => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !this.validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","export var TiltDirection;\n(function (TiltDirection) {\n    TiltDirection[\"clockwise\"] = \"clockwise\";\n    TiltDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    TiltDirection[\"random\"] = \"random\";\n})(TiltDirection || (TiltDirection = {}));\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nimport { TiltDirection } from \"../../TiltDirection.js\";\nimport { TiltAnimation } from \"./TiltAnimation.js\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = TiltDirection.clockwise;\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, degToRad, getRandom, getRangeValue, half, updateAnimation, } from \"@tsparticles/engine\";\nimport { Tilt } from \"./Options/Classes/Tilt.js\";\nimport { TiltDirection } from \"./TiltDirection.js\";\nconst identity = 1, double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: degToRad(getRangeValue(tiltOptions.value)),\n            sinDirection: getRandom() >= half ? identity : -identity,\n            cosDirection: getRandom() >= half ? identity : -identity,\n            min: 0,\n            max: doublePI,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === TiltDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            tiltDirection = index > minIndex ? TiltDirection.counterClockwise : TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = AnimationStatus.decreasing;\n                break;\n            case TiltDirection.clockwise:\n                particle.tilt.status = AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = identity - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity =\n                (getRangeValue(tiltAnimation.speed) / maxAngle) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.tilt) {\n            return;\n        }\n        updateAnimation(particle, particle.tilt, false, DestroyType.none, delta);\n        await Promise.resolve();\n    }\n}\n","import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { TwinkleValues } from \"./TwinkleValues.js\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle.js\";\nexport class TwinkleUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOffset = 1, zOpacityFactor = (zOffset - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(this._engine, twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    async init() {\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    async update() {\n        await Promise.resolve();\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNull, isNumber, setRangeValue, } from \"@tsparticles/engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed.js\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { millisecondsToSeconds } from \"@tsparticles/engine\";\nconst defaultDistance = 0, double = 2, doublePI = Math.PI * double, distanceFactor = 60;\nexport function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? defaultDistance) * delta.factor)) /\n        (millisecondsToSeconds / distanceFactor), max = doublePI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { getRandom, getRangeValue, } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nimport { updateWobble } from \"./Utils.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * doublePI,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance =\n            getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { loadAbsorbersPlugin } from \"@tsparticles/plugin-absorbers\";\nimport { loadDestroyUpdater } from \"@tsparticles/updater-destroy\";\nimport { loadEmittersPlugin } from \"@tsparticles/plugin-emitters\";\nimport { loadEmittersShapeCircle } from \"@tsparticles/plugin-emitters-shape-circle\";\nimport { loadEmittersShapeSquare } from \"@tsparticles/plugin-emitters-shape-square\";\nimport { loadExternalTrailInteraction } from \"@tsparticles/interaction-external-trail\";\nimport { loadRollUpdater } from \"@tsparticles/updater-roll\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { loadTextShape } from \"@tsparticles/shape-text\";\nimport { loadTiltUpdater } from \"@tsparticles/updater-tilt\";\nimport { loadTwinkleUpdater } from \"@tsparticles/updater-twinkle\";\nimport { loadWobbleUpdater } from \"@tsparticles/updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadTextShape(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadEmittersShapeCircle(engine, false);\n    await loadEmittersShapeSquare(engine, false);\n    await loadSlim(engine, refresh);\n}\n","import { DestroyUpdater } from \"./DestroyUpdater.js\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"destroy\", container => {\n        return Promise.resolve(new DestroyUpdater(engine, container));\n    }, refresh);\n}\n","import { RollUpdater } from \"./RollUpdater.js\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"roll\", () => {\n        return Promise.resolve(new RollUpdater(engine));\n    }, refresh);\n}\n","import { TiltUpdater } from \"./TiltUpdater.js\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"tilt\", container => {\n        return Promise.resolve(new TiltUpdater(container));\n    }, refresh);\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater.js\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"twinkle\", () => {\n        return Promise.resolve(new TwinkleUpdater(engine));\n    }, refresh);\n}\n","import { WobbleUpdater } from \"./WobbleUpdater.js\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"wobble\", container => {\n        return Promise.resolve(new WobbleUpdater(container));\n    }, refresh);\n}\n","import { TextDrawer } from \"./TextDrawer.js\";\nexport async function loadTextShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TextDrawer(), refresh);\n}\n","import { TrailMaker } from \"./TrailMaker.js\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalTrail\", container => {\n        return Promise.resolve(new TrailMaker(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Trail.js\";\nexport * from \"./Options/Interfaces/ITrail.js\";\n","import { AbsorbersPlugin } from \"./AbsorbersPlugin.js\";\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new AbsorbersPlugin(engine), refresh);\n}\nexport * from \"./AbsorberContainer.js\";\nexport * from \"./Enums/AbsorberClickMode.js\";\n","import { EmittersPlugin } from \"./EmittersPlugin.js\";\nimport { ShapeManager } from \"./ShapeManager.js\";\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShapeGenerator) {\n        engine.addEmitterShapeGenerator = (name, generator) => {\n            engine.emitterShapeManager?.addShapeGenerator(name, generator);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\nexport * from \"./EmitterContainer.js\";\nexport * from \"./EmitterShapeBase.js\";\nexport * from \"./EmittersEngine.js\";\nexport * from \"./IEmitterShape.js\";\nexport * from \"./IEmitterShapeGenerator.js\";\nexport * from \"./Enums/EmitterClickMode.js\";\nexport * from \"./IRandomPositionData.js\";\n","import { EmittersCircleShapeGenerator } from \"./EmittersCircleShapeGenerator.js\";\nexport async function loadEmittersShapeCircle(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"circle\", new EmittersCircleShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n","import { EmittersSquareShapeGenerator } from \"./EmittersSquareShapeGenerator.js\";\nexport async function loadEmittersShapeSquare(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"square\", new EmittersSquareShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { type Container, type ISourceOptions } from \"@tsparticles/engine\";\nimport { loadFull } from \"tsparticles\"; // Using \"tsparticles\" package for loadFull\n\n// CRITICAL: The font specified in FONT_NAME ('Elder Magic') \n// MUST be loaded globally in your Gatsby project for character particles to render.\nconst FONT_NAME = \"Elder Magic\"; // Corrected font name\nconst PARTICLE_CHARS = [\"S\", \"O\", \"P\", \"H\", \"I\", \"E\"];\nconst PARTICLE_COLOR = \"#FF00FF\"; // Magenta\n\nconst desktopMaxParticles = 75;\nconst mobileMaxParticles = 40;\n\nconst DesktopParticleOptions: ISourceOptions = {\n  fullScreen: {\n    enable: true,\n    zIndex: 0, \n  },\n  particles: {\n    number: {\n      value: desktopMaxParticles,\n      density: {\n        enable: false, \n      },\n    },\n    color: {\n      value: PARTICLE_COLOR, \n    },\n    shape: {\n      type: \"char\", \n      options: { \n        char: { \n          value: PARTICLE_CHARS,\n          font: FONT_NAME,\n          style: \"\", \n          weight: \"400\", \n          fill: true,\n        }\n      }\n    },\n    opacity: {\n      value: { min: 0, max: 0.8 }, // Min opacity is 0 for full transparency\n      animation: {\n        enable: true,\n        speed: 3, // Increased speed significantly for faster fade out\n                  // Higher speed = fade out and disappear lower on screen\n                  // Lower speed = fade out and disappear higher on screen\n                  // Adjust this value to target halfway point.\n        sync: false,\n        startValue: \"max\", // Particles start at max opacity\n        destroy: \"min\"    // Destroy particle when its opacity reaches the minimum (0)\n      },\n    },\n    size: {\n      value: { min: 16, max: 26 }, \n      animation: {\n        enable: true,\n        speed: 2,\n        sync: false,\n      },\n    },\n    move: {\n      enable: true,\n      speed: { min: 0.3, max: 1 }, \n      direction: \"top\",\n      straight: true, \n      outModes: { \n        default: \"destroy\", \n        top: \"destroy\",     \n      },\n      trail: { \n        enable: true, \n        fill: { color: \"#000000\" }, \n        length: 10, \n      },\n    },\n    stroke: { \n      width: 1, \n      color: {\n        value: PARTICLE_COLOR,\n        animation: { \n          enable: true,\n          speed: 20, \n          sync: true\n        }\n      }\n    },\n  },\n  interactivity: {\n    detectsOn: \"canvas\", // Explicitly detect events on canvas for interactivity\n    events: {\n      onHover: {\n        enable: true, \n        mode: \"parallax\", \n      },\n    },\n    modes: {\n      parallax: {\n        enable: true,\n        force: 25, // Increased force slightly for more noticeable parallax\n        smooth: 10, \n      },\n    },\n  },\n  detectRetina: true, \n  // background property is intentionally removed for transparency\n};\n\nconst MobileParticleOptions: ISourceOptions = {\n  ...DesktopParticleOptions, \n  particles: {\n    ...(DesktopParticleOptions.particles!), \n    number: {\n      value: mobileMaxParticles, \n      density: {\n        enable: false, \n      },\n    },\n    shape: { \n        type: \"char\",\n        options: {\n            char: {\n                value: PARTICLE_CHARS,\n                font: FONT_NAME,\n                style: \"\",\n                weight: \"400\",\n                fill: true,\n            }\n        }\n    },\n    opacity: { \n        value: { min: 0, max: 0.8 },\n        animation: {\n            enable: true,\n            speed: 3, // Consistent opacity animation speed for mobile\n            sync: false,\n            startValue: \"max\",\n            destroy: \"min\",\n        }\n    },\n    size: { \n      value: { min: 12, max: 20 }, \n      animation: { \n        ...(DesktopParticleOptions.particles!.size!.animation!),\n      },\n    },\n    move: { \n      ...(DesktopParticleOptions.particles!.move!), \n      trail: { \n        enable: false, \n      }\n    },\n    stroke: { \n      ...(DesktopParticleOptions.particles!.stroke!), \n      width: 0, \n    }\n  },\n  interactivity: { // Parallax disabled for mobile\n    detectsOn: \"canvas\",\n    events: {\n      onHover: {\n        enable: false,\n      },\n    },\n    modes: { // Keep modes empty or define mobile-specific if any\n    }\n  },\n};\n\n\nconst TsParticlesAnimation: React.FC = () => {\n  const [init, setInit] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      setIsMobile(\"ontouchstart\" in window || navigator.maxTouchPoints > 0);\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine); \n    }).then(() => {\n      setInit(true);\n      console.log(\"tsParticles FULL engine initialized successfully.\");\n    });\n  }, []);\n\n  const options = useMemo(() => {\n    if (!init) return undefined; \n    \n    const currentOptions = isMobile ? MobileParticleOptions : DesktopParticleOptions;\n    console.log(\"Using tsParticles options:\", currentOptions); \n    return currentOptions;\n  }, [init, isMobile]);\n\n  const particlesLoaded = async (container?: Container): Promise<void> => {\n    console.log(\"tsParticles container loaded:\", container);\n  };\n\n  if (!init || !options) {\n    console.log(\"tsParticles: Waiting for init or options. Init:\", init, \"Options defined:\", !!options);\n    return null; // Render null for transparency during loading\n  }\n\n  console.log(\"tsParticles: Rendering Particles component.\");\n  return (\n    <Particles\n      id=\"tsparticles\"\n      options={options}\n      particlesLoaded={particlesLoaded} \n    />\n  );\n};\n\nexport default TsParticlesAnimation;\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport TsParticlesAnimation from \"../../../src/components/background\";\nfunction _createMdxContent(props) {\n  return React.createElement(TsParticlesAnimation);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/sophie/Repos/sophiasaiada.github.io/content/pages/new/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["_ref","data","page","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","_ref2","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","half","millisecondsToSeconds","originPoint","defaultTransform","randomColorValue","midColorValue","doublePI","Math","PI","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","quarter","rgbFactor","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","isNull","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","cos","sin","coords3d","undefined","Error","origin","create","atan2","sqrt","getLengthSq","static","source","add","v","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","getRandom","clamp","Number","EPSILON","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","position","size","width","height","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","async","loadFont","font","weight","fonts","load","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","direction","bounds","inside","bottom","top","left","right","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","key","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","enable","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","percent","_","rest","getSize","updateAnimation","changeDirection","destroyType","delta","destroyed","minValue","maxValue","destroy","checkDestroy","getFullScreenStyle","fn","cache","Map","args","JSON","stringify","has","get","result","set","memoize","zIndex","fullScreenStyle","createElement","style","margin","padding","borderWidth","toString","setProperty","AlterType","InteractivityDetect","EventType","DivType","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","RangeType","stringToRgba","engine","manager","colorManagers","values","startsWith","stringPrefix","parseString","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","g","b1","b","h","l","s","hslToRgb","hsl","hNormalized","sNormalized","lNormalized","grayscaleValue","round","channel","temp1","temp2","temp3","temp3Max","phaseThird","red","green","blue","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","updateColorValue","range","updateColor","ranges","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","drawParticle","container","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","rotating","transformData","a","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","fillStyle","strokeWidth","lineWidth","stroke","strokeStyle","drawData","shape","drawer","shapeDrawers","draw","pixelRatio","retina","shapeClose","shapeFill","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","newValue","setStyle","canvas","important","elementStyle","keys","Set","Object","prototype","hasOwnProperty","call","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","_engine","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","addEventListener","_coverImage","evt","src","_initStyle","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_originalStyle","_mutationObserver","fullScreen","_standardSize","stdSize","_context","_generated","paint","stop","remove","drawAsync","spawning","pfColor","psColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","dataset","ariaHidden","clonedStyle","styleKey","styleValue","stylePriority","getPropertyPriority","cloneStyle","standardSize","offsetHeight","offsetWidth","retinaSize","getContext","init","currentSize","newSize","oldSize","started","setResizeFactor","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","themes","theme","name","default","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","tmp","Modes","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","Effect","close","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","hasOwn","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","getInteractors","external","particlesInteract","reset","fixOutMode","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","unbreakable","inRange","slow","pathGenerator","particleDestroy","particleDestroyed","dispatchEvent","strokeColor","id","overrideOptions","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","shapeDrawer","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","BaseRange","Circle","contains","intersects","distPos","abs","Rectangle","rectangle","rectRange","pow","w","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","limitMode","currentCount","countToRemove","wait","update","condition","particlesInitialization","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","resizeFactor","particleUpdate","checkDelete","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","radiusX","radiusY","clearClickHandlers","clearPlugins","mainArr","items","findIndex","containerDestroyed","refreshTime","frame","_drawAnimationFrame","export","supported","blob","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","containerInit","particlesSetup","_currentTheme","handle","containerPaused","needsUpdate","containerPlay","start","HTMLElement","containerStarted","_delayTimeout","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addConfig","configAdded","easing","getEasing","interactorInitializer","moverInitializer","updaterInitializer","getPlugin","validType","validTypes","checkVersion","pluginVersion","dom","domItem","needsPlugin","params","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","newItem","old","deleteCount","domContainer","getElementById","body","append","getDomContainer","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","setOnClickHandler","ExternalInteractorBase","ParticlesInteractorBase","RotateDirection","GradientType","EasingType","tsParticles","f","then","particlesLoaded","className","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberClickMode","maxAngle","AbsorberInstance","absorbers","_updateParticlePosition","needsNewPosition","newPosition","absorberOrbit","minSize","randomOffset","randomFactor","absorberOrbitDirection","clockwise","counterClockwise","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","_absorbers","dragging","sizeFactor","translate","arc","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersOptions","aPosition","promises","removeAbsorber","AbsorbersPlugin","DestroyBounds","DestroyMode","SplitFactor","SplitRate","Split","rate","sizeOffset","colorOffset","Destroy","split","addSplitParticle","splitParticlesOptions","destroyOptions","splitOptions","parentColor","precise","splitCount","DestroyUpdater","destroyBoundsOptions","destroyBounds","particlesSplitOptions","EmitterLife","EmitterRate","EmitterShapeReplace","EmitterShape","replace","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterClickMode","setParticlesOptionsColor","EmitterInstance","emitters","_destroy","removeEmitter","emitter","_prepareToDie","_lifeCount","_immortal","_setColorAnimation","initValue","emitFactor","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_firstSpawn","_startParticlesAdded","_particlesOptions","_size","_calcSize","attributeFilter","shapeGenerator","emitterShapeManager","getShapeGenerator","_shape","generate","externalPause","externalPlay","_emitDelay","_emitParticles","_emit","elRect","singleParticlesOptions","hslAnimation","maxValues","colorFactor","shapePosData","randomPosition","replaceData","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","minLength","usedIndexes","includes","emittersOptions","ePosition","EmittersPlugin","emitterMode","defaultCount","shapeGeneratorss","ShapeManager","addShapeGenerator","getSupportedShapeGenerators","EmitterShapeBase","EmittersCircleShape","randomTheta","u","theta","atan","tan","generateTheta","maxRadius","randomRadius","EmittersCircleShapeGenerator","Sides","randomSquareCoordinate","EmittersSquareShape","halfW","halfH","side","TopLeft","TopRight","BottomRight","BottomLeft","EmittersSquareShapeGenerator","Trail","pauseOnStop","trailMode","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","RollMode","RollLight","Roll","enlighten","RollUpdater","rollHorizontal","rollVertical","rollOpt","both","alterType","updateRoll","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","spinOptions","spinPos","spinCenter","spinAcceleration","initSpin","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","spinClockwise","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","drawCircle","ColorUpdater","hAnimation","sAnimation","lAnimation","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","_parseString","hexColor","hexFixed","exec","parseInt","HslIndexes","HslColorManager","hsla","rgbResult","hslaToRgba","OpacityUpdater","opacityOptions","opacityAnimation","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","checkOutMode","_updateOutMode","RgbColorManager","rgbColor","SizeUpdater","sizeAnimation","loadBasic","addColorManager","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","addMover","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","emojiDataKey","previousAlpha","drawEmoji","emoji","randomIndexData","emojiOptions","fullSize","OffscreenCanvas","textBaseline","textAlign","fillText","transferToImageBitmap","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","Attract","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","hoverAttract","clickAttract","halfPI","processBounce","divBounce","bounceMode","bounceCb","querySelectorAll","elem","offsetLeft","offsetTop","tolerance","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","mouseBounce","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","dist","proximityFactor","currentColorRegex","loadImage","loading","Image","downloadSvgImage","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","increment","noData","DisposalMethod","GIFDataHeaders","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","concat","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","ApplicationExtension","applicationExtension","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","parseExtensionBlock","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","Replace","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","ImageDrawer","loadImageShape","addImage","images","offscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","Preload","ImagePreloaderPlugin","preloadOptions","existing","imageFunc","addLoadImageToEngine","preloader","addPlugin","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","updateLife","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","attractDistance","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","_linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","ids","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","d1","yi","d2","xi","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","drawPolygon","getCenter","getSidesData","polygon","PolygonDrawer","arguments","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","inset","starInset","drawStar","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","line","strokeText","TextDrawer","character","textData","drawText","TiltDirection","TiltAnimation","Tilt","TiltUpdater","tilt","cosDirection","sinDirection","tiltOptions","tiltDirection","tiltAnimation","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","wobbleOpt","wobble","angleSpeed","wobbleDistance","wobbleOptions","updateWobble","loadFull","loadDestroyUpdater","loadRollUpdater","loadTiltUpdater","loadTwinkleUpdater","loadWobbleUpdater","loadTextShape","loadExternalTrailInteraction","loadAbsorbersPlugin","addEmitterShapeGenerator","loadEmittersPlugin","emittersEngine","loadEmittersShapeCircle","loadEmittersShapeSquare","FONT_NAME","PARTICLE_CHARS","PARTICLE_COLOR","DesktopParticleOptions","char","MobileParticleOptions","setInit","useState","isMobile","setIsMobile","useEffect","navigator","maxTouchPoints","initParticlesEngine","useMemo","_createMdxContent","TsParticlesAnimation","wrapper","MDXLayout","assign","_provideComponents","components","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}