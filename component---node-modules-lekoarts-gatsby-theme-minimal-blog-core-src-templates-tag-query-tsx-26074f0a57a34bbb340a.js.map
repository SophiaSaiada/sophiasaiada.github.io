{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/tag.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx"],"names":["Tag","posts","pageContext","useSiteMetadata","tagsPath","basePath","title","name","sx","alignItems","justifyContent","flexFlow","variant","as","a","Link","to","replaceSlashes","mt","TagComponent","data","allPost","nodes","query"],"mappings":"yOA+CeA,EAnBH,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAA4B,EACjBC,cAAvBC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAK,SAAWJ,EAAYK,OACjC,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,KAAKC,GAAG,MACtBX,EAAYK,MAEf,YAAC,IAAOO,EAAR,CAAUD,GAAIE,OAAMP,GAAI,CAAEI,QAAS,mBAAqBI,GAAIC,YAAe,IAAIZ,EAAL,IAAiBD,IAA3F,cAIF,YAAC,IAAD,CAASH,MAAOA,EAAOO,GAAI,CAAEU,GAAI,CAAC,EAAG,QCzC3C,sCAEeC,UCQA,YAAkC,IAA/BC,EAA+B,EAA/BA,KAAMlB,EAAyB,EAAzBA,YACdmB,EAAYD,EAAZC,QAER,OAAO,kBAAC,EAAD,CAAKpB,MAAOoB,EAAQC,MAAOpB,YAAaA,KDXlCiB,IAEFI,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-26074f0a57a34bbb340a.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Flex, Heading } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\r\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\r\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\r\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\r\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\r\n\r\ntype TagProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  pageContext: {\r\n    isCreatedByStatefulCreatePages: boolean\r\n    slug: string\r\n    name: string\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nconst Tag = ({ posts, pageContext }: TagProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`תגית: ${pageContext.name}`} />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Heading variant=\"h2\" as=\"h2\">\r\n          {pageContext.name}\r\n        </Heading>\r\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\r\n          כל התגיות\r\n        </Styled.a>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import { graphql } from \"gatsby\"\r\nimport TagComponent from \"../components/tag\"\r\n\r\nexport default TagComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Tag from \"../../../components/tag\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: any\r\n  }\r\n  pageContext: any\r\n}\r\n\r\nexport default ({ data, pageContext }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Tag posts={allPost.nodes} pageContext={pageContext} />\r\n}\r\n"],"sourceRoot":""}