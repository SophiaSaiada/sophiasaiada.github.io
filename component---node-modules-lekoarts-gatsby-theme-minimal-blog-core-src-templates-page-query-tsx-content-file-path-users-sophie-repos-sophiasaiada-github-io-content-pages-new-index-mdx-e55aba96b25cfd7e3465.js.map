{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-users-sophie-repos-sophiasaiada-github-io-content-pages-new-index-mdx-e55aba96b25cfd7e3465.js","mappings":"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","sources":["webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://sophia-saiada/./src/components/background.tsx","webpack://sophia-saiada/./content/pages/new/index.mdx","webpack://sophia-saiada/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import React, { useEffect, useRef, useCallback } from \"react\";\n\nconst config = {\n  particleColor: \"#FF00FF\",\n  desktopMaxParticles: 85, // Max particles for desktop\n  mobileMaxParticles: 40, // Reduced max particles for mobile\n  baseSpeed: 0.5,\n  wiggleStrength: 3,\n  maxParallaxOffset: 25,\n  yParallaxFactor: 0.2,\n  minParticleSize: 12,\n  maxParticleSize: 22,\n  maxBaseShadowBlur: 12,\n  minBaseShadowBlur: 6,\n  shadowPulseAmount: 3\n};\n\nconst characters = [\"S\", \"O\", \"P\", \"H\", \"I\", \"E\"];\n\ninterface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\nfunction hexToRgb(hex: string): RGB {\n  let bigint = parseInt(hex.slice(1), 16);\n  let r = (bigint >> 16) & 255;\n  let g = (bigint >> 8) & 255;\n  let b = bigint & 255;\n  return { r, g, b };\n}\n\nclass Particle {\n  private canvasWidth: number;\n  private canvasHeight: number;\n  private parallaxOffsetXRef: React.MutableRefObject<number>;\n  private parallaxOffsetYRef: React.MutableRefObject<number>;\n\n  public baseX: number = 0;\n  public y: number = 0;\n  public char: string = \"\";\n  public speed: number = 0;\n  public opacity: number = 0;\n  public targetOpacity: number = 0;\n  public glowPhase: number = 0;\n  public life: number = 0;\n  public maxLife: number = 0;\n  public parallaxMultiplier: number = 0;\n  public size: number = 0;\n  public baseShadowBlur: number = 0;\n\n  constructor(\n    canvasWidth: number,\n    canvasHeight: number,\n    _parallaxOffsetXRef: React.MutableRefObject<number>,\n    _parallaxOffsetYRef: React.MutableRefObject<number>\n  ) {\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n    this.parallaxOffsetXRef = _parallaxOffsetXRef;\n    this.parallaxOffsetYRef = _parallaxOffsetYRef;\n    this.reset();\n  }\n\n  reset(): void {\n    this.baseX = Math.random() * this.canvasWidth;\n    this.y = this.canvasHeight + Math.random() * 150;\n    this.char = characters[Math.floor(Math.random() * characters.length)];\n    this.speed = (Math.random() * 0.5 + 0.2) * config.baseSpeed;\n    this.opacity = 0;\n    this.targetOpacity = Math.random() * 0.5 + 0.4;\n    this.glowPhase = Math.random() * Math.PI * 2;\n    this.life = 0;\n    this.maxLife = Math.random() * 1400 + 1200;\n\n    const parallaxStrengths: number[] = [0.15, 0.45, 0.75];\n    this.parallaxMultiplier =\n      parallaxStrengths[Math.floor(Math.random() * parallaxStrengths.length)];\n\n    this.size =\n      config.minParticleSize +\n      this.parallaxMultiplier *\n        (config.maxParticleSize - config.minParticleSize);\n    this.baseShadowBlur =\n      config.maxBaseShadowBlur -\n      this.parallaxMultiplier *\n        (config.maxBaseShadowBlur - config.minBaseShadowBlur);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    const wiggleOffset: number =\n      Math.sin(this.glowPhase * 0.5) * config.wiggleStrength;\n    const actualDrawX: number =\n      this.baseX +\n      wiggleOffset +\n      this.parallaxOffsetXRef.current * this.parallaxMultiplier;\n    const actualDrawY: number =\n      this.y + this.parallaxOffsetYRef.current * this.parallaxMultiplier;\n\n    ctx.shadowBlur =\n      this.baseShadowBlur + Math.sin(this.glowPhase) * config.shadowPulseAmount;\n    ctx.shadowColor = config.particleColor;\n\n    ctx.font = `${this.size}px 'Elder Magic', cursive`; // Using 'Elder Magic' font\n    const particleRgb: RGB = hexToRgb(config.particleColor);\n    ctx.fillStyle = `rgba(${particleRgb.r}, ${particleRgb.g}, ${particleRgb.b}, ${this.opacity})`;\n    ctx.textAlign = \"center\";\n    ctx.fillText(this.char, actualDrawX, actualDrawY);\n\n    ctx.shadowBlur = 0;\n  }\n\n  update(): void {\n    this.y -= this.speed;\n    this.life++;\n\n    if (this.opacity < this.targetOpacity && this.life < this.maxLife / 4.5) {\n      this.opacity += 0.015;\n    }\n\n    const fadeStartY: number = this.canvasHeight * 0.55;\n    const visualY: number =\n      this.y + this.parallaxOffsetYRef.current * this.parallaxMultiplier;\n\n    if (visualY < fadeStartY || this.life > this.maxLife * 0.6) {\n      this.opacity -= 0.0025;\n    }\n\n    this.glowPhase += 0.035;\n\n    const resetBoundaryY: number = this.canvasHeight * 0.1;\n    if (\n      this.opacity <= 0 ||\n      visualY < resetBoundaryY ||\n      this.life >= this.maxLife\n    ) {\n      this.reset();\n    }\n  }\n}\n\nconst FloatingRunesAnimation: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const particlesRef = useRef<Particle[]>([]);\n  const animationFrameIdRef = useRef<number | null>(null);\n\n  const parallaxOffsetXRef = useRef<number>(0);\n  const parallaxOffsetYRef = useRef<number>(0);\n  const canvasWidthRef = useRef<number>(0);\n  const canvasHeightRef = useRef<number>(0);\n  // Ref to store the effective max particles based on device\n  const effectiveMaxParticlesRef = useRef<number>(config.desktopMaxParticles);\n\n  const initParticles = useCallback((): void => {\n    if (canvasWidthRef.current === 0 || canvasHeightRef.current === 0) {\n      if (typeof window !== \"undefined\") {\n        canvasWidthRef.current = window.innerWidth;\n        canvasHeightRef.current = window.innerHeight;\n      } else {\n        canvasWidthRef.current = 1920;\n        canvasHeightRef.current = 1080;\n      }\n    }\n\n    particlesRef.current = [];\n    // Use the effectiveMaxParticlesRef for the loop limit\n    for (let i = 0; i < effectiveMaxParticlesRef.current; i++) {\n      particlesRef.current.push(\n        new Particle(\n          canvasWidthRef.current,\n          canvasHeightRef.current,\n          parallaxOffsetXRef,\n          parallaxOffsetYRef\n        )\n      );\n    }\n  }, []); // No dependencies needed as it reads from refs\n\n  const resizeCanvas = useCallback((): void => {\n    if (typeof window !== \"undefined\") {\n      canvasWidthRef.current = window.innerWidth;\n      canvasHeightRef.current = window.innerHeight;\n      if (canvasRef.current) {\n        canvasRef.current.width = canvasWidthRef.current;\n        canvasRef.current.height = canvasHeightRef.current;\n      }\n    }\n    initParticles();\n  }, [initParticles]);\n\n  const animate = useCallback((): void => {\n    if (!canvasRef.current || canvasWidthRef.current === 0) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvasWidthRef.current, canvasHeightRef.current);\n\n    particlesRef.current.forEach((particle) => {\n      particle.update();\n      particle.draw(ctx);\n    });\n\n    animationFrameIdRef.current = requestAnimationFrame(animate);\n  }, []);\n\n  const handleMouseMove = useCallback((event: MouseEvent): void => {\n    if (canvasWidthRef.current === 0) return;\n    const mouseNormX: number =\n      (event.clientX - canvasWidthRef.current / 2) /\n      (canvasWidthRef.current / 2);\n    const mouseNormY: number =\n      (event.clientY - canvasHeightRef.current / 2) /\n      (canvasHeightRef.current / 2);\n\n    parallaxOffsetXRef.current = -mouseNormX * config.maxParallaxOffset;\n    parallaxOffsetYRef.current =\n      -mouseNormY * config.maxParallaxOffset * config.yParallaxFactor;\n  }, []);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const isTouch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\n      // Set effective particle count based on device type\n      effectiveMaxParticlesRef.current = isTouch\n        ? config.mobileMaxParticles\n        : config.desktopMaxParticles;\n\n      resizeCanvas();\n      animate();\n\n      // Only add mouse parallax for non-touch devices\n      if (!isTouch) {\n        window.addEventListener(\"mousemove\", handleMouseMove);\n      }\n      window.addEventListener(\"resize\", resizeCanvas);\n\n      return () => {\n        if (!isTouch) {\n          window.removeEventListener(\"mousemove\", handleMouseMove);\n        }\n        window.removeEventListener(\"resize\", resizeCanvas);\n        if (animationFrameIdRef.current) {\n          cancelAnimationFrame(animationFrameIdRef.current);\n        }\n      };\n    }\n  }, [animate, handleMouseMove, resizeCanvas]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"absolute inset-0 z-0 pointer-events-none\"\n    />\n  );\n};\n\nexport default FloatingRunesAnimation;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport FloatingRunesAnimation from \"../../../src/components/background\";\nfunction _createMdxContent(props) {\n  return React.createElement(FloatingRunesAnimation);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/sophie/Repos/sophiasaiada.github.io/content/pages/new/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["_ref","data","page","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","_ref2","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","config","characters","Particle","canvasWidth","canvasHeight","_parallaxOffsetXRef","_parallaxOffsetYRef","baseX","y","char","speed","opacity","targetOpacity","glowPhase","life","maxLife","parallaxMultiplier","size","baseShadowBlur","this","parallaxOffsetXRef","parallaxOffsetYRef","reset","_proto","Math","random","floor","length","PI","parallaxStrengths","draw","ctx","wiggleOffset","sin","actualDrawX","current","actualDrawY","shadowBlur","shadowColor","font","particleRgb","hex","bigint","parseInt","slice","r","g","b","hexToRgb","fillStyle","textAlign","fillText","update","fadeStartY","visualY","resetBoundaryY","canvasRef","useRef","particlesRef","animationFrameIdRef","canvasWidthRef","canvasHeightRef","effectiveMaxParticlesRef","initParticles","useCallback","window","innerWidth","innerHeight","i","push","resizeCanvas","width","height","animate","getContext","clearRect","forEach","particle","requestAnimationFrame","handleMouseMove","event","mouseNormX","clientX","mouseNormY","clientY","useEffect","isTouch","navigator","maxTouchPoints","addEventListener","removeEventListener","cancelAnimationFrame","ref","className","_createMdxContent","FloatingRunesAnimation","wrapper","MDXLayout","Object","assign","_provideComponents","components","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}